openapi: 3.0.0
info:
  contact: {}
  license: {}
  title: CyberArkIAG
  version: 18a45ad8-77e8-4ecc-873e-787c6de10a60
externalDocs: {}
servers:
- url: http://example.com
paths:
  /PasswordVault/api/ExtendedAccounts/{AccountID}/overview:
    get:
      operationId: ExtendedAccountOverview
      parameters:
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: AccountID
        required: true
        schema:
          example: AccountID
          type: string
        style: simple
      responses:
        "200": {}
      summary: Extended Account Overview
      tags:
      - v2 API
  /PasswordVault/api/Accounts:
    get:
      description: |-
        This method returns a list of all the accounts in the Vault.

        The user who runs this web service requires **List Accounts** permissions in the Safe.
      operationId: GetAccounts
      parameters:
      - description: List of keywords to search for in accounts, separated by a space.
        explode: true
        in: query
        name: search
        required: true
        schema:
          example: DemoUser
          type: string
        style: form
      - description: 'Get accounts that either contain or start with the value specified
          in the Search parameter. Valid values: contains (default) or startswith.'
        explode: true
        in: query
        name: searchType
        required: true
        schema:
          example: contains
          type: string
        style: form
      - description: Property or properties by which to sort returned accounts, followed
          by asc (default) or desc to control sort direction. Separate multiple properties
          with commas, up to a maximum of three properties.
        explode: true
        in: query
        name: sort
        required: true
        schema:
          example: UserName
          type: string
        style: form
      - description: Offset of the first account that is returned in the collection
          of results.
        explode: true
        in: query
        name: offset
        required: true
        schema:
          type: number
        style: form
      - description: Maximum number of returned accounts. If not specified, the default
          value is 50. The maximum number that can be specified is 1000.
        explode: true
        in: query
        name: limit
        required: true
        schema:
          type: number
        style: form
      - description: Get accounts from a specific safe, using the safe name.
        explode: true
        in: query
        name: filter
        required: true
        schema:
          example: safeName eq {{Safe}}
          type: string
        style: form
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      responses:
        "200": {}
      summary: Get Accounts
      tags:
      - v2 API
    post:
      description: |-
        This method adds a new privileged account or SSH key to the Vault.

        To run this web service, a user requires the following permission in the Vault:

        * Add account

        AND either

        * Update password

        OR

        * Update password properties

        **Note:** You require an additional license to add SSH keys to the Vault. For more information, contact your CyberArk representative.
      operationId: AddAccount
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: "{\n\t\"name\": \"string\",\n\t\"address\": \"string\",\n\t\"\
              userName\": \"string\",\n\t\"platformId\": \"string\",\n\t\"safeName\"\
              : \"string\",\n\t\"secretType\": \"password\",\n\t\"secret\": \"string\"\
              ,\n\t\"platformAccountProperties\": {\n\t\t\"LogonDomain\": \"string\"\
              ,\n\t\t\"Port\": \"integer\"\n\t},\n\t\"secretManagement\": {\n\t\t\"\
              automaticManagementEnabled\": true,\n\t\t\"manualManagementReason\"\
              : \"string\"\n\t},\n\t\"remoteMachinesAccess\": {\n\t\t\"remoteMachines\"\
              : \"string\",\n\t\t\"accessRestrictedToRemoteMachines\": true\n\t}\n\
              }"
            schema:
              example: '{"name":"string","address":"string","userName":"string","platformId":"string","safeName":"string","secretType":"password","secret":"string","platformAccountProperties":{"LogonDomain":"string","Port":"integer"},"secretManagement":{"automaticManagementEnabled":true,"manualManagementReason":"string"},"remoteMachinesAccess":{"remoteMachines":"string","accessRestrictedToRemoteMachines":true}}'
              type: string
        description: |-
          This method adds a new privileged account or SSH key to the Vault.

          To run this web service, a user requires the following permission in the Vault:

          * Add account

          AND either

          * Update password

          OR

          * Update password properties

          **Note:** You require an additional license to add SSH keys to the Vault. For more information, contact your CyberArk representative.
        required: true
      responses:
        "200": {}
        "201":
          content:
            application/json; charset=utf-8:
              example:
                id: 29_7
                name: Database-MySQL-db2.joegarcia.dev-cluster02sqluser01
                address: db2.joegarcia.dev
                userName: cluster02sqluser01
                platformId: MySQLServer-DualAccounts
                safeName: D-MySQL-Users
                secretType: password
                platformAccountProperties:
                  Index: "1"
                  DualAccountStatus: Active
                  VirtualUsername: cluster02sqluser
                secretManagement:
                  automaticManagementEnabled: false
                  manualManagementReason: testing
                  lastModifiedTime: 1581084295
                createdTime: 1581084295
              schema:
                $ref: '#/components/schemas/201'
          description: Add Dual Account - 201 Created
      summary: Add Account
      tags:
      - v2 API
  /PasswordVault/api/Accounts/{AccountID}:
    delete:
      description: |-
        This method deletes a specific account in the Vault.

        The user who runs this web service requires **Delete Accounts** permissions in the Vault.
      operationId: DeleteAccount
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: AccountID
        required: true
        schema:
          example: AccountID
          type: string
        style: simple
      responses:
        "200": {}
      summary: Delete Account
      tags:
      - v2 API
    get:
      description: |-
        This method returns information about an account identified by its ID.

        The user who runs this web service requires **List Accounts** permissions in the Safe where the account is located inside the Vault.
      operationId: GetAccountDetails
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: AccountID
        required: true
        schema:
          example: AccountID
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              example:
                id: 24_3
                name: ANSIBLE-RESTAPI-USER
                address: 192.168.3.101
                userName: Svc_AnsibleREST
                platformId: JG-CyberArkVault
                safeName: D-CYBR-RESTAPI-ACCTS
                secretType: password
                secretManagement:
                  automaticManagementEnabled: true
                  status: success
                  lastModifiedTime: 1541876282
                createdTime: 1541876282
              schema:
                $ref: '#/components/schemas/200'
          description: 200 OK
      summary: Get Account Details
      tags:
      - v2 API
    patch:
      description: "This method updates an existing account's details. It is not mandatory\
        \ to send all the accountâ€™s details. Any changed values sent in the request\
        \ will be updated. All other properties values will remain the same.\n\nOn\
        \ each property, the following operations can be performed:\n\n* Replace -\
        \ replace the existing value of a property\n* Remove (to remove the property\
        \ from the account)\n* Add (to add that property to the account)\n\nIt is\
        \ possible to set several properties using the same command using the following\
        \ structure:\n\n```json\n[\n\t{\n\t    \"op\": \"replace\",\n\t    \"path\"\
        : \"/platformaccountproperties\",\n\t    \"value\": \"{\n\t        \\\"{PropertyID1}\\\
        \":\\\"{Value}\\\",\n\t        \\\"{PropertyID2}\\\":\\\"{Value}\\\",\n\t\
        \        \\\"{PropertyID3}\\\":\\\"{Value}\\\"\n\t    }\"\n\t}\n]\n```\n\n\
        When sending several operations on the same property, only the last operation\
        \ will affect the property."
      operationId: UpdateAccount
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: AccountID
        required: true
        schema:
          example: AccountID
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: "[\n\t{\n\t\t\"op\": \"replace\",\n\t\t\"path\": \"/address\"\
              ,\n\t\t\"value\": \"NewAddress\"\n\t},\n\t{\n\t\t\"op\": \"add\",\n\t\
              \t\"path\": \"/port\",\n\t\t\"value\": \"3306\"\n\t},\n\t{\n\t\t\"op\"\
              : \"remove\",\n\t\t\"path\": \"/ticketnumber\",\n\t\t\"value\": \"\"\
              \n\t}\n]"
            schema:
              example: '[{"op":"replace","path":"/address","value":"NewAddress"},{"op":"add","path":"/port","value":"3306"},{"op":"remove","path":"/ticketnumber","value":""}]'
              type: string
        description: "This method updates an existing account's details. It is not\
          \ mandatory to send all the accountâ€™s details. Any changed values sent in\
          \ the request will be updated. All other properties values will remain the\
          \ same.\n\nOn each property, the following operations can be performed:\n\
          \n* Replace - replace the existing value of a property\n* Remove (to remove\
          \ the property from the account)\n* Add (to add that property to the account)\n\
          \nIt is possible to set several properties using the same command using\
          \ the following structure:\n\n```json\n[\n\t{\n\t    \"op\": \"replace\"\
          ,\n\t    \"path\": \"/platformaccountproperties\",\n\t    \"value\": \"\
          {\n\t        \\\"{PropertyID1}\\\":\\\"{Value}\\\",\n\t        \\\"{PropertyID2}\\\
          \":\\\"{Value}\\\",\n\t        \\\"{PropertyID3}\\\":\\\"{Value}\\\"\n\t\
          \    }\"\n\t}\n]\n```\n\nWhen sending several operations on the same property,\
          \ only the last operation will affect the property."
        required: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              example:
                id: 29_3
                name: TEST-RESTAPI-uadmin
                address: NewAddress
                userName: u_admin
                platformId: WinDomain
                safeName: TEST-RESTAPI
                secretType: password
                secretManagement:
                  automaticManagementEnabled: true
                  lastModifiedTime: 1547468682
                createdTime: 1547468682
              schema:
                $ref: '#/components/schemas/200'
          description: 200 OK
      summary: Update Account
      tags:
      - v2 API
  /PasswordVault/WebServices/PIMServices.svc/Accounts/{AccountID}/Activities:
    get:
      description: This method returns the activities of a specific account that is
        identified by its account ID.
      operationId: GetAccountActivity
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: AccountID
        required: true
        schema:
          example: AccountID
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              example:
                GetAccountActivitiesResult:
                - AccountName: ANSIBLE-RESTAPI-USER
                  Activity: CPM Change Password
                  ActivityCode: 24
                  ClientID: CPM
                  MoreInfo: address=192.168.3.101;username=Svc_AnsibleREST;
                  Path: Root
                  Reason: ImmediateTask
                  Time: 11/10/2018 23:58:03
                  UserName: PasswordManagerNG
                - AccountName: ANSIBLE-RESTAPI-USER
                  Activity: Store password
                  ActivityCode: 294
                  ClientID: CPM
                  MoreInfo: ""
                  Path: Root
                  Reason: ""
                  Time: 11/10/2018 23:58:02
                  UserName: PasswordManagerNG
                - AccountName: ANSIBLE-RESTAPI-USER
                  Activity: Retrieve password
                  ActivityCode: 295
                  ClientID: CPM
                  MoreInfo: ""
                  Path: Root
                  Reason: CPM
                  Time: 11/10/2018 23:58:02
                  UserName: PasswordManagerNG
                - AccountName: ANSIBLE-RESTAPI-USER
                  Activity: Retrieve password
                  ActivityCode: 295
                  ClientID: CPM
                  MoreInfo: ""
                  Path: Root
                  Reason: CPM
                  Time: 11/10/2018 23:58:02
                  UserName: PasswordManagerNG
                - AccountName: ANSIBLE-RESTAPI-USER
                  Activity: Delete File Category
                  ActivityCode: 107
                  ClientID: PVWA
                  MoreInfo: LastTask
                  Path: Root
                  Reason: Old Value=[VerifyTask]
                  Time: 11/10/2018 23:57:41
                  UserName: mike
                - AccountName: ANSIBLE-RESTAPI-USER
                  Activity: Delete File Category
                  ActivityCode: 107
                  ClientID: PVWA
                  MoreInfo: CPMStatus
                  Path: Root
                  Reason: Old Value=[success]
                  Time: 11/10/2018 23:57:41
                  UserName: mike
                - AccountName: ANSIBLE-RESTAPI-USER
                  Activity: Delete File Category
                  ActivityCode: 107
                  ClientID: PVWA
                  MoreInfo: RetriesCount
                  Path: Root
                  Reason: Old Value=[-1]
                  Time: 11/10/2018 23:57:41
                  UserName: mike
                - AccountName: ANSIBLE-RESTAPI-USER
                  Activity: Add File Category
                  ActivityCode: 105
                  ClientID: PVWA
                  MoreInfo: ResetImmediately
                  Path: Root
                  Reason: Value=[ChangeTask]
                  Time: 11/10/2018 23:57:41
                  UserName: mike
                - AccountName: ANSIBLE-RESTAPI-USER
                  Activity: Retrieve password
                  ActivityCode: 295
                  ClientID: PVWA
                  MoreInfo: ""
                  Path: Root
                  Reason: '(Action: Show Password)'
                  Time: 11/10/2018 23:57:30
                  UserName: mike
                - AccountName: ANSIBLE-RESTAPI-USER
                  Activity: CPM Verify Password
                  ActivityCode: 22
                  ClientID: CPM
                  MoreInfo: address=192.168.3.101;username=Svc_AnsibleREST;
                  Path: Root
                  Reason: ImmediateTask
                  Time: 11/04/2018 15:49:12
                  UserName: PasswordManager
                - AccountName: ANSIBLE-RESTAPI-USER
                  Activity: Retrieve password
                  ActivityCode: 295
                  ClientID: CPM
                  MoreInfo: ""
                  Path: Root
                  Reason: CPM internal process
                  Time: 11/04/2018 15:49:12
                  UserName: PasswordManager
                - AccountName: ANSIBLE-RESTAPI-USER
                  Activity: Retrieve password
                  ActivityCode: 295
                  ClientID: CPM
                  MoreInfo: ""
                  Path: Root
                  Reason: CPM
                  Time: 11/04/2018 15:49:10
                  UserName: PasswordManager
                - AccountName: ANSIBLE-RESTAPI-USER
                  Activity: Delete File Category
                  ActivityCode: 107
                  ClientID: PVWA
                  MoreInfo: LastTask
                  Path: Root
                  Reason: Old Value=[VerifyTask]
                  Time: 11/04/2018 15:45:58
                  UserName: mike
                - AccountName: ANSIBLE-RESTAPI-USER
                  Activity: Delete File Category
                  ActivityCode: 107
                  ClientID: PVWA
                  MoreInfo: CPMStatus
                  Path: Root
                  Reason: Old Value=[success]
                  Time: 11/04/2018 15:45:58
                  UserName: mike
                - AccountName: ANSIBLE-RESTAPI-USER
                  Activity: Update File Category
                  ActivityCode: 106
                  ClientID: PVWA
                  MoreInfo: RetriesCount
                  Path: Root
                  Reason: Value=[-1] Old Value=[-1]
                  Time: 11/04/2018 15:45:58
                  UserName: mike
                - AccountName: ANSIBLE-RESTAPI-USER
                  Activity: Add File Category
                  ActivityCode: 105
                  ClientID: PVWA
                  MoreInfo: ResetImmediately
                  Path: Root
                  Reason: Value=[VerifyTask]
                  Time: 11/04/2018 15:45:58
                  UserName: mike
                - AccountName: ANSIBLE-RESTAPI-USER
                  Activity: Update File Category
                  ActivityCode: 106
                  ClientID: PVWA
                  MoreInfo: PolicyID
                  Path: Root
                  Reason: Value=[JG-CyberArkVault] Old Value=[CyberArk]
                  Time: 11/04/2018 15:45:51
                  UserName: mike
                - AccountName: ANSIBLE-RESTAPI-USER
                  Activity: Retrieve password
                  ActivityCode: 295
                  ClientID: AppPrv
                  MoreInfo: ""
                  Path: Root
                  Reason: Application provider background refresh job
                  Time: 10/21/2018 13:39:22
                  UserName: Prov_COMPONENTS
                - AccountName: ANSIBLE-RESTAPI-USER
                  Activity: Retrieve password
                  ActivityCode: 295
                  ClientID: AppPrv
                  MoreInfo: ""
                  Path: Root
                  Reason: AIM password request
                  Time: 10/21/2018 13:38:57
                  UserName: Prov_COMPONENTS
                - AccountName: ANSIBLE-RESTAPI-USER
                  Activity: CPM Verify Password
                  ActivityCode: 22
                  ClientID: CPM
                  MoreInfo: address=192.168.3.101;username=Svc_AnsibleREST;
                  Path: Root
                  Reason: ImmediateTask
                  Time: 10/21/2018 13:04:25
                  UserName: PasswordManager
                - AccountName: ANSIBLE-RESTAPI-USER
                  Activity: Retrieve password
                  ActivityCode: 295
                  ClientID: CPM
                  MoreInfo: ""
                  Path: Root
                  Reason: CPM internal process
                  Time: 10/21/2018 13:04:25
                  UserName: PasswordManager
                - AccountName: ANSIBLE-RESTAPI-USER
                  Activity: Retrieve password
                  ActivityCode: 295
                  ClientID: CPM
                  MoreInfo: ""
                  Path: Root
                  Reason: CPM
                  Time: 10/21/2018 13:04:24
                  UserName: PasswordManager
                - AccountName: ANSIBLE-RESTAPI-USER
                  Activity: Add File Category
                  ActivityCode: 105
                  ClientID: PVWA
                  MoreInfo: RetriesCount
                  Path: Root
                  Reason: Value=[-1]
                  Time: 10/21/2018 13:02:31
                  UserName: mike
                - AccountName: ANSIBLE-RESTAPI-USER
                  Activity: Add File Category
                  ActivityCode: 105
                  ClientID: PVWA
                  MoreInfo: ResetImmediately
                  Path: Root
                  Reason: Value=[VerifyTask]
                  Time: 10/21/2018 13:02:31
                  UserName: mike
                - AccountName: ANSIBLE-RESTAPI-USER
                  Activity: Add File Category
                  ActivityCode: 105
                  ClientID: PVWA
                  MoreInfo: CreationMethod
                  Path: Root
                  Reason: Value=[PVWA]
                  Time: 10/21/2018 13:02:23
                  UserName: mike
                - AccountName: ANSIBLE-RESTAPI-USER
                  Activity: Add File Category
                  ActivityCode: 105
                  ClientID: PVWA
                  MoreInfo: Address
                  Path: Root
                  Reason: Value=[192.168.3.101]
                  Time: 10/21/2018 13:02:23
                  UserName: mike
                - AccountName: ANSIBLE-RESTAPI-USER
                  Activity: Add File Category
                  ActivityCode: 105
                  ClientID: PVWA
                  MoreInfo: DeviceType
                  Path: Root
                  Reason: Value=[Application]
                  Time: 10/21/2018 13:02:22
                  UserName: mike
                - AccountName: ANSIBLE-RESTAPI-USER
                  Activity: Add File Category
                  ActivityCode: 105
                  ClientID: PVWA
                  MoreInfo: UserName
                  Path: Root
                  Reason: Value=[Svc_AnsibleREST]
                  Time: 10/21/2018 13:02:22
                  UserName: mike
                - AccountName: ANSIBLE-RESTAPI-USER
                  Activity: Add File Category
                  ActivityCode: 105
                  ClientID: PVWA
                  MoreInfo: PolicyID
                  Path: Root
                  Reason: Value=[CyberArk]
                  Time: 10/21/2018 13:02:22
                  UserName: mike
                - AccountName: ANSIBLE-RESTAPI-USER
                  Activity: Store password
                  ActivityCode: 294
                  ClientID: PVWA
                  MoreInfo: ""
                  Path: Root
                  Reason: ""
                  Time: 10/21/2018 13:02:22
                  UserName: mike
              schema:
                $ref: '#/components/schemas/200'
          description: 200 OK
      summary: Get Account Activity
      tags:
      - v2 API
  /PasswordVault/WebServices/PIMServices.svc/PendingAccounts:
    post:
      description: |-
        This method enables an account or SSH key that is discovered by an external scanner to be added as a pending account to the Accounts Feed. This facilitates the privileged account workflow, during which users can identify privileged accounts and determine which are onboarded to the Vault.

        **Note:** In order to add SSH keys to the Vault, you require an additional license. For more information, contact your CyberArk representative.
      operationId: AddPendingAccount
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: "{\n\t\"pendingAccount\": {\n\t\t\"UserName\":\"<user name>\"\
              ,\n\t\t\"Address\":\"<address>\",\n\t\t\"AccountDiscoveryDate\":\"<YYYY-MM-DDThh:mm:ssZ>\"\
              ,\n\t\t\"AccountEnabled\":\"<enabled/disabled>\", \n\t\t\"AccountOSGroups\"\
              :\"<group name>\",\n\t\t\"AccountType\":\"<domain/local>\",\n\t\t\"\
              Domain\":\"<domain name>\",\n\t\t\"PasswordNeverExpires\":\"<true/false>\"\
              ,\n\t\t\"OSVersion\":\"<OS version>\",\n\t\t\"OU\":\"<OU>\",\n\t\t\"\
              AccountCategory\":\"<Privileged/Non-privileged>\",\n\t\t\"UserDisplayName\"\
              :\"<user display name>\",\n\t\t\"AccountDescription\":\"<description>\"\
              ,\n\t\t\"GID\":\"<GID>\",\n\t\t\"UID\":\"<UID>\",\n\t\t\"OSType\":\"\
              <Windows/Unix>\",\n\t\t\"DiscoveryPlatformType\":\"<platform name>\"\
              ,\n\t\t\"MachineOSFamily\":\"<workstation/server>\",\n\t\t\"LastLogonDate\"\
              :\"<YYYY-MM-DDThh:mm:ssZ>\",\n\t\t\"LastPasswordSetDate\":\"<YYYY-MM-DDThh:mm:ssZ>\"\
              ,\n\t\t\"AccountExpirationDate\":\"<YYYY-MM-DDThh:mm:ssZ>\",\n\t\t\"\
              AccountCategoryCriteria\":\"<criteria>\"\n\t}\n}"
            schema:
              example: '{"pendingAccount":{"UserName":"<user name>","Address":"<address>","AccountDiscoveryDate":"<YYYY-MM-DDThh:mm:ssZ>","AccountEnabled":"<enabled/disabled>","AccountOSGroups":"<group
                name>","AccountType":"<domain/local>","Domain":"<domain name>","PasswordNeverExpires":"<true/false>","OSVersion":"<OS
                version>","OU":"<OU>","AccountCategory":"<Privileged/Non-privileged>","UserDisplayName":"<user
                display name>","AccountDescription":"<description>","GID":"<GID>","UID":"<UID>","OSType":"<Windows/Unix>","DiscoveryPlatformType":"<platform
                name>","MachineOSFamily":"<workstation/server>","LastLogonDate":"<YYYY-MM-DDThh:mm:ssZ>","LastPasswordSetDate":"<YYYY-MM-DDThh:mm:ssZ>","AccountExpirationDate":"<YYYY-MM-DDThh:mm:ssZ>","AccountCategoryCriteria":"<criteria>"}}'
              type: string
        description: |-
          This method enables an account or SSH key that is discovered by an external scanner to be added as a pending account to the Accounts Feed. This facilitates the privileged account workflow, during which users can identify privileged accounts and determine which are onboarded to the Vault.

          **Note:** In order to add SSH keys to the Vault, you require an additional license. For more information, contact your CyberArk representative.
        required: true
      responses:
        "200": {}
      summary: Add Pending Account
      tags:
      - v2 API
  /PasswordVault/api/Accounts/{AccountID}/LinkAccount:
    post:
      description: "This method enables a user to associate a linked account to an\
        \ existing source account. The linked account can be a Reconcile account,\
        \ Logon account, or other type of linked account that is defined in the platform\
        \ configuration.\n  \t\n_**Note:** The type of linked accounts that are allowed\
        \ are determined by the Platform settings. Each platform can support different\
        \ types of linked accounts._\n\nTo run this service, the user must have the\
        \ following Safe member authorizations:\n\n* List accounts - For both the\
        \ Safe of the linked account and the Safe of the source account\n* Update\
        \ account properties - For the Safe of the source account"
      operationId: LinkanAccount
      parameters:
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: AccountID
        required: true
        schema:
          example: AccountID
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: |-
              {
                  "Name": "ObjectName",
                  "ExtraPassID": "1/2/3",
                  "Folder": "Root"
              }
            schema:
              example: '{"Name":"ObjectName","ExtraPassID":"1/2/3","Folder":"Root"}'
              type: string
        description: "This method enables a user to associate a linked account to\
          \ an existing source account. The linked account can be a Reconcile account,\
          \ Logon account, or other type of linked account that is defined in the\
          \ platform configuration.\n  \t\n_**Note:** The type of linked accounts\
          \ that are allowed are determined by the Platform settings. Each platform\
          \ can support different types of linked accounts._\n\nTo run this service,\
          \ the user must have the following Safe member authorizations:\n\n* List\
          \ accounts - For both the Safe of the linked account and the Safe of the\
          \ source account\n* Update account properties - For the Safe of the source\
          \ account"
        required: true
      responses:
        "200": {}
      summary: Link an Account
      tags:
      - v2 API
  /PasswordVault/api/Accounts/AdHocConnect:
    post:
      description: |-
        This method allows you to connect through PSM without using an existing account, by returning settings that can be used with an RDP client application or for the HTML5 gateway.

        You must enable Privileged Session Monitoring and ad-hoc connection via PVWA configuration. For more details, see [Ad Hoc Connections](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/Latest/en/Content/PASIMP/Configuring-Secure-Connect.htm).
      operationId: Ad-HocConnectthroughPSM
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: "{\n\t\"UserName\":\"<User Name>\",\n\t\"Secret\":\"<password>\"\
              ,\n\t\"Address\":\"<Address>\",\n\t\"PlatformId\":\"<Secure Connect\
              \ Platform>\",\n\t\"extraFields\":{},\n\t\"PSMConnectPrerequisites\"\
              : {\n\t\t\"ConnectionComponent\":\"<Connection Component ID>\",\n\t\t\
              \"ConnectionType\":\"<RDPFile or PSMGW>\"\n\t}\n}"
            schema:
              example: '{"UserName":"<User Name>","Secret":"<password>","Address":"<Address>","PlatformId":"<Secure
                Connect Platform>","extraFields":{},"PSMConnectPrerequisites":{"ConnectionComponent":"<Connection
                Component ID>","ConnectionType":"<RDPFile or PSMGW>"}}'
              type: string
        description: |-
          This method allows you to connect through PSM without using an existing account, by returning settings that can be used with an RDP client application or for the HTML5 gateway.

          You must enable Privileged Session Monitoring and ad-hoc connection via PVWA configuration. For more details, see [Ad Hoc Connections](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/Latest/en/Content/PASIMP/Configuring-Secure-Connect.htm).
        required: true
      responses:
        "200": {}
      summary: Ad-Hoc Connect through PSM
      tags: []
  /PasswordVault/API/Accounts/{AccountID}/Change:
    post:
      description: |-
        This method marks an account for an immediate credentials change by the CPM to a new random value.

        The user who runs this web service requires the following permission in the Safe where the privileged account is stored:

        * Initiate CPM password management operations
      operationId: ChangePasswordImmediately
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: AccountID
        required: true
        schema:
          example: AccountID
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: "{\n\t\"ChangeEntireGroup\" : true\n}"
            schema:
              example: '{"ChangeEntireGroup":true}'
              type: string
        description: |-
          This method marks an account for an immediate credentials change by the CPM to a new random value.

          The user who runs this web service requires the following permission in the Safe where the privileged account is stored:

          * Initiate CPM password management operations
        required: true
      responses:
        "200": {}
      summary: Change Password Immediately
      tags: []
  /PasswordVault/api/Accounts/{AccountID}/Password/Update:
    post:
      description: |-
        This method enables users to set account credentials and change them in the Vault. This will not affect credentials on the target device.

        The user who runs this web service requires **Update password value** permission in the Safe where the privileged account is stored.
      operationId: ChangePasswordintheVaultOnly
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: AccountID
        required: true
        schema:
          example: AccountID
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: "{\n\t\"ChangeEntireGroup\": false,\n\t\"NewCredentials\": \"\
              <string>\"\n}"
            schema:
              example: '{"ChangeEntireGroup":false,"NewCredentials":"<string>"}'
              type: string
        description: |-
          This method enables users to set account credentials and change them in the Vault. This will not affect credentials on the target device.

          The user who runs this web service requires **Update password value** permission in the Safe where the privileged account is stored.
        required: true
      responses:
        "200": {}
      summary: Change Password in the Vault Only
      tags: []
  /passwordvault/api/Accounts/{AccountID}/SetNextPassword:
    post:
      description: |-
        This method enables users to set the account's credentials to use for the next CPM change.

        The user who runs this web service requires the following permissions in the Safe where the privileged account is stored:

        * Initiate CPM password management operations
        * Specify next password value
      operationId: ChangePassword,SetNextPassword
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: AccountID
        required: true
        schema:
          example: AccountID
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: "{\n\t\"ChangeImmediately\" : true,\n\t\"NewCredentials\": \"\
              <credentials>\"\n}"
            schema:
              example: '{"ChangeImmediately":true,"NewCredentials":"<credentials>"}'
              type: string
        description: |-
          This method enables users to set the account's credentials to use for the next CPM change.

          The user who runs this web service requires the following permissions in the Safe where the privileged account is stored:

          * Initiate CPM password management operations
          * Specify next password value
        required: true
      responses:
        "200": {}
      summary: Change Password, Set Next Password
      tags: []
  /PasswordVault/API/Accounts/{AccountID}/CheckIn:
    post:
      description: |-
        This method checks an exclusive account into the Vault.

        * If the account is managed automatically by the CPM, after it is checked in, the password is changed immediately.
        * If the account is managed manually, a notification is sent to a user who is authorized to change the password. The account is checked in automatically after it has been changed.

        The user who runs this web service requires the following permission in the Safe where the privileged account is stored:

        * Initiate CPM password management operations
      operationId: CheckInanExclusiveAccount
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: AccountID
        required: true
        schema:
          example: AccountID
          type: string
        style: simple
      responses:
        "200": {}
      summary: Check In an Exclusive Account
      tags: []
  /PasswordVault/API/Accounts/{AccountID}/PSMConnect:
    post:
      description: |-
        This method enables you to connect to an account through PSM (PSMConnect) using a connection method defined in the PVWA.

        A response header defines which connection method is returned.

        For more information, refer to [Privileged Session Management Interface](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/Latest/en/Content/PASIMP/Configuring-the-Privileged-Session-Management-Interface.htm).

        ## Header Parameter

        Parameter: Accept

        Type: String

        Description: The table below describes the expected response format depending on the value of the Accept header in the request, per connection method configuration (RDP File or PSM Gateway).

        | PVWA configuration | Optional values | Connection method |
        | --- | --- | --- |
        | RDP | application/json, application/octet-stream (default), `*/ *` | RDPFile (JSON), RDPFile (octet-stream raw) |
        | PSMGW | `* / *` | PSMGW (JSON) - Returns the HTML5 connection data. |

        **Note:** To use PSMGW, PSMGW must be configured before using this REST API in order to receive a PSMGW response.
      operationId: ConnectUsingPSM
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: header
        name: Accept
        required: true
        schema:
          example: RDP
          type: string
        style: simple
      - explode: false
        in: path
        name: AccountID
        required: true
        schema:
          example: AccountID
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: "{\n\t\"reason\":\"<Reason>\",\n\t\"TicketingSystemName\":\"\
              <Ticketing system>\",\n\t\"TicketId\":\"<Ticketid>\",\n\t\"ConnectionComponent\"\
              :\"<Connection component id>\",\n\t\"ConnectionParams\": {\n\t\t\"<Connection\
              \ parameter name>\": {\n\t\t\t\"value\":\"<Connection parameter value>\"\
              ,\n\t\t\t\"ShouldSave\":<true\\false>\n\t\t},\n\t\t\"<Connection parameter\
              \ name>\": {\n\t\t\t\"value\":\"<Connection parameter value>\",\n\t\t\
              \t\"ShouldSave\":<true\\false>\n\t\t}\n\t}\n}"
            schema:
              example: "{\n\t\"reason\":\"<Reason>\",\n\t\"TicketingSystemName\":\"\
                <Ticketing system>\",\n\t\"TicketId\":\"<Ticketid>\",\n\t\"ConnectionComponent\"\
                :\"<Connection component id>\",\n\t\"ConnectionParams\": {\n\t\t\"\
                <Connection parameter name>\": {\n\t\t\t\"value\":\"<Connection parameter\
                \ value>\",\n\t\t\t\"ShouldSave\":<true\\false>\n\t\t},\n\t\t\"<Connection\
                \ parameter name>\": {\n\t\t\t\"value\":\"<Connection parameter value>\"\
                ,\n\t\t\t\"ShouldSave\":<true\\false>\n\t\t}\n\t}\n}"
              type: string
        description: |-
          This method enables you to connect to an account through PSM (PSMConnect) using a connection method defined in the PVWA.

          A response header defines which connection method is returned.

          For more information, refer to [Privileged Session Management Interface](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/Latest/en/Content/PASIMP/Configuring-the-Privileged-Session-Management-Interface.htm).

          ## Header Parameter

          Parameter: Accept

          Type: String

          Description: The table below describes the expected response format depending on the value of the Accept header in the request, per connection method configuration (RDP File or PSM Gateway).

          | PVWA configuration | Optional values | Connection method |
          | --- | --- | --- |
          | RDP | application/json, application/octet-stream (default), `*/ *` | RDPFile (JSON), RDPFile (octet-stream raw) |
          | PSMGW | `* / *` | PSMGW (JSON) - Returns the HTML5 connection data. |

          **Note:** To use PSMGW, PSMGW must be configured before using this REST API in order to receive a PSMGW response.
        required: true
      responses:
        "200": {}
      summary: Connect Using PSM
      tags: []
  /PasswordVault/api/Accounts/{AccountID}/grantAdministrativeAccess:
    post:
      description: |-
        This method requests and receives access to a target Windows machine with administrative rights. The domain user who runs this web service will be added to the local Administrators group of the target machine.

        ## Supported target machine environments

        Just in Time access is supported on the following end user machine environments:

        * Windows Server 2012/2012R2/2016
        * Windows 8, Windows 10

        ## Configuration

        Configure Just in Time access as described in [Configure Just in Time Access](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/11.3/en/Content/PASIMP/adhoc_access_admin.htm).

        ## User permissions

        Make sure that all users who want to request access to the target Windows machine must have the following permission in the Safe:

        * List accounts
      operationId: GetJustinTimeAccess
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: AccountID
        required: true
        schema:
          example: AccountID
          type: string
        style: simple
      responses:
        "200": {}
      summary: Get Just in Time Access
      tags: []
  /PasswordVault/api/Accounts/{AccountID}/Password/Retrieve:
    post:
      description: |-
        This method enables users to retrieve the password or SSH key of an existing account that is identified by its Account ID. It enables users to specify a reason and ticket ID, if required.

        **Note:** The ability to retrieve credentials using this REST API is intended for human use only and is not recommended for applications or automated processes, where application-based authentication is required.

        For application or automated processes use cases, refer to the [AAM Credential Providers Online Help](https://docs.cyberark.com/Product-Doc/OnlineHelp/AAM-CP/Latest/en/Default.htm).
      operationId: GetPasswordValue
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: AccountID
        required: true
        schema:
          example: AccountID
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: "{\n\t\"reason\":\"<Reason>\",\n\t\"TicketingSystemName\": \"\
              <Ticketing system>\",\n\t\"TicketId\": \"<Ticketid>\",\n\t\"Version\"\
              : <version number>,\n\t\"ActionType\": \"<action type - show\\copy\\\
              connect>\n\t\"isUse\": <true\\false>,\n\t\"Machine\": \"<my remote machine\
              \ address>\"\n}"
            schema:
              example: "{\n\t\"reason\":\"<Reason>\",\n\t\"TicketingSystemName\":\
                \ \"<Ticketing system>\",\n\t\"TicketId\": \"<Ticketid>\",\n\t\"Version\"\
                : <version number>,\n\t\"ActionType\": \"<action type - show\\copy\\\
                connect>\n\t\"isUse\": <true\\false>,\n\t\"Machine\": \"<my remote\
                \ machine address>\"\n}"
              type: string
        description: |-
          This method enables users to retrieve the password or SSH key of an existing account that is identified by its Account ID. It enables users to specify a reason and ticket ID, if required.

          **Note:** The ability to retrieve credentials using this REST API is intended for human use only and is not recommended for applications or automated processes, where application-based authentication is required.

          For application or automated processes use cases, refer to the [AAM Credential Providers Online Help](https://docs.cyberark.com/Product-Doc/OnlineHelp/AAM-CP/Latest/en/Default.htm).
        required: true
      responses:
        "200": {}
      summary: Get Password Value
      tags: []
  /PasswordVault/API/Accounts/{AccountID}/Reconcile:
    post:
      description: |-
        This method marks an account for automatic reconciliation by the CPM.

        The user who runs this web service requires the following permission in the Safe where the privileged account is stored:

        * Initiate CPM password management operations
      operationId: ReconcilePassword
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: AccountID
        required: true
        schema:
          example: AccountID
          type: string
        style: simple
      responses:
        "200": {}
      summary: Reconcile Password
      tags: []
  /PasswordVault/API/Accounts/{AccountID}/Verify:
    post:
      description: |-
        This method marks an account for verification by the CPM, and can be used in versions from v9.10.

        The user who runs this web service requires the following permission in the Safe where the privileged account is stored:

        * Initiate CPM password management operations
      operationId: VerifyPassword
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: AccountID
        required: true
        schema:
          example: AccountID
          type: string
        style: simple
      responses:
        "200": {}
      summary: Verify Password
      tags: []
  /PasswordVault/WebServices/PIMServices.svc/Accounts/{AccountID}/ChangeCredentials:
    put:
      description: |-
        This method marks the account for an immediate password change by the CPM to a new random password.

        The user who runs this web service requires the following permission in the Safe where the privileged account is stored:

        * Initiate CPM password management operations
      operationId: ChangePassword
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: AccountID
        required: true
        schema:
          example: AccountID
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: "{\n\t\"ImmediateChangeByCPM\": <true/false>,\n\t\"ChangeCredsForGroup\"\
              : <true/false>\n}"
            schema:
              example: "{\n\t\"ImmediateChangeByCPM\": <true/false>,\n\t\"ChangeCredsForGroup\"\
                : <true/false>\n}"
              type: string
        description: |-
          This method marks the account for an immediate password change by the CPM to a new random password.

          The user who runs this web service requires the following permission in the Safe where the privileged account is stored:

          * Initiate CPM password management operations
        required: true
      responses:
        "200": {}
      summary: Change Password
      tags: []
  /PasswordVault/API/AccountGroups:
    get:
      description: "This method returns all the account groups in a specific Safe.\
        \ The user performing this task must have the following permissions in the\
        \ Safe:\r\n\r\n* Add accounts\r\n* Update account content\r\n* Update account\
        \ properties\r\n* Create folders"
      operationId: GetAccountGroupbySafe
      parameters:
      - explode: true
        in: query
        name: Safe
        required: true
        schema:
          example: '{{Safe}}'
          type: string
        style: form
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      responses:
        "200": {}
      summary: Get Account Group by Safe
      tags:
      - Account Groups
  /PasswordVault/API/AccountGroups/{GroupName}/Members:
    get:
      description: |-
        This method returns all the members of an existing account group. These accounts can be either password accounts or SSH Key accounts.

        __NOTE: All members of account groups must be stored in the same Safe as the group itself.__

        The user performing this task must have the following permissions in the Safe:

        * Add accounts
        * Update account content
        * Update account properties
        * Create folders
      operationId: GetAccountGroupMembers
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: GroupName
        required: true
        schema:
          example: GroupName
          type: string
        style: simple
      responses:
        "200": {}
      summary: Get Account Group Members
      tags:
      - Account Groups
  /API/AccountGroups/:
    post:
      description: |-
        This method enables application managers to define a new account group automatically, and manage accounts as part of a group.

        To create an account group, users require the following permissions in the Safe where the group is created:
        * Add accounts
        * Update account content
        * Update account properties
        * Create folders

        **Note:** _The following characters are not supported in URL values in the Body:_ **+ & % #**
      operationId: AddAccountGroup
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: "{\r\n  \"GroupName\":\"{{GroupName}}\",\r\n  \"GroupPlatform\"\
              :\"{{PlatformID}}\",\r\n  \"Safe\":\"{{Safe}}\"\r\n}"
            schema:
              example: '{"GroupName":"{{GroupName}}","GroupPlatform":"{{PlatformID}}","Safe":"{{Safe}}"}'
              type: string
        description: |-
          This method enables application managers to define a new account group automatically, and manage accounts as part of a group.

          To create an account group, users require the following permissions in the Safe where the group is created:
          * Add accounts
          * Update account content
          * Update account properties
          * Create folders

          **Note:** _The following characters are not supported in URL values in the Body:_ **+ & % #**
        required: true
      responses:
        "200": {}
      summary: Add Account Group
      tags:
      - Account Groups
  /API/AccountGroups/{GroupName}/Members:
    post:
      description: |-
        This method adds an account as a member to an existing account group.  The account can contain either a password or SSH key.  All members of an account group must be stored in the same Safe as the group itself.

        To add an account as a member to an account group, users require the following permissions to the Safe where the group is created:
        * Add accounts
        * Update account content
        * Update account properties

        **Note:** _The following characters are not support in URL values in the Body:_ **+ & % #**
      operationId: AddAccounttoAccountGroup
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: GroupName
        required: true
        schema:
          example: GroupName
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: |-
              {
                "AccountID":"{{AccountID}}"
              }
            schema:
              example: '{"AccountID":"{{AccountID}}"}'
              type: string
        description: |-
          This method adds an account as a member to an existing account group.  The account can contain either a password or SSH key.  All members of an account group must be stored in the same Safe as the group itself.

          To add an account as a member to an account group, users require the following permissions to the Safe where the group is created:
          * Add accounts
          * Update account content
          * Update account properties

          **Note:** _The following characters are not support in URL values in the Body:_ **+ & % #**
        required: true
      responses:
        "200": {}
      summary: Add Account to Account Group
      tags:
      - Account Groups
  /PasswordVault/API/AccountGroups/{GroupName}/Members/{AccountID}:
    delete:
      description: "This method removes an account member from an account group. This\
        \ account can be either a password account or an SSH Key account.\r\n\r\n\
        The user performing this task must have the following permissions in the Safe:\r\
        \n\r\n* Add accounts\r\n* Update account content\r\n* Update account properties\r\
        \n* Create folders"
      operationId: DeleteMemberfromAccountGroup
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: GroupName
        required: true
        schema:
          example: GroupName
          type: string
        style: simple
      - explode: false
        in: path
        name: AccountID
        required: true
        schema:
          example: AccountID
          type: string
        style: simple
      responses:
        "200": {}
      summary: Delete Member from Account Group
      tags:
      - Account Groups
  /passwordvault/api/bulkactions/accounts:
    get:
      description: |-
        This method gets the status of all bulk account uploads that the user performed.

        **Note:** Bulk account uploads are returned sorted by their creation time in descending order - from the most recent to the oldest. The bulk account uploads that are returned are ones that a specific user created and has authorization to view.
      operationId: GetAllBulkAccountUploadsforUser
      parameters:
      - description: status - returns all bulk account uploads that meet the required
          status
        explode: true
        in: query
        name: filter
        required: true
        schema:
          type: number
        style: form
      - description: number of accounts to return, starting from first account
        explode: true
        in: query
        name: limit
        required: true
        schema:
          type: number
        style: form
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      responses:
        "200": {}
      summary: Get All Bulk Account Uploads for User
      tags:
      - Bulk Upload of Accounts
    post:
      description: "This method allows a developer to add multiple accounts to existing\
        \ Safes. The response contains the ID of the bulk account upload that was\
        \ performed.\n  \t\n**Note:** This option is only available if you have **Add\
        \ accounts**, **Update account content**, and **Update account properties**\
        \ authorization in at least one Safe."
      operationId: CreateBulkUploadofAccounts
      parameters:
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: |-
              {
                  "source": "filename.csv",
                  "accountsList": [
                      {
                          "uploadIndex": "1",
                          "username": "JohnDoe",
                          "address": "192.0.2.0",
                          "platformId": "WinDomain",
                          "safeName": "WinDomainSafe",
                          "secret": "123456",
                          "platformAccountProperties": {
                              "port": "111"
                          },
                          "secretManagement": {
                              "automaticManagementEnabled": true,
                              "manualManagementReason": ""
                          },
                          "remoteMachinesAccess": {
                              "accessRestrictedToRemoteMachines": true,
                              "remoteMachines": "example.com"
                          },
                          "groupName": "DomainGroup"
                      },
                      {
                          "uploadIndex": "2",
                          "username": "JaneDoe",
                          "address": "198.51.100.0",
                          "platformId": "WinDesktopLocal",
                          "safeName": "WinUsersSafe",
                          "secret": "123456",
                          "platformAccountProperties": {
                              "port": "222"
                          },
                          "secretManagement": {
                              "automaticManagementEnabled": true,
                              "manualManagementReason": ""
                          },
                          "remoteMachinesAccess": {
                              "accessRestrictedToRemoteMachines": true,
                              "remoteMachines": "example.net"
                          },
                          "groupName": "WinGroup"
                      }
                  ]
              }
            schema:
              example: '{"source":"filename.csv","accountsList":[{"uploadIndex":"1","username":"JohnDoe","address":"192.0.2.0","platformId":"WinDomain","safeName":"WinDomainSafe","secret":"123456","platformAccountProperties":{"port":"111"},"secretManagement":{"automaticManagementEnabled":true,"manualManagementReason":""},"remoteMachinesAccess":{"accessRestrictedToRemoteMachines":true,"remoteMachines":"example.com"},"groupName":"DomainGroup"},{"uploadIndex":"2","username":"JaneDoe","address":"198.51.100.0","platformId":"WinDesktopLocal","safeName":"WinUsersSafe","secret":"123456","platformAccountProperties":{"port":"222"},"secretManagement":{"automaticManagementEnabled":true,"manualManagementReason":""},"remoteMachinesAccess":{"accessRestrictedToRemoteMachines":true,"remoteMachines":"example.net"},"groupName":"WinGroup"}]}'
              type: string
        description: "This method allows a developer to add multiple accounts to existing\
          \ Safes. The response contains the ID of the bulk account upload that was\
          \ performed.\n  \t\n**Note:** This option is only available if you have\
          \ **Add accounts**, **Update account content**, and **Update account properties**\
          \ authorization in at least one Safe."
        required: true
      responses:
        "200": {}
      summary: Create Bulk Upload of Accounts
      tags:
      - Bulk Upload of Accounts
  /passwordvault/api/bulkactions/accounts/{BulkID}:
    get:
      description: "This method returns the result of the bulk account upload, which\
        \ is identified by the ID of the bulk account upload. When the upload has\
        \ finished, the API returns the result. The result contains a list of all\
        \ the accounts that succeeded or failed to upload.\n  \t\n\n**Note:** Only\
        \ the user that created the bulk account upload can receive the result of\
        \ the upload using this API."
      operationId: GetBulkAccountUploadResult
      parameters:
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: BulkID
        required: true
        schema:
          example: BulkID
          type: string
        style: simple
      responses:
        "200": {}
      summary: Get Bulk Account Upload Result
      tags:
      - Bulk Upload of Accounts
  /passwordvault/api/DiscoveredAccounts/{AccountID}:
    get:
      description: |-
        This method returns information about a discovered account and its dependencies from the Pending Accounts list. The discovered account is identified by its ID.

        To run this web service, the user must be a member of the Vault admins group.

        **Note:** Discovered accounts that were onboarded either manually or automatically, according to predefined rules, won't be returned using this method.
      operationId: GetDiscoveredAccountDetails
      parameters:
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: AccountID
        required: true
        schema:
          example: AccountID
          type: string
        style: simple
      responses:
        "200": {}
      summary: Get Discovered Account Details
      tags: []
  /passwordvault/api/DiscoveredAccounts:
    get:
      description: "This method returns a list of all the discovered accounts from\
        \ the Pending Accounts list. To run this web service, the user must be a member\
        \ of the Vault admins group.\n  \t\n**Note:** Discovered accounts that were\
        \ onboarded either manually or automatically, according to predefined rules,\
        \ won't be returned using this method.\n\nFor more information on available\
        \ filters, please visit [Filter Parameters](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/11.6/en/Content/WebServices/Get-discovered-accounts.htm#filter-parameters)\
        \ in the CyberArk API Documentation."
      operationId: GetDiscoveredAccounts
      parameters:
      - description: search accounts using platformType, privileged, and/or accountEnabled
          values
        explode: true
        in: query
        name: filter
        required: true
        schema:
          example: platformType eq Windows Server Local AND privileged eq true AND
            accountEnabled eq true
          type: string
        style: form
      - description: search is supported for username and address
        explode: true
        in: query
        name: search
        required: true
        schema:
          example: admin
          type: string
        style: form
      - description: keyword is contained (contains, DEFAULT) or beginning (startswith)
        explode: true
        in: query
        name: searchType
        required: true
        schema:
          example: contains
          type: string
        style: form
      - description: the offset of the first returned account in the list of results
        explode: true
        in: query
        name: offset
        required: true
        schema:
          type: number
        style: form
      - description: the maximum number of accounts to return (maximum value allowed
          is 1000)
        explode: true
        in: query
        name: limit
        required: true
        schema:
          type: number
        style: form
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      responses:
        "200": {}
      summary: Get Discovered Accounts
      tags: []
  /PasswordVault/api/DiscoveredAccounts:
    post:
      description: |-
        This method adds newly discovered accounts and their dependencies.

        | Action | Description |
        | --- | --- |
        | Discovered account | Discovered accounts are added to the Pending Accounts list. |
        | Discovered dependency | Discovered dependencies are added to the Pending Accounts list or are automatically added to the corresponding master account that has already been onboarded. |
        | Automatic onboarding | Discovered accounts are onboarded according to matching onboarding rules. If automatic onboarding fails for any reason, the account is added to the Pending Accounts list. |

        Currently, Private SSH Keys are not supported.

        The user who runs this web service requires the following users and permissions:

        To add pending accounts:

        * **User:** Owner of PasswordManager_Pending Safe
        * **Permissions:**
          * Add account
          * List files
          * Update account properties

        To onboard the account:

        * **User:** Owner of the target Safe of the onboarding rule.
        * **Permissions:**
          * Add account
          * Update account properties
          * Initiate CPM account management operations
      operationId: AddDiscoveredAccounts(v10.8+)
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: |-
              [
                  {
                      "userName": "{{Username}}",
                      "address": "{{Address}}",
                      "platformTypeAccountProperties": {
                          "SID": "S-1-5-21-304654729-3147011263-1431158397-3154"
                      },
                      "accountEnabled": true,
                      "osGroups": "Backup Operators,IIS_IUSRS,Network Configuration Operators",
                      "platformType": "{{PlatformName}}",
                      "domain": "example.com",
                      "lastLogonDateTime": "1530635686",
                      "lastPasswordSetDateTime": "1530635786",
                      "passwordNeverExpires": false,
                      "osVersion": "Windows Server 2012 R2 Standard",
                      "privileged": false,
                      "userDisplayName": "User Display Name",
                      "description": "User Description",
                      "passwordExpirationDateTime": "1530645686",
                      "osFamily": "Server",
                      "OrganizationalUnit": "CN=Users,DC=example,DC=com",
                      "additionalProperties": {
                          "Port": 445,
                          "UserDN": "CN=user1,CN=Users,DC=example,DC=com"
                      },
                      "Dependencies": [
                          {
                              "name": "ServiceDep",
                              "address": "{{Address}}",
                              "type": "Windows Service"
                          }
                      ]
                  },
                  {
                      "userName": "amazon_accesskey_user",
                      "address": "aws.com",
                      "discoveryDate": "2018-05-03T13:00:00Z",
                      "platformType": "AWS Access Keys",
                      "privileged": true,
                      "platformTypeAccountProperties": {
                          "awsAccessKeyID": "ASASASASSA",
                          "awsAccountID": "123123123123"
                      }
                  },
                  {
                      "userName": "amazon_dashboard_user",
                      "address": "aws.com",
                      "discoveryDate": "2018-05-03T13:00:00Z",
                      "platformType": "AWS",
                      "privileged": true,
                      "platformTypeAccountProperties": {
                          "awsAccountID": "123123123123"
                      }
                  },
                  {
                      "userName": string,
                      "address": string,
                      "discoveryDate": "1530635689",
                      "platformType": "Azure Password Management",
                      "accountEnabled": true,
                      "privileged": true,
                      "privilegedCriteria": string,
                      "platformTypeAccountProperties": {
                          "activeDirectoryID": string
                      }
                  }
              ]
            schema:
              example: |-
                [
                    {
                        "userName": "{{Username}}",
                        "address": "{{Address}}",
                        "platformTypeAccountProperties": {
                            "SID": "S-1-5-21-304654729-3147011263-1431158397-3154"
                        },
                        "accountEnabled": true,
                        "osGroups": "Backup Operators,IIS_IUSRS,Network Configuration Operators",
                        "platformType": "{{PlatformName}}",
                        "domain": "example.com",
                        "lastLogonDateTime": "1530635686",
                        "lastPasswordSetDateTime": "1530635786",
                        "passwordNeverExpires": false,
                        "osVersion": "Windows Server 2012 R2 Standard",
                        "privileged": false,
                        "userDisplayName": "User Display Name",
                        "description": "User Description",
                        "passwordExpirationDateTime": "1530645686",
                        "osFamily": "Server",
                        "OrganizationalUnit": "CN=Users,DC=example,DC=com",
                        "additionalProperties": {
                            "Port": 445,
                            "UserDN": "CN=user1,CN=Users,DC=example,DC=com"
                        },
                        "Dependencies": [
                            {
                                "name": "ServiceDep",
                                "address": "{{Address}}",
                                "type": "Windows Service"
                            }
                        ]
                    },
                    {
                        "userName": "amazon_accesskey_user",
                        "address": "aws.com",
                        "discoveryDate": "2018-05-03T13:00:00Z",
                        "platformType": "AWS Access Keys",
                        "privileged": true,
                        "platformTypeAccountProperties": {
                            "awsAccessKeyID": "ASASASASSA",
                            "awsAccountID": "123123123123"
                        }
                    },
                    {
                        "userName": "amazon_dashboard_user",
                        "address": "aws.com",
                        "discoveryDate": "2018-05-03T13:00:00Z",
                        "platformType": "AWS",
                        "privileged": true,
                        "platformTypeAccountProperties": {
                            "awsAccountID": "123123123123"
                        }
                    },
                    {
                        "userName": string,
                        "address": string,
                        "discoveryDate": "1530635689",
                        "platformType": "Azure Password Management",
                        "accountEnabled": true,
                        "privileged": true,
                        "privilegedCriteria": string,
                        "platformTypeAccountProperties": {
                            "activeDirectoryID": string
                        }
                    }
                ]
              type: string
        description: |-
          This method adds newly discovered accounts and their dependencies.

          | Action | Description |
          | --- | --- |
          | Discovered account | Discovered accounts are added to the Pending Accounts list. |
          | Discovered dependency | Discovered dependencies are added to the Pending Accounts list or are automatically added to the corresponding master account that has already been onboarded. |
          | Automatic onboarding | Discovered accounts are onboarded according to matching onboarding rules. If automatic onboarding fails for any reason, the account is added to the Pending Accounts list. |

          Currently, Private SSH Keys are not supported.

          The user who runs this web service requires the following users and permissions:

          To add pending accounts:

          * **User:** Owner of PasswordManager_Pending Safe
          * **Permissions:**
            * Add account
            * List files
            * Update account properties

          To onboard the account:

          * **User:** Owner of the target Safe of the onboarding rule.
          * **Permissions:**
            * Add account
            * Update account properties
            * Initiate CPM account management operations
        required: true
      responses:
        "200": {}
      summary: Add Discovered Accounts (v10.8+)
      tags: []
  /PasswordVault/API/auth/SAML/Logon:
    post:
      description: |-
        This method authenticates a user to the Vault using SAML authentication and returns a token that can be used in subsequent web services calls.

        [Example PowerShell Code is available here](https://gist.github.com/infamousjoeg/b44faa299ec3de65bdd1d3b8474b0649)
      operationId: Logon
      parameters:
      - description: Boolean value
        explode: true
        in: query
        name: concurrentSession
        required: true
        schema:
          example: "true"
          type: string
        style: form
      - description: Never should be false
        explode: true
        in: query
        name: apiUse
        required: true
        schema:
          example: "true"
          type: string
        style: form
      - description: The SAML Token returned from your IdP
        explode: true
        in: query
        name: SAMLResponse
        required: true
        schema:
          example: '{{SAMLToken}}'
          type: string
        style: form
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/x-www-form-urlencoded
          type: string
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            example: ""
            schema:
              example: ""
              type: string
        description: |-
          This method authenticates a user to the Vault using SAML authentication and returns a token that can be used in subsequent web services calls.

          [Example PowerShell Code is available here](https://gist.github.com/infamousjoeg/b44faa299ec3de65bdd1d3b8474b0649)
        required: true
      responses:
        "200": {}
      summary: Logon
      tags:
      - SAML Authentication
  /PasswordVault/api/auth/SAML/Logoff:
    post:
      description: This method logs off the user and removes the Vault session. This
        web service is used to log off when the user authenticated with SAML authentication.
      operationId: Logoff
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{SAMLToken}}'
          type: string
        style: simple
      responses:
        "200": {}
      summary: Logoff
      tags:
      - SAML Authentication
  /PasswordVault/API/Auth/CyberArk/Logon:
    post:
      description: This method authenticates a user to the Vault and returns a token
        that can be used in subsequent web services calls. In addition, this method
        enables you to set a new password.
      operationId: Logon-CyberArkAuthentication
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: "{\n\t\"username\": \"{{apiUsername}}\",\n\t\"password\": \"\
              {{apiPassword}}\",\n\t//\"newPassword\": \"<optional>\",\n\t\"concurrentSession\"\
              : \"true\"\n}"
            schema:
              example: "{\n\t\"username\": \"{{apiUsername}}\",\n\t\"password\": \"\
                {{apiPassword}}\",\n\t//\"newPassword\": \"<optional>\",\n\t\"concurrentSession\"\
                : \"true\"\n}"
              type: string
        description: This method authenticates a user to the Vault and returns a token
          that can be used in subsequent web services calls. In addition, this method
          enables you to set a new password.
        required: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema: {}
          description: 200 OK
      summary: Logon - CyberArk Authentication
      tags:
      - SAML Authentication
  /PasswordVault/API/Auth/LDAP/Logon:
    post:
      description: This method authenticates a user to the Vault and returns a token
        that can be used in subsequent web services calls. In addition, this method
        enables you to set a new password.
      operationId: Logon-LDAPAuthentication
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: "{\n\t\"username\": \"{{apiUsername}}\",\n\t\"password\": \"\
              {{apiPassword}}\",\n\t//\"newPassword\": \"<optional>\",\n\t\"concurrentSession\"\
              : \"true\"\n}"
            schema:
              example: "{\n\t\"username\": \"{{apiUsername}}\",\n\t\"password\": \"\
                {{apiPassword}}\",\n\t//\"newPassword\": \"<optional>\",\n\t\"concurrentSession\"\
                : \"true\"\n}"
              type: string
        description: This method authenticates a user to the Vault and returns a token
          that can be used in subsequent web services calls. In addition, this method
          enables you to set a new password.
        required: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema: {}
          description: 200 OK
      summary: Logon - LDAP Authentication
      tags:
      - SAML Authentication
  /PasswordVault/API/Auth/radius/Logon:
    post:
      description: This method authenticates a user to the Vault and returns a token
        that can be used in subsequent web services calls. In addition, this method
        enables you to set a new password.
      operationId: Logon-RADIUSAuthentication
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: "{\n\t\"Username\": \"{{apiUsername}}\",\n\t\"Password\": \"\
              {{apiPassword}}\",\n\t\"concurrentSessions\": \"true\"\n}"
            schema:
              example: '{"Username":"{{apiUsername}}","Password":"{{apiPassword}}","concurrentSessions":"true"}'
              type: string
        description: This method authenticates a user to the Vault and returns a token
          that can be used in subsequent web services calls. In addition, this method
          enables you to set a new password.
        required: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema: {}
          description: 200 OK
      summary: Logon - RADIUS Authentication
      tags:
      - SAML Authentication
  /PasswordVault/API/auth/Windows/Logon:
    post:
      description: This method authenticates a user to the Vault and returns a token
        that can be used in subsequent web services calls. In addition, this method
        enables you to set a new password.
      operationId: Logon-WindowsAuthentication
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: "{\n\t\"username\": \"{{apiUsername}}\",\n\t\"password\": \"\
              {{apiPassword}}\",\n\t\"concurrentSessions\": \"false\"\n}"
            schema:
              example: '{"username":"{{apiUsername}}","password":"{{apiPassword}}","concurrentSessions":"false"}'
              type: string
        description: This method authenticates a user to the Vault and returns a token
          that can be used in subsequent web services calls. In addition, this method
          enables you to set a new password.
        required: true
      responses:
        "200": {}
      summary: Logon - Windows Authentication
      tags:
      - SAML Authentication
  /PasswordVault/API/Auth/Logoff:
    post:
      description: This method logs off the user and removes the Vault session.
      operationId: Logoff5
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            example: []
            schema:
              properties: {}
              type: object
        description: This method logs off the user and removes the Vault session.
        required: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              example:
                LogoffUrl: ""
              schema:
                $ref: '#/components/schemas/200'
          description: 200 OK
      summary: Logoff
      tags:
      - SAML Authentication
  /PasswordVault/WebServices/auth/Shared/RestfulAuthenticationService.svc/Logon:
    post:
      description: |-
        Shared authentication is based on a user credential file that is stored in the PVWA web server. During shared authentication, only the user defined in the credential file can log on to the PVWA, but multiple users can use the logon token.

        This type of authentication **requires** the application using the REST services to manage the users as the Vault can't identify which specific user performs each action.

        Multiple concurrent connections can be created using the same token, without affecting each other.

        The shared user is defined in a user credential file, whose location is specified in the WSCredentialFile parameter, in the appsettings section of the PVWAweb.config file:

        ```
        <add key="WSCredentialFile" value="C:\CyberArk\Password Vault Web Access\CredFiles\WSUser.ini"/>
        ```

        * Make sure that this user can access the PVWA interface.
        * Make sure the user only has the permissions in the Vault that they require.

        For information about securing communication when using the SDK, refer to the following:

        * [Securing application-to-REST communication](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/Latest/en/Content/SDK/Securing%20Communication.htm)
        * [Configuring client authentication via certificates](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/Latest/en/Content/SDK/Configuring%20Client%20Authentication%20via%20Client%20Certificates.htm)

        This method authenticates to the Vault with a shared webservices user and returns a token that will be used in subsequent web services calls.

        This is supported for CyberArk authentication only, and not for third party authentication.
      operationId: Logon0
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: ""
            schema:
              example: ""
              type: string
        description: |-
          Shared authentication is based on a user credential file that is stored in the PVWA web server. During shared authentication, only the user defined in the credential file can log on to the PVWA, but multiple users can use the logon token.

          This type of authentication **requires** the application using the REST services to manage the users as the Vault can't identify which specific user performs each action.

          Multiple concurrent connections can be created using the same token, without affecting each other.

          The shared user is defined in a user credential file, whose location is specified in the WSCredentialFile parameter, in the appsettings section of the PVWAweb.config file:

          ```
          <add key="WSCredentialFile" value="C:\CyberArk\Password Vault Web Access\CredFiles\WSUser.ini"/>
          ```

          * Make sure that this user can access the PVWA interface.
          * Make sure the user only has the permissions in the Vault that they require.

          For information about securing communication when using the SDK, refer to the following:

          * [Securing application-to-REST communication](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/Latest/en/Content/SDK/Securing%20Communication.htm)
          * [Configuring client authentication via certificates](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/Latest/en/Content/SDK/Configuring%20Client%20Authentication%20via%20Client%20Certificates.htm)

          This method authenticates to the Vault with a shared webservices user and returns a token that will be used in subsequent web services calls.

          This is supported for CyberArk authentication only, and not for third party authentication.
        required: true
      responses:
        "200": {}
      summary: Logon
      tags:
      - Shared Logon Authentication
  /PasswordVault/WebServices/auth/Shared/RestfulAuthenticationService.svc/Logoff:
    post:
      description: This method logs off the shared user and removes the Vault session.
      operationId: Logoff1
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      responses:
        "200": {}
      summary: Logoff
      tags:
      - Shared Logon Authentication
  /PasswordVault/api/Configuration/OIDC/Providers:
    get:
      description: This method returns a list of all OIDC Identity Providers. Any
        user who is a member of the Vault admins group can run this web service.
      operationId: GetAllOpenIDConnectIdentityProviders
      parameters:
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      responses:
        "200": {}
      summary: Get All OpenID Connect Identity Providers
      tags:
      - OpenID Connect Identity Provider
    post:
      description: |-
        This method creates an OpenID Connect (OIDC) Identity Provider in the Vault. Any user who is a member of the Vault admins group can run this web service.

        **NOTE:** This API must be used with the Add authentication method API in order to have a complete authentication configuration.

        When you add an OIDC Identity Provider, you must also add the provider to the list of authentication methods using the same ID, and add the provider's base URL to the access restriction list by using the following APIs:

        * Add authentication method
        * Add allowed referrer
      operationId: AddOpenIDConnectIdentityProvider
      parameters:
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: |-
              {
                  "id": "opserver",
                  "authenticationFlow": "Code",
                  "discoveryEndpointUrl": "https://Domain.com/OPServer/.well-known/openid-configuration",
                  "clientId": "pvwa",
                  "clientSecret": "secret",
                  "clientSecretMethod": "basic"
              }
            schema:
              example: '{"id":"opserver","authenticationFlow":"Code","discoveryEndpointUrl":"https://Domain.com/OPServer/.well-known/openid-configuration","clientId":"pvwa","clientSecret":"secret","clientSecretMethod":"basic"}'
              type: string
        description: |-
          This method creates an OpenID Connect (OIDC) Identity Provider in the Vault. Any user who is a member of the Vault admins group can run this web service.

          **NOTE:** This API must be used with the Add authentication method API in order to have a complete authentication configuration.

          When you add an OIDC Identity Provider, you must also add the provider to the list of authentication methods using the same ID, and add the provider's base URL to the access restriction list by using the following APIs:

          * Add authentication method
          * Add allowed referrer
        required: true
      responses:
        "200": {}
      summary: Add OpenID Connect Identity Provider
      tags:
      - OpenID Connect Identity Provider
  /PasswordVault/api/Configuration/OIDC/Providers/{authID}:
    delete:
      description: |-
        This method deletes a specific OIDC Identity Provider. Any user who is a member of the Vault admins group can run this web service.

        **NOTE:** This API must be used with the Delete authentication method API in order to have a complete authentication configuration.

        For example, when you delete an OIDC Identity provider, you must also delete the provider from the list of authentication methods using the same ID.
      operationId: DeleteOpenIDConnectIdentityProvider
      parameters:
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: authID
        required: true
        schema:
          example: authID
          type: string
        style: simple
      responses:
        "200": {}
      summary: Delete OpenID Connect Identity Provider
      tags:
      - OpenID Connect Identity Provider
    get:
      description: This method returns a specific OIDC Identity Provider. Any user
        who is a member of the Vault admins group can run this web service.
      operationId: GetSpecificOpenIDConnectIdentityProvider
      parameters:
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: authID
        required: true
        schema:
          example: authID
          type: string
        style: simple
      responses:
        "200": {}
      summary: Get Specific OpenID Connect Identity Provider
      tags:
      - OpenID Connect Identity Provider
    put:
      description: This method updates an existing OIDC Identity Provider. Any user
        who is a member of the Vault admins group can run this web service.
      operationId: UpdateOpenIDConnectIdentityProvider
      parameters:
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: authID
        required: true
        schema:
          example: authID
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: |-
              {
                  "authenticationFlow": "Code",
                  "discoveryEndpointUrl": "https://10.10.22.121/OPServer/.well-known/openid-configuration",
                  "clientId": "pvwa",
                  "clientSecretMethod": "basic",
                  "userNameClaim": "given_name"
              }
            schema:
              example: '{"authenticationFlow":"Code","discoveryEndpointUrl":"https://10.10.22.121/OPServer/.well-known/openid-configuration","clientId":"pvwa","clientSecretMethod":"basic","userNameClaim":"given_name"}'
              type: string
        description: This method updates an existing OIDC Identity Provider. Any user
          who is a member of the Vault admins group can run this web service.
        required: true
      responses:
        "200": {}
      summary: Update OpenID Connect Identity Provider
      tags:
      - OpenID Connect Identity Provider
  /PasswordVault/api/Configuration/AuthenticationMethods:
    get:
      description: This method returns a list of all existing authentication methods.
        Any user who is a member of the Vault admins group can run this web service.
      operationId: GetAuthenticationMethods
      parameters:
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              example:
                Methods:
                - id: windows
                  displayName: ""
                  enabled: false
                  mobileEnabled: false
                  logoffUrl: ""
                  secondFactorAuth: null
                  signInLabel: ""
                  usernameFieldLabel: ""
                  passwordFieldLabel: ""
                - id: pki
                  displayName: ""
                  enabled: false
                  mobileEnabled: false
                  logoffUrl: ""
                  secondFactorAuth: null
                  signInLabel: ""
                  usernameFieldLabel: ""
                  passwordFieldLabel: ""
                - id: cyberark
                  displayName: ""
                  enabled: true
                  mobileEnabled: true
                  logoffUrl: ""
                  secondFactorAuth: cyberark
                  signInLabel: ""
                  usernameFieldLabel: ""
                  passwordFieldLabel: ""
                - id: oraclesso
                  displayName: ""
                  enabled: false
                  mobileEnabled: false
                  logoffUrl: http://[ssoserver]:7777/sso/logout?p_done_url=http://[iisserver]/PasswordVault
                  secondFactorAuth: null
                  signInLabel: ""
                  usernameFieldLabel: ""
                  passwordFieldLabel: ""
                - id: rsa
                  displayName: ""
                  enabled: false
                  mobileEnabled: false
                  logoffUrl: /WebID/IISWebAgentIF.dll?logoff?referrer=/passwordvault
                  secondFactorAuth: null
                  signInLabel: ""
                  usernameFieldLabel: ""
                  passwordFieldLabel: ""
                - id: radius
                  displayName: Duo (RADIUS)
                  enabled: true
                  mobileEnabled: true
                  logoffUrl: ""
                  secondFactorAuth: radius
                  signInLabel: ""
                  usernameFieldLabel: ""
                  passwordFieldLabel: ""
                - id: ldap
                  displayName: ""
                  enabled: true
                  mobileEnabled: true
                  logoffUrl: ""
                  secondFactorAuth: null
                  signInLabel: ""
                  usernameFieldLabel: ""
                  passwordFieldLabel: ""
                - id: saml
                  displayName: IDaptive SAML
                  enabled: true
                  mobileEnabled: false
                  logoffUrl: https://tentantid.my.idaptive.app/applogout/appkey/acredacted/customerid/redacted
                  secondFactorAuth: null
                  signInLabel: ""
                  usernameFieldLabel: ""
                  passwordFieldLabel: ""
              schema:
                $ref: '#/components/schemas/200'
          description: 200 OK
      summary: Get Authentication Methods
      tags:
      - OpenID Connect Identity Provider
    post:
      description: This method adds a new authentication method. Any user who is a
        member of the Vault admins group can run this web service.
      operationId: AddAuthenticationMethod
      parameters:
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: |-
              {
                  "id": "saml",
                  "displayName": "IDaptive SAML",
                  "enabled": true,
                  "mobileEnabled": false,
                  "logoffUrl": "https://domain.com/idp/logoff",
                  "secondFactorAuth": null,
                  "signInLabel": "",
                  "usernameFieldLabel": "",
                  "passwordFieldLabel": ""
              }
            schema:
              example: '{"id":"saml","displayName":"IDaptive SAML","enabled":true,"mobileEnabled":false,"logoffUrl":"https://domain.com/idp/logoff","secondFactorAuth":null,"signInLabel":"","usernameFieldLabel":"","passwordFieldLabel":""}'
              type: string
        description: This method adds a new authentication method. Any user who is
          a member of the Vault admins group can run this web service.
        required: true
      responses:
        "200": {}
      summary: Add Authentication Method
      tags:
      - OpenID Connect Identity Provider
  /PasswordVault/api/Configuration/AuthenticationMethods/{authID}:
    delete:
      description: This method deletes a specific authentication method. Any user
        who is a member of the Vault admins group can run this web service.
      operationId: DeleteAuthenticationMethod
      parameters:
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: authID
        required: true
        schema:
          example: authID
          type: string
        style: simple
      responses:
        "200": {}
      summary: Delete Authentication Method
      tags:
      - OpenID Connect Identity Provider
    get:
      description: This method returns a specific authentication method. Any user
        who is a member of the Vault Admins group can run this web service.
      operationId: GetSpecificAuthenticationMethod
      parameters:
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: authID
        required: true
        schema:
          example: authID
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              example:
                id: saml
                displayName: IDaptive SAML
                enabled: true
                mobileEnabled: false
                logoffUrl: https://tenantid.my.idaptive.app/applogout/appkey/acredacted/customerid/redacted
                secondFactorAuth: null
                signInLabel: ""
                usernameFieldLabel: ""
                passwordFieldLabel: ""
              schema:
                $ref: '#/components/schemas/200'
          description: 200 OK
      summary: Get Specific Authentication Method
      tags:
      - OpenID Connect Identity Provider
    put:
      description: This method updates the properties for a specific authentication
        method. Any user who is a member of the Vault admins group can run this web
        service.
      operationId: UpdateAuthenticationMethod
      parameters:
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: authID
        required: true
        schema:
          example: authID
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: |-
              {
                  "displayName": "",
                  "enabled": true,
                  "mobileEnabled": false,
                  "logoffUrl": "https://domain.com/idp/logoff",
                  "secondFactorAuth": null,
                  "signInLabel": "",
                  "usernameFieldLabel": "",
                  "passwordFieldLabel": ""
              }
            schema:
              example: '{"displayName":"","enabled":true,"mobileEnabled":false,"logoffUrl":"https://domain.com/idp/logoff","secondFactorAuth":null,"signInLabel":"","usernameFieldLabel":"","passwordFieldLabel":""}'
              type: string
        description: This method updates the properties for a specific authentication
          method. Any user who is a member of the Vault admins group can run this
          web service.
        required: true
      responses:
        "200": {}
      summary: Update Authentication Method
      tags:
      - OpenID Connect Identity Provider
  /api/getauthtoken:
    post:
      description: This method enables a user to get a token upon Web application
        authentication. You can use this method to monitor the PTA system health,
        as shown in [Get PTA replication status](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/Latest/en/Content/WebServices/PTA_System_Health.htm).
      operationId: PTAAuthentication
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/x-www-form-urlencoded
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                username:
                  example: '{{apiUsername}}'
                  type: string
                password:
                  example: '{{apiPassword}}'
                  type: string
              required:
              - password
              - username
              type: object
        description: This method enables a user to get a token upon Web application
          authentication. You can use this method to monitor the PTA system health,
          as shown in [Get PTA replication status](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/Latest/en/Content/WebServices/PTA_System_Health.htm).
        required: true
      responses:
        "200": {}
      summary: PTA Authentication
      tags:
      - OpenID Connect Identity Provider
  /passwordvault/api/platforms/targets:
    get:
      description: |-
        This method allows users to retrieve basic information of all existing target platforms.

        You can use filters to retrieve a subset of the target platforms or search for a specific target platform. For details, see [URL parameters](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/11.6/en/Content/SDK/rest-api-get-target-platforms.htm#URL%C2%A0para).
      operationId: GetTargetPlatforms
      parameters:
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              example:
                Platforms:
                - Active: true
                  SystemType: '*NIX'
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: true
                    Change:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: false
                      AllowManual: true
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  PrivilegedSessionManagement:
                    PSMServerId: PSMServer
                    PSMServerName: PSM Server on PASAAS-PSM
                  ID: 2
                  PlatformID: UnixSSH
                  Name: Unix via SSH
                - Active: true
                  SystemType: '*NIX'
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: true
                    Change:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: false
                      AllowManual: true
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  PrivilegedSessionManagement:
                    PSMServerId: PSMServer_a91999c
                    PSMServerName: PSM Server on PASAAS-PVWA
                  ID: 23
                  PlatformID: UnixSSHKeys
                  Name: Unix via SSH Keys
                - Active: true
                  SystemType: Application
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: false
                    Change:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: false
                      AllowManual: false
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  ID: 35
                  PlatformID: ConjurHost
                  Name: Conjur Host
                - Active: true
                  SystemType: Application
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: true
                    Change:
                      PerformAutomatic: true
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: false
                      AllowManual: false
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  ID: 48
                  PlatformID: ConjurUser
                  Name: Conjur User
                - Active: true
                  SystemType: Application
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: true
                    Change:
                      PerformAutomatic: true
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: false
                      AllowManual: false
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  PrivilegedSessionManagement:
                    PSMServerId: PSMServer_a91999c
                    PSMServerName: PSM Server on PASAAS-PVWA
                  ID: 32
                  PlatformID: CyberArkPTA
                  Name: CyberArk PTA
                - Active: true
                  SystemType: Application
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: true
                    Change:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: false
                      AllowManual: false
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  PrivilegedSessionManagement:
                    PSMServerId: PSMServer_a91999c
                    PSMServerName: PSM Server on PASAAS-PVWA
                  ID: 9
                  PlatformID: CyberArk
                  Name: CyberArk Vault
                - Active: false
                  SystemType: Application
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: true
                    Change:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: true
                      AllowManual: true
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  ID: 28
                  PlatformID: RSAManagement
                  Name: RSA Authentication Manager
                - Active: false
                  SystemType: Application
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: true
                    Change:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: false
                      AllowManual: true
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  PrivilegedSessionManagement:
                    PSMServerId: PSMServer_a91999c
                    PSMServerName: PSM Server on PASAAS-PVWA
                  ID: 5
                  PlatformID: SAP
                  Name: SAP
                - Active: true
                  SystemType: Cloud Service
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: false
                    Change:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: false
                      AllowManual: true
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  PrivilegedSessionManagement:
                    PSMServerId: PSMServer_a91999c
                    PSMServerName: PSM Server on PASAAS-PVWA
                  ID: 25
                  PlatformID: AWS
                  Name: Amazon Web Services - AWS
                - Active: true
                  SystemType: Cloud Service
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: true
                    Change:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: false
                      AllowManual: false
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  ID: 26
                  PlatformID: AWSAccessKeys
                  Name: Amazon Web Services - AWS - Access Keys
                - Active: true
                  SystemType: Cloud Service
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: true
                    Change:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: true
                      AllowManual: true
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  PrivilegedSessionManagement:
                    PSMServerId: PSMServer_a91999c
                    PSMServerName: PSM Server on PASAAS-PVWA
                  ID: 30
                  PlatformID: AzurePasswordManagement
                  Name: Microsoft Azure Password Management
                - Active: false
                  SystemType: Cloud Service
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: true
                    Change:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: true
                      AllowManual: true
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  ID: 37
                  PlatformID: GCPServiceAccount
                  Name: Google Cloud Platfrom - Service Account
                - Active: false
                  SystemType: Cloud Service
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: true
                    Change:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: true
                      AllowManual: true
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  ID: 29
                  PlatformID: AzureApplicationKeys
                  Name: Microsoft Azure Application Keys Management
                - Active: true
                  SystemType: Database
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: true
                    Change:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: false
                      AllowManual: true
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  ID: 17
                  PlatformID: MySQL
                  Name: MySQL Server
                - Active: false
                  SystemType: Database
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: true
                    Change:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: false
                      AllowManual: true
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  PrivilegedSessionManagement:
                    PSMServerId: PSMServer_a91999c
                    PSMServerName: PSM Server on PASAAS-PVWA
                  ID: 15
                  PlatformID: DB2UnixSSH
                  Name: DB2 on Unix via SSH
                - Active: false
                  SystemType: Database
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: true
                    Change:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: false
                      AllowManual: true
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  PrivilegedSessionManagement:
                    PSMServerId: PSMServer_a91999c
                    PSMServerName: PSM Server on PASAAS-PVWA
                  ID: 16
                  PlatformID: InformixUnixSSH
                  Name: Informix on Unix via SSH
                - Active: false
                  SystemType: Database
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: true
                    Change:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: false
                      AllowManual: true
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  PrivilegedSessionManagement:
                    PSMServerId: PSMServer_a91999c
                    PSMServerName: PSM Server on PASAAS-PVWA
                  ID: 3
                  PlatformID: MSSql
                  Name: Microsoft SQL Server
                - Active: false
                  SystemType: Database
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: true
                    Change:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: false
                      AllowManual: true
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  PrivilegedSessionManagement:
                    PSMServerId: PSMServer_a91999c
                    PSMServerName: PSM Server on PASAAS-PVWA
                  ID: 8
                  PlatformID: Oracle
                  Name: Oracle Database
                - Active: false
                  SystemType: Database
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: true
                    Change:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: true
                      AllowManual: true
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  ID: 31
                  PlatformID: SAPHANA
                  Name: SAP HANA
                - Active: false
                  SystemType: Database
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: true
                    Change:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: false
                      AllowManual: true
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  ID: 4
                  PlatformID: Sybase
                  Name: Sybase ASE
                - Active: false
                  SystemType: Directory
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: true
                    Change:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: false
                      AllowManual: true
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  ID: 21
                  PlatformID: Novell-eDirectory
                  Name: Novell eDirectory server
                - Active: false
                  SystemType: Directory
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: true
                    Change:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: false
                      AllowManual: true
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  ID: 20
                  PlatformID: SunOneDirectorySSL
                  Name: SunOne directory via SSL
                - Active: false
                  SystemType: Network Device
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: true
                    Change:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: false
                      AllowManual: true
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  PrivilegedSessionManagement:
                    PSMServerId: PSMServer_a91999c
                    PSMServerName: PSM Server on PASAAS-PVWA
                  ID: 19
                  PlatformID: CiscoSSH
                  Name: Cisco router via SSH
                - Active: false
                  SystemType: Operating System
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: true
                    Change:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: false
                      AllowManual: true
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  PrivilegedSessionManagement:
                    PSMServerId: PSMServer_a91999c
                    PSMServerName: PSM Server on PASAAS-PVWA
                  ID: 12
                  PlatformID: as400
                  Name: AS400
                - Active: false
                  SystemType: Operating System
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: false
                    Change:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: false
                      AllowManual: false
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  PrivilegedSessionManagement:
                    PSMServerId: PSMServer_a91999c
                    PSMServerName: PSM Server on PASAAS-PVWA
                  ID: 13
                  PlatformID: OS390SSH
                  Name: OS390 via SSH
                - Active: false
                  SystemType: Operating System
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: true
                    Change:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: false
                      AllowManual: true
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  PrivilegedSessionManagement:
                    PSMServerId: PSMServer_a91999c
                    PSMServerName: PSM Server on PASAAS-PVWA
                  ID: 14
                  PlatformID: VMWareESX-API
                  Name: VMWare ESX Account API
                - Active: true
                  SystemType: PSM Secure Connect
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: false
                    Change:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: false
                      AllowManual: false
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  PrivilegedSessionManagement:
                    PSMServerId: PSMServer_a91999c
                    PSMServerName: PSM Server on PASAAS-PVWA
                  ID: 22
                  PlatformID: PSMSecureConnect
                  Name: PSM Secure Connect
                - Active: false
                  SystemType: Security Appliance
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: true
                    Change:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: false
                      AllowManual: false
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  ID: 18
                  PlatformID: Firewall1
                  Name: Check Point FireWall-1
                - Active: false
                  SystemType: Security Appliance
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: true
                    Change:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: false
                      AllowManual: true
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  ID: 24
                  PlatformID: GAiASSH
                  Name: Check Point GAiA via SSH
                - Active: true
                  SystemType: Website
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: true
                    Change:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: true
                      AllowManual: true
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  ID: 42
                  PlatformID: DockerRegistry
                  Name: Docker Registry
                - Active: true
                  SystemType: Website
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: true
                    Change:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: true
                      AllowManual: true
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  ID: 38
                  PlatformID: GenericWebApp
                  Name: Generic Web App
                - Active: false
                  SystemType: Website
                  AllowedSafes: BZ_I_*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: false
                    Change:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: false
                      AllowManual: false
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  ID: 36
                  PlatformID: BusinessWebsite
                  Name: Business Website
                - Active: true
                  SystemType: Windows
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: true
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: true
                      AllowManual: true
                    Change:
                      PerformAutomatic: true
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: true
                      AllowManual: true
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  PrivilegedSessionManagement:
                    PSMServerId: PSMServer_a91999c
                    PSMServerName: PSM Server on PASAAS-PVWA
                  ID: 10
                  PlatformID: WinDesktopLocal
                  Name: Windows Desktop Local Accounts
                - Active: true
                  SystemType: Windows
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: true
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: true
                      AllowManual: true
                    Change:
                      PerformAutomatic: true
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: true
                      AllowManual: true
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  PrivilegedSessionManagement:
                    PSMServerId: PSMServer
                    PSMServerName: PSM Server on PASAAS-PSM
                  ID: 7
                  PlatformID: WinDomain
                  Name: Windows Domain Account
                - Active: true
                  SystemType: Windows
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: true
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: true
                      AllowManual: true
                    Change:
                      PerformAutomatic: true
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: true
                      AllowManual: true
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  PrivilegedSessionManagement:
                    PSMServerId: PSMServer_a91999c
                    PSMServerName: PSM Server on PASAAS-PVWA
                  ID: 6
                  PlatformID: WinServerLocal
                  Name: Windows Server Local Accounts
                - Active: false
                  SystemType: Windows
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: true
                    Change:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: false
                      AllowManual: true
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  ID: 11
                  PlatformID: WinLocalWMI
                  Name: Windows Local Accounts WMI
                - Active: false
                  SystemType: Windows
                  AllowedSafes: .*
                  PrivilegedAccessWorkflows:
                    RequireDualControlPasswordAccessApproval:
                      IsActive: false
                      IsAnException: false
                    EnforceCheckinCheckoutExclusiveAccess:
                      IsActive: false
                      IsAnException: false
                    EnforceOnetimePasswordAccess:
                      IsActive: false
                      IsAnException: false
                    RequireUsersToSpecifyReasonForAccess:
                      IsActive: false
                      IsAnException: false
                  CredentialsManagementPolicy:
                    Verification:
                      PerformAutomatic: false
                      RequirePasswordEveryXDays: 7
                      AutoOnAdd: false
                      AllowManual: false
                    Change:
                      PerformAutomatic: true
                      RequirePasswordEveryXDays: 90
                      AutoOnAdd: false
                      AllowManual: true
                    Reconcile:
                      AutomaticReconcileWhenUnsynced: false
                      AllowManual: false
                    SecretUpdateConfiguration:
                      ChangePasswordInResetMode: false
                  PrivilegedSessionManagement:
                    PSMServerId: PSMServer_a91999c
                    PSMServerName: PSM Server on PASAAS-PVWA
                  ID: 27
                  PlatformID: WinLooselyDevice
                  Name: Windows Loosely Device
                Total: 37
              schema:
                $ref: '#/components/schemas/200'
          description: 200 OK
      summary: Get Target Platforms
      tags:
      - Target Platforms
  /passwordvault/api/platforms/targets/{PlatformName}/activate:
    post:
      description: This method allows Vault Admins to activate a target platform.
      operationId: ActivateTargetPlatform
      parameters:
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: PlatformName
        required: true
        schema:
          example: PlatformName
          type: string
        style: simple
      responses:
        "200": {}
      summary: Activate Target Platform
      tags:
      - Target Platforms
  /passwordvault/api/platforms/targets/{PlatformName}/deactivate:
    post:
      description: This method allows Vault Admins to deactivate a target platform.
      operationId: DeactivateTargetPlatform
      parameters:
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: PlatformName
        required: true
        schema:
          example: PlatformName
          type: string
        style: simple
      responses:
        "200": {}
      summary: Deactivate Target Platform
      tags:
      - Target Platforms
  /passwordvault/api/platforms/targets/{PlatformName}/duplicate:
    post:
      description: This method allows Vault Admins to duplicate target platforms.
      operationId: DuplicateTargetPlatforms
      parameters:
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: PlatformName
        required: true
        schema:
          example: PlatformName
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: |-
              {
                  "Name": "test Platform",
                  "Description": ""
              }
            schema:
              example: '{"Name":"test Platform","Description":""}'
              type: string
        description: This method allows Vault Admins to duplicate target platforms.
        required: true
      responses:
        "200": {}
      summary: Duplicate Target Platforms
      tags:
      - Target Platforms
  /passwordvault/api/platforms/targets/{PlatformName}:
    delete:
      description: This method allows Vault Admins to delete a target platform.
      operationId: DeleteTargetPlatform
      parameters:
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: PlatformName
        required: true
        schema:
          example: PlatformName
          type: string
        style: simple
      responses:
        "200": {}
      summary: Delete Target Platform
      tags:
      - Target Platforms
  /passwordvault/api/platforms/dependents:
    get:
      description: This method allows Vault Admins to retrieve basic information about
        all existing dependent platforms.
      operationId: GetDependentPlatforms
      parameters:
      - description: Platform Name
        explode: true
        in: query
        name: search
        required: true
        schema:
          type: number
        style: form
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      responses:
        "200": {}
      summary: Get Dependent Platforms
      tags:
      - Dependent Platforms
  /passwordvault/api/platforms/dependent/{PlatformName}/duplicate:
    post:
      description: This method allows Vault Admins to duplicate dependent platforms.
      operationId: DuplicateDependentPlatforms
      parameters:
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: PlatformName
        required: true
        schema:
          example: PlatformName
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: |-
              {
                  "Name": "test Platform",
                  "Description": ""
              }
            schema:
              example: '{"Name":"test Platform","Description":""}'
              type: string
        description: This method allows Vault Admins to duplicate dependent platforms.
        required: true
      responses:
        "200": {}
      summary: Duplicate Dependent Platforms
      tags:
      - Dependent Platforms
  /passwordvault/api/platforms/dependents/{PlatformName}:
    delete:
      description: This method allows Vault Admins to delete a dependent platform.
      operationId: DeleteDependentPlatform
      parameters:
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: PlatformName
        required: true
        schema:
          example: PlatformName
          type: string
        style: simple
      responses:
        "200": {}
      summary: Delete Dependent Platform
      tags:
      - Dependent Platforms
  /passwordvault/api/platforms/groups:
    get:
      description: This method allows Vault Admins to retrieve basic information about
        all existing group platforms.
      operationId: GetGroupPlatforms
      parameters:
      - description: Platform Name
        explode: true
        in: query
        name: search
        required: true
        schema:
          example: SSH
          type: string
        style: form
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              example:
                Platforms:
                - Active: false
                  ID: 34
                  PlatformID: SampleSSHKeyGroup
                  Name: '[Sample SSH Key Group Platform]'
                Total: 1
              schema:
                $ref: '#/components/schemas/200'
          description: 200 OK
      summary: Get Group Platforms
      tags:
      - Group Platforms
  /passwordvault/api/platforms/groups/{PlatformName}/activate:
    post:
      description: This method allows Vault Admins to activate a group platform.
      operationId: ActivateGroupPlatform
      parameters:
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: PlatformName
        required: true
        schema:
          example: PlatformName
          type: string
        style: simple
      responses:
        "200": {}
      summary: Activate Group Platform
      tags:
      - Group Platforms
  /passwordvault/api/platforms/groups/{PlatformName}/deactivate:
    post:
      description: This method allows Vault Admins to deactivate a group platform.
      operationId: DeactivateGroupPlatform
      parameters:
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: PlatformName
        required: true
        schema:
          example: PlatformName
          type: string
        style: simple
      responses:
        "200": {}
      summary: Deactivate Group Platform
      tags:
      - Group Platforms
  /passwordvault/api/platforms/groups/{PlatformName}/duplicate:
    post:
      description: This method allows Vault Admins to duplicate group platforms.
      operationId: DuplicateGroupPlatforms
      parameters:
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: PlatformName
        required: true
        schema:
          example: PlatformName
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: |-
              {
                  "Name": "test Platform",
                  "Description": ""
              }
            schema:
              example: '{"Name":"test Platform","Description":""}'
              type: string
        description: This method allows Vault Admins to duplicate group platforms.
        required: true
      responses:
        "200": {}
      summary: Duplicate Group Platforms
      tags:
      - Group Platforms
  /passwordvault/api/platforms/groups/{PlatformName}:
    delete:
      description: This method allows Vault Admins to delete a group platform.
      operationId: DeleteGroupPlatform
      parameters:
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: PlatformName
        required: true
        schema:
          example: PlatformName
          type: string
        style: simple
      responses:
        "200": {}
      summary: Delete Group Platform
      tags:
      - Group Platforms
  /passwordvault/api/platforms/rotationalGroups:
    get:
      description: This method allows Vault Admins to retrieve basic information about
        all existing rotational group platforms.
      operationId: GetRotationalGroupPlatforms
      parameters:
      - description: Platform Name
        explode: true
        in: query
        name: search
        required: true
        schema:
          example: MySQL
          type: string
        style: form
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              example:
                Platforms:
                - Active: true
                  GracePeriod: 540
                  ID: 40
                  PlatformID: MySQLServer-DualAccounts
                  Name: MySQL Server - Dual Accounts
                Total: 1
              schema:
                $ref: '#/components/schemas/200'
          description: 200 OK
      summary: Get Rotational Group Platforms
      tags:
      - Rotational Group Platforms
  /passwordvault/api/platforms/rotationalGroups/{PlatformName}/activate:
    post:
      description: This method allows Vault Admins to activate a rotational group
        platform.
      operationId: ActivateRotationalGroupPlatform
      parameters:
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: PlatformName
        required: true
        schema:
          example: PlatformName
          type: string
        style: simple
      responses:
        "200": {}
      summary: Activate Rotational Group Platform
      tags:
      - Rotational Group Platforms
  /passwordvault/api/platforms/rotationalGroups/{PlatformName}/deactivate:
    post:
      description: This method allows Vault Admins to deactivate a rotational group
        platform.
      operationId: DeactivateRotationalGroupPlatform
      parameters:
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: PlatformName
        required: true
        schema:
          example: PlatformName
          type: string
        style: simple
      responses:
        "200": {}
      summary: Deactivate Rotational Group Platform
      tags:
      - Rotational Group Platforms
  /passwordvault/api/platforms/rotationalGroups/{PlatformName}/duplicate:
    post:
      description: This method allows Vault Admins to duplicate rotational group platforms.
      operationId: DuplicateRotationalGroupPlatforms
      parameters:
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: PlatformName
        required: true
        schema:
          example: PlatformName
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: |-
              {
                  "Name": "test Platform",
                  "Description": ""
              }
            schema:
              example: '{"Name":"test Platform","Description":""}'
              type: string
        description: This method allows Vault Admins to duplicate rotational group
          platforms.
        required: true
      responses:
        "200": {}
      summary: Duplicate Rotational Group Platforms
      tags:
      - Rotational Group Platforms
  /passwordvault/api/platforms/rotationalGroups/{PlatformName}:
    delete:
      description: This method allows Vault Admins to delete a rotational group platform.
      operationId: DeleteRotationalGroupPlatform
      parameters:
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: PlatformName
        required: true
        schema:
          example: PlatformName
          type: string
        style: simple
      responses:
        "200": {}
      summary: Delete Rotational Group Platform
      tags:
      - Rotational Group Platforms
  /PasswordVault/API/Platforms/{PlatformName}:
    get:
      description: This method retrieves details of a specified platform from the
        Vault.
      operationId: GetPlatformDetails
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: PlatformName
        required: true
        schema:
          example: PlatformName
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              example:
                PlatformID: WinDomain
                Details:
                  PolicyID: WinDomain
                  PolicyName: Windows Domain Account
                  SearchForUsages: "Yes"
                  PolicyType: regular
                  ImmediateInterval: "5"
                  Interval: "1440"
                  MaxConcurrentConnections: "3"
                  AllowedSafes: .*
                  MinValidityPeriod: "60"
                  ResetOveridesMinValidity: "yes"
                  ResetOveridesTimeFrame: "yes"
                  Timeout: "30"
                  UnlockIfFail: "no"
                  UnrecoverableErrors: 2103,2105,2121
                  MaximumRetries: "5"
                  MinDelayBetweenRetries: "90"
                  DllName: PMWindows.dll
                  XMLFile: "yes"
                  AllowManualChange: "Yes"
                  PerformPeriodicChange: "No"
                  HeadStartInterval: "5"
                  FromHour: -1
                  ToHour: -1
                  ChangeNotificationPeriod: -1
                  DaysNotifyPriorExpiration: "7"
                  VFAllowManualVerification: "Yes"
                  VFPerformPeriodicVerification: "No"
                  VFFromHour: -1
                  VFToHour: -1
                  RCAllowManualReconciliation: "Yes"
                  RCAutomaticReconcileWhenUnsynched: "No"
                  RCReconcileReasons: 2114,2115,2106,2101
                  RCFromHour: -1
                  RCToHour: -1
                  NFNotifyPriorExpiration: "No"
                  NFPriorExpirationRecipients: ""
                  NFNotifyOnPasswordDisable: "Yes"
                  NFOnPasswordDisableRecipients: ""
                  NFNotifyOnVerificationErrors: "Yes"
                  NFOnVerificationErrorsRecipients: ""
                  NFNotifyOnPasswordUsed: "No"
                  NFOnPasswordUsedRecipients: ""
                  PasswordLength: "8"
                  MinUpperCase: "2"
                  MinLowerCase: "2"
                  MinDigit: "1"
                  MinSpecial: "1"
                  OneTimePassword: "False"
                  ExpirationPeriod: "90"
                  VFVerificationPeriod: "7"
                  PasswordLevelRequestTimeframe: "False"
                Active: true
              schema:
                $ref: '#/components/schemas/200'
          description: 200 OK
      summary: Get Platform Details
      tags:
      - Rotational Group Platforms
  /PasswordVault/API/Platforms:
    get:
      description: |-
        This method returns all existing account platforms from the Vault.

        You can use filters to retrieve a subset of the platforms or search for a specific platform. For details, see URL parameters.

        **Note:** The [Get Platform Details](#585553e8-dea9-4617-9313-297aac8d7273) API, used to retrieve details for a specific platform, returns a different set of parameters.
      operationId: GetPlatforms
      parameters:
      - description: 'Filter according to whether the platform is active or not. Valid
          values: true or false'
        explode: true
        in: query
        name: Active
        required: true
        schema:
          example: "true"
          type: string
        style: form
      - description: 'Filter according to the platform type. Valid values: Group or
          Regular'
        explode: true
        in: query
        name: PlatformType
        required: true
        schema:
          example: Regular
          type: string
        style: form
      - description: Searching according to the platform name.
        explode: true
        in: query
        name: PlatformName
        required: true
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      responses:
        "200": {}
      summary: Get Platforms
      tags:
      - Rotational Group Platforms
  /PasswordVault/API/Platforms/{PlatformName}/Export:
    post:
      description: If testing this in the Postman application, click the "Download"
        button after receiving the zip file stream to download the ZIP file locally.
      operationId: ExportPlatform
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: PlatformName
        required: true
        schema:
          example: PlatformName
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema: {}
          description: 200 OK
      summary: Export Platform
      tags:
      - Rotational Group Platforms
  /API/Platforms/Import:
    post:
      description: This method enables administrators to import new platforms and
        dependencies.
      operationId: ImportPlatform
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: "{\n\t\"ImportFile\": {zip file in the format of BASE 64 array}\n\
              }"
            schema:
              example: "{\n\t\"ImportFile\": {zip file in the format of BASE 64 array}\n\
                }"
              type: string
        description: This method enables administrators to import new platforms and
          dependencies.
        required: true
      responses:
        "200": {}
      summary: Import Platform
      tags:
      - Rotational Group Platforms
  /PasswordVault/api/Safes:
    get:
      description: This method returns a list of all Safes in the Vault that the user
        has permissions for. To run this web user, the user must be a member of the
        Safes in the Vault that are returned in the list.
      operationId: GetAllSafes
      parameters:
      - description: Searches according to the Safe name. Search is performed according
          to the REST standard (search="search word").
        explode: true
        in: query
        name: search
        required: true
        schema:
          example: searchWord
          type: string
        style: form
      - description: Offset of the first Safe that is returned in the collection of
          results.
        explode: true
        in: query
        name: offset
        required: true
        schema:
          type: number
        style: form
      - description: The maximum number of Safes that are returned. When used together
          with the offset parameter, this value determines the number of Safes to
          return, starting from the first Safe that is returned.
        explode: true
        in: query
        name: limit
        required: true
        schema:
          type: number
        style: form
      - description: Sorts according to the safeName property in ascending order (default)
          or descending order to control the sort direction.
        explode: true
        in: query
        name: sort
        required: true
        schema:
          example: safeName asc
          type: string
        style: form
      - description: Whether or not to return accounts for each Safe as part of the
          response. If not sent, the value is False.
        explode: true
        in: query
        name: includeAccounts
        required: true
        schema:
          example: "false"
          type: string
        style: form
      - description: Whether or not to return all Safe details or only safeName as
          part of the response. If not sent, the value is True.
        explode: true
        in: query
        name: extendedDetails
        required: true
        schema:
          example: "true"
          type: string
        style: form
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              example:
                GetSafesResult:
                - Description: null
                  ManagingCPM: PasswordManagerNG
                  NumberOfDaysRetention: null
                  NumberOfVersionsRetention: 0
                  OLACEnabled: false
                  SafeName: AccountsFeedADAccounts
                - Description: null
                  ManagingCPM: PasswordManagerNG
                  NumberOfDaysRetention: null
                  NumberOfVersionsRetention: 0
                  OLACEnabled: false
                  SafeName: AccountsFeedDiscoveryLogs
                - Description: null
                  ManagingCPM: PasswordManagerNG
                  NumberOfDaysRetention: null
                  NumberOfVersionsRetention: 0
                  OLACEnabled: false
                  SafeName: D-CYBR-RESTAPI-ACCTS
                - Description: null
                  ManagingCPM: PasswordManagerNG
                  NumberOfDaysRetention: null
                  NumberOfVersionsRetention: 0
                  OLACEnabled: false
                  SafeName: D-LIN-ADMIN-USERS
                - Description: null
                  ManagingCPM: PasswordManagerNG
                  NumberOfDaysRetention: null
                  NumberOfVersionsRetention: 0
                  OLACEnabled: false
                  SafeName: D-LIN-ROOT-SSHKEYS
                - Description: null
                  ManagingCPM: PasswordManagerNG
                  NumberOfDaysRetention: null
                  NumberOfVersionsRetention: 0
                  OLACEnabled: false
                  SafeName: D-MYSQL-LOCAL-USERS
                - Description: null
                  ManagingCPM: ""
                  NumberOfDaysRetention: null
                  NumberOfVersionsRetention: 0
                  OLACEnabled: false
                  SafeName: D-QUALYS-ACCTS
                - Description: null
                  ManagingCPM: ""
                  NumberOfDaysRetention: null
                  NumberOfVersionsRetention: 0
                  OLACEnabled: false
                  SafeName: D-TENABLE-ACCTS
                - Description: null
                  ManagingCPM: PasswordManagerNG
                  NumberOfDaysRetention: null
                  NumberOfVersionsRetention: 0
                  OLACEnabled: false
                  SafeName: D-TEST-SAFE
                - Description: null
                  ManagingCPM: ""
                  NumberOfDaysRetention: null
                  NumberOfVersionsRetention: 0
                  OLACEnabled: false
                  SafeName: Notification Engine
                - Description: ""
                  ManagingCPM: PasswordManagerNG
                  NumberOfDaysRetention: null
                  NumberOfVersionsRetention: 5
                  OLACEnabled: false
                  SafeName: P-WIN-LOCAL-ADMIN
                - Description: null
                  ManagingCPM: ""
                  NumberOfDaysRetention: null
                  NumberOfVersionsRetention: 0
                  OLACEnabled: false
                  SafeName: PasswordManager
                - Description: null
                  ManagingCPM: ""
                  NumberOfDaysRetention: null
                  NumberOfVersionsRetention: 0
                  OLACEnabled: false
                  SafeName: PasswordManager_Info
                - Description: null
                  ManagingCPM: PasswordManagerNG
                  NumberOfDaysRetention: null
                  NumberOfVersionsRetention: 0
                  OLACEnabled: false
                  SafeName: PasswordManager_Pending
                - Description: null
                  ManagingCPM: PasswordManagerNG
                  NumberOfDaysRetention: null
                  NumberOfVersionsRetention: 0
                  OLACEnabled: false
                  SafeName: PasswordManagerNG
                - Description: null
                  ManagingCPM: PasswordManagerNG
                  NumberOfDaysRetention: null
                  NumberOfVersionsRetention: 0
                  OLACEnabled: false
                  SafeName: PasswordManagerNG_Info
                - Description: null
                  ManagingCPM: PasswordManagerNG
                  NumberOfDaysRetention: null
                  NumberOfVersionsRetention: 0
                  OLACEnabled: false
                  SafeName: PasswordManagerShared
                - Description: null
                  ManagingCPM: ""
                  NumberOfDaysRetention: null
                  NumberOfVersionsRetention: 0
                  OLACEnabled: false
                  SafeName: PSMPADBridgeCustom
                - Description: null
                  ManagingCPM: ""
                  NumberOfDaysRetention: null
                  NumberOfVersionsRetention: 0
                  OLACEnabled: true
                  SafeName: PSMPADBUserProfile
                - Description: null
                  ManagingCPM: ""
                  NumberOfDaysRetention: null
                  NumberOfVersionsRetention: 0
                  OLACEnabled: false
                  SafeName: PSMUniversalConnectors
                - Description: null
                  ManagingCPM: ""
                  NumberOfDaysRetention: null
                  NumberOfVersionsRetention: 0
                  OLACEnabled: true
                  SafeName: PSMUnmanagedSessionAccounts
                - Description: null
                  ManagingCPM: ""
                  NumberOfDaysRetention: null
                  NumberOfVersionsRetention: 0
                  OLACEnabled: false
                  SafeName: PVWAConfig
                - Description: null
                  ManagingCPM: ""
                  NumberOfDaysRetention: null
                  NumberOfVersionsRetention: 0
                  OLACEnabled: false
                  SafeName: PVWAPublicData
                - Description: null
                  ManagingCPM: ""
                  NumberOfDaysRetention: null
                  NumberOfVersionsRetention: 0
                  OLACEnabled: true
                  SafeName: PVWAReports
                - Description: null
                  ManagingCPM: ""
                  NumberOfDaysRetention: null
                  NumberOfVersionsRetention: 0
                  OLACEnabled: true
                  SafeName: PVWATaskDefinitions
                - Description: null
                  ManagingCPM: ""
                  NumberOfDaysRetention: null
                  NumberOfVersionsRetention: 0
                  OLACEnabled: false
                  SafeName: PVWATicketingSystem
                - Description: null
                  ManagingCPM: ""
                  NumberOfDaysRetention: null
                  NumberOfVersionsRetention: 0
                  OLACEnabled: false
                  SafeName: PVWAUserPrefs
                - Description: null
                  ManagingCPM: ""
                  NumberOfDaysRetention: null
                  NumberOfVersionsRetention: 0
                  OLACEnabled: false
                  SafeName: VaultInternal
              schema:
                $ref: '#/components/schemas/200'
          description: 200 OK
      summary: Get All Safes
      tags: []
    post:
      description: |-
        This method adds a new Safe to the Vault.

        The user who runs this web service requires **Add Safes** permissions in the Vault.
      operationId: AddSafe
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: |-
              {
                  "SafeName": "testSafe1",
                  "Description": "Desc1",
                  "OLACEnabled": false,
                  "ManagingCPM": "PasswordManager",
                  "NumberOfVersionsRetention": null,
                  "NumberOfDaysRetention": 0,
                  "AutoPurgeEnabled": false,
                  "Location": "\\"
              }
            schema:
              example: '{"SafeName":"testSafe1","Description":"Desc1","OLACEnabled":false,"ManagingCPM":"PasswordManager","NumberOfVersionsRetention":null,"NumberOfDaysRetention":0,"AutoPurgeEnabled":false,"Location":"\\"}'
              type: string
        description: |-
          This method adds a new Safe to the Vault.

          The user who runs this web service requires **Add Safes** permissions in the Vault.
        required: true
      responses:
        "200": {}
      summary: Add Safe
      tags: []
  /PasswordVault/api/Platforms/{PlatformName}/Safes:
    get:
      description: This method returns all the safes according to the platform ID.
      operationId: GetSafebyPlatformID
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: PlatformName
        required: true
        schema:
          example: PlatformName
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              example:
                value:
                - ConjurSync
                - D-Nix-Root
                - D-Win-DomainAdmins
                - D-Win-LocalAdmins
                - DemoSafe
                - Notification Engine
                - PasswordManager
                - PasswordManagerShared
                - PSM
                - PSMUniversalConnectors
                - PSMUnmanagedSessionAccounts
                - PVWAPublicData
                - PVWATicketingSystem
                - ResponseManager
                - TelemetryConfig
                - Test1234
                - VaultInternal
                count: 17
              schema:
                $ref: '#/components/schemas/200'
          description: 200 OK
      summary: Get Safe by Platform ID
      tags: []
  /PasswordVault/api/Safes/{Safe}:
    delete:
      description: |-
        This method deletes a Safe from the Vault.

        The user who runs this web service requires **Manage Safe** permissions on the required Safe.
      operationId: DeleteSafe
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: Safe
        required: true
        schema:
          example: Safe
          type: string
        style: simple
      responses:
        "200": {}
      summary: Delete Safe
      tags: []
    get:
      description: This method returns information about a specific Safe in the Vault.
      operationId: GetSafeDetails
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: Safe
        required: true
        schema:
          example: Safe
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              example:
                GetSafeResult:
                  Description: ""
                  ManagingCPM: PasswordManagerNG
                  NumberOfDaysRetention: null
                  NumberOfVersionsRetention: 5
                  OLACEnabled: false
                  SafeName: P-WIN-LOCAL-ADMIN
              schema:
                $ref: '#/components/schemas/200'
          description: 200 OK
      summary: Get Safe Details
      tags: []
  /PasswordVault/API/Safes/{Safe}/AccountGroups:
    get:
      description: |-
        This method returns all the existing account groups in a specific Safe. The user performing this task must have the following permissions in the Safe:

        * Add accounts
        * Update account content
        * Update account properties
        * Create folders
      operationId: GetSafeAccountGroups
      parameters:
      - explode: false
        in: path
        name: Safe
        required: true
        schema:
          example: Safe
          type: string
        style: simple
      responses:
        "200": {}
      summary: Get Safe Account Groups
      tags: []
  /PasswordVault/api/Safes/{Safe}/Members:
    get:
      description: This method returns a list of the members of a Safe. To run this
        web service, the user must have **ViewSafeMembers** permissions in the Safe.
      operationId: GetSafeMembers
      parameters:
      - description: Filters are according to the REST standard. Search for Safe members
          using the following filters. Multiple filters can be applied using the AND
          operator. memberType, membershipExpired, includePreDefinedUsers
        explode: true
        in: query
        name: filter
        required: true
        schema:
          example: memberType eq user AND membershipExpired eq false AND includePreDefinedUsers
            eq false
          type: string
        style: form
      - description: Searches according to the Safe name. Search is performed according
          to the REST standard (search="search word").
        explode: true
        in: query
        name: search
        required: true
        schema:
          example: searchWord
          type: string
        style: form
      - description: Offset of the first member that is returned in the collection
          of results.
        explode: true
        in: query
        name: offset
        required: true
        schema:
          type: number
        style: form
      - description: The maximum number of members that are returned. When used together
          with the offset parameter, this value determines the number of Safes to
          return, starting from the first Safe that is returned.
        explode: true
        in: query
        name: limit
        required: true
        schema:
          type: number
        style: form
      - description: Sorts according to the memberName property in ascending order
          (default) or descending order to control the sort direction.
        explode: true
        in: query
        name: sort
        required: true
        schema:
          example: asc
          type: string
        style: form
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: Safe
        required: true
        schema:
          example: Safe
          type: string
        style: simple
      responses:
        "200": {}
      summary: Get Safe Members
      tags: []
    post:
      description: |-
        This method adds an existing user or group as a Safe member.

        The user who runs this web service requires the following permissions in the Vault:

        * Manage Safe Members
      operationId: AddSafeMember
      parameters:
      - description: Session Authorization Token
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          example: '{{CyberArkLogonResult}}'
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - explode: false
        in: path
        name: Safe
        required: true
        schema:
          example: Safe
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: |-
              {
                  "memberName": "JonDoe",
                  "searchIn": "Vault",
                  "membershipExpirationDate": 123456,
                  "permissions": {
                      "useAccounts": false,
                      "retrieveAccounts": false,
                      "listAccounts": false,
                      "addAccounts": false,
                      "updateAccountContent": false,
                      "updateAccountProperties": false,
                      "initiateCPMAccountManagementOperations": false,
                      "specifyNextAccountContent": false,
                      "renameAccounts": false,
                      "deleteAccounts": false,
                      "unlockAccounts": false,
                      "manageSafe": false,
                      "manageSafeMembers": false,
                      "backupSafe": false,
                      "viewAuditLog": false,
                      "viewSafeMembers": false,
                      "accessWithoutConfirmation": false,
                      "createFolders": false,
                      "deleteFolders": false,
                      "moveAccountsAndFolders": false,
                      "requestsAuthorizationLevel1": false,
                      "requestsAuthorizationLevel2": false
                  }
              }
            schema:
              example: '{"memberName":"JonDoe","searchIn":"Vault","membershipExpirationDate":123456,"permissions":{"useAccounts":false,"retrieveAccounts":false,"listAccounts":false,"addAccounts":false,"updateAccountContent":false,"updateAccountProperties":false,"initiateCPMAccountManagementOperations":false,"specifyNextAccountContent":false,"renameAccounts":false,"deleteAccounts":false,"unlockAccounts":false,"manageSafe":false,"manageSafeMembers":false,"backupSafe":false,"viewAuditLog":false,"viewSafeMembers":false,"accessWithoutConfirmation":false,"createFolders":false,"deleteFolders":false,"moveAccountsAndFolders":false,"requestsAuthorizationLevel1":false,"requestsAuthorizationLevel2":false}}'
              type: string
        description: |-
          This method adds an existing user or group as a Safe member.

          The user who runs this web service requires the following permissions in the Vault:

          * Manage Safe Members
        required: true
      responses:
        "200": {}
      summary: Add Safe Member
      tags: []
components:
  parameters:
    Authorization:
      description: Session Authorization Token
      explode: false
      in: header
      name: Authorization
      required: true
      schema:
        example: '{{CyberArkLogonResult}}'
        type: string
      style: simple
    Content-Type:
      explode: false
      in: header
      name: Content-Type
      required: true
      schema:
        example: application/json
        type: string
      style: simple
    AccountID:
      explode: false
      in: path
      name: AccountID
      required: true
      schema:
        example: AccountID
        type: string
      style: simple
    search:
      description: List of keywords to search for in accounts, separated by a space.
      explode: true
      in: query
      name: search
      required: true
      schema:
        example: DemoUser
        type: string
      style: form
    searchType:
      description: 'Get accounts that either contain or start with the value specified
        in the Search parameter. Valid values: contains (default) or startswith.'
      explode: true
      in: query
      name: searchType
      required: true
      schema:
        example: contains
        type: string
      style: form
    sort:
      description: Property or properties by which to sort returned accounts, followed
        by asc (default) or desc to control sort direction. Separate multiple properties
        with commas, up to a maximum of three properties.
      explode: true
      in: query
      name: sort
      required: true
      schema:
        example: UserName
        type: string
      style: form
    offset:
      description: Offset of the first account that is returned in the collection
        of results.
      explode: true
      in: query
      name: offset
      required: true
      schema:
        type: number
      style: form
    limit:
      description: Maximum number of returned accounts. If not specified, the default
        value is 50. The maximum number that can be specified is 1000.
      explode: true
      in: query
      name: limit
      required: true
      schema:
        type: number
      style: form
    filter:
      description: Get accounts from a specific safe, using the safe name.
      explode: true
      in: query
      name: filter
      required: true
      schema:
        example: safeName eq {{Safe}}
        type: string
      style: form
    Accept:
      explode: false
      in: header
      name: Accept
      required: true
      schema:
        example: RDP
        type: string
      style: simple
    Safe:
      explode: true
      in: query
      name: Safe
      required: true
      schema:
        example: '{{Safe}}'
        type: string
      style: form
    GroupName:
      explode: false
      in: path
      name: GroupName
      required: true
      schema:
        example: GroupName
        type: string
      style: simple
    BulkID:
      explode: false
      in: path
      name: BulkID
      required: true
      schema:
        example: BulkID
        type: string
      style: simple
    concurrentSession:
      description: Boolean value
      explode: true
      in: query
      name: concurrentSession
      required: true
      schema:
        example: "true"
        type: string
      style: form
    apiUse:
      description: Never should be false
      explode: true
      in: query
      name: apiUse
      required: true
      schema:
        example: "true"
        type: string
      style: form
    SAMLResponse:
      description: The SAML Token returned from your IdP
      explode: true
      in: query
      name: SAMLResponse
      required: true
      schema:
        example: '{{SAMLToken}}'
        type: string
      style: form
    authID:
      explode: false
      in: path
      name: authID
      required: true
      schema:
        example: authID
        type: string
      style: simple
    PlatformName:
      explode: false
      in: path
      name: PlatformName
      required: true
      schema:
        example: PlatformName
        type: string
      style: simple
    Active:
      description: 'Filter according to whether the platform is active or not. Valid
        values: true or false'
      explode: true
      in: query
      name: Active
      required: true
      schema:
        example: "true"
        type: string
      style: form
    PlatformType:
      description: 'Filter according to the platform type. Valid values: Group or
        Regular'
      explode: true
      in: query
      name: PlatformType
      required: true
      schema:
        example: Regular
        type: string
      style: form
    includeAccounts:
      description: Whether or not to return accounts for each Safe as part of the
        response. If not sent, the value is False.
      explode: true
      in: query
      name: includeAccounts
      required: true
      schema:
        example: "false"
        type: string
      style: form
    extendedDetails:
      description: Whether or not to return all Safe details or only safeName as part
        of the response. If not sent, the value is True.
      explode: true
      in: query
      name: extendedDetails
      required: true
      schema:
        example: "true"
        type: string
      style: form
  requestBodies:
    inline_object:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object'
      required: true
  schemas:
    "200":
      example:
        address: 192.168.3.101
        secretType: password
        secretManagement:
          lastModifiedTime: 0
          automaticManagementEnabled: true
          status: success
        name: ANSIBLE-RESTAPI-USER
        createdTime: 6
        id: 24_3
        platformId: JG-CyberArkVault
        userName: Svc_AnsibleREST
        safeName: D-CYBR-RESTAPI-ACCTS
      properties:
        id:
          default: 24_3
          type: string
        name:
          default: ANSIBLE-RESTAPI-USER
          type: string
        address:
          default: 192.168.3.101
          type: string
        userName:
          default: Svc_AnsibleREST
          type: string
        platformId:
          default: JG-CyberArkVault
          type: string
        safeName:
          default: D-CYBR-RESTAPI-ACCTS
          type: string
        secretType:
          default: password
          type: string
        secretManagement:
          $ref: '#/components/schemas/_200_secretManagement'
        createdTime:
          default: 1541876282
          type: integer
      type: object
    "201":
      properties:
        id:
          default: 29_7
          type: string
        name:
          default: Database-MySQL-db2.joegarcia.dev-cluster02sqluser01
          type: string
        address:
          default: db2.joegarcia.dev
          type: string
        userName:
          default: cluster02sqluser01
          type: string
        platformId:
          default: MySQLServer-DualAccounts
          type: string
        safeName:
          default: D-MySQL-Users
          type: string
        secretType:
          default: password
          type: string
        platformAccountProperties:
          $ref: '#/components/schemas/_201_platformAccountProperties'
        secretManagement:
          $ref: '#/components/schemas/_201_secretManagement'
        createdTime:
          default: 1581084295
          type: integer
      type: object
    inline_object:
      properties:
        username:
          example: '{{apiUsername}}'
          type: string
        password:
          example: '{{apiPassword}}'
          type: string
      required:
      - password
      - username
      type: object
    _200_secretManagement:
      example:
        lastModifiedTime: 0
        automaticManagementEnabled: true
        status: success
      properties:
        automaticManagementEnabled:
          default: true
          type: boolean
        status:
          default: success
          type: string
        lastModifiedTime:
          default: 1541876282
          type: integer
      type: object
    _201_platformAccountProperties:
      properties:
        Index:
          default: "1"
          type: string
        DualAccountStatus:
          default: Active
          type: string
        VirtualUsername:
          default: cluster02sqluser
          type: string
      type: object
    _201_secretManagement:
      properties:
        automaticManagementEnabled: {}
        manualManagementReason:
          default: testing
          type: string
        lastModifiedTime:
          default: 1581084295
          type: integer
      type: object
