{
	"info": {
		"_postman_id": "18a45ad8-77e8-4ecc-873e-787c6de10a60",
		"name": "CyberArkIAG",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Accounts",
			"item": [
				{
					"name": "v2 API",
					"item": [
						{
							"name": "Extended Account Overview",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/ExtendedAccounts/{{AccountID}}/overview",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"ExtendedAccounts",
										"{{AccountID}}",
										"overview"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Accounts",
							"request": {
								"method": "GET",
								"header": [
									{
										"value": "application/json",
										"type": "text",
										"key": "Content-Type"
									},
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Accounts?search=DemoUser&searchType=contains&sort=UserName&offset=25&limit=1000&filter=safeName eq {{Safe}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Accounts"
									],
									"query": [
										{
											"key": "search",
											"value": "DemoUser",
											"description": "List of keywords to search for in accounts, separated by a space."
										},
										{
											"key": "searchType",
											"value": "contains",
											"description": "Get accounts that either contain or start with the value specified in the Search parameter. Valid values: contains (default) or startswith."
										},
										{
											"key": "sort",
											"value": "UserName",
											"description": "Property or properties by which to sort returned accounts, followed by asc (default) or desc to control sort direction. Separate multiple properties with commas, up to a maximum of three properties."
										},
										{
											"key": "offset",
											"value": "25",
											"description": "Offset of the first account that is returned in the collection of results."
										},
										{
											"key": "limit",
											"value": "1000",
											"description": "Maximum number of returned accounts. If not specified, the default value is 50. The maximum number that can be specified is 1000."
										},
										{
											"key": "filter",
											"value": "safeName eq {{Safe}}",
											"description": "Get accounts from a specific safe, using the safe name."
										}
									]
								},
								"description": "This method returns a list of all the accounts in the Vault.\n\nThe user who runs this web service requires **List Accounts** permissions in the Safe."
							},
							"response": []
						},
						{
							"name": "Get Account Details",
							"request": {
								"method": "GET",
								"header": [
									{
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Accounts/{{AccountID}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Accounts",
										"{{AccountID}}"
									]
								},
								"description": "This method returns information about an account identified by its ID.\n\nThe user who runs this web service requires **List Accounts** permissions in the Safe where the account is located inside the Vault."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"key": "Authorization",
												"disabled": true
											},
											{
												"type": "text",
												"value": "application/json",
												"key": "Content-Type",
												"disabled": true
											}
										],
										"url": {
											"raw": ""
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=BE36C14D1FE1AAFA; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=00000002A2FA411668862E3FD3D87ACCFC25E30E79362257102F7C6E3D265BFB2223998300000000; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=cyberark; path=/PasswordVault/; secure"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "Date",
											"value": "Sun, 11 Nov 2018 21:27:37 GMT"
										},
										{
											"key": "Content-Length",
											"value": "317"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"24_3\",\n    \"name\": \"ANSIBLE-RESTAPI-USER\",\n    \"address\": \"192.168.3.101\",\n    \"userName\": \"Svc_AnsibleREST\",\n    \"platformId\": \"JG-CyberArkVault\",\n    \"safeName\": \"D-CYBR-RESTAPI-ACCTS\",\n    \"secretType\": \"password\",\n    \"secretManagement\": {\n        \"automaticManagementEnabled\": true,\n        \"status\": \"success\",\n        \"lastModifiedTime\": 1541876282\n    },\n    \"createdTime\": 1541876282\n}"
								}
							]
						},
						{
							"name": "Get Account Activity",
							"request": {
								"method": "GET",
								"header": [
									{
										"type": "text",
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Accounts/{{AccountID}}/Activities",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"WebServices",
										"PIMServices.svc",
										"Accounts",
										"{{AccountID}}",
										"Activities"
									]
								},
								"description": "This method returns the activities of a specific account that is identified by its account ID."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"key": "Authorization",
												"disabled": true
											},
											{
												"value": "application/json",
												"type": "text",
												"key": "Content-Type",
												"disabled": true
											}
										],
										"url": {
											"raw": ""
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=BE36C14D1FE1AAFA; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=00000002A2FA411668862E3FD3D87ACCFC25E30E79362257102F7C6E3D265BFB2223998300000000; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=cyberark; path=/PasswordVault/; secure"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "Date",
											"value": "Sun, 11 Nov 2018 21:28:13 GMT"
										},
										{
											"key": "Content-Length",
											"value": "6876"
										}
									],
									"cookie": [],
									"body": "{\n    \"GetAccountActivitiesResult\": [\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"CPM Change Password\",\n            \"ActivityCode\": 24,\n            \"ClientID\": \"CPM\",\n            \"MoreInfo\": \"address=192.168.3.101;username=Svc_AnsibleREST;\",\n            \"Path\": \"Root\",\n            \"Reason\": \"ImmediateTask\",\n            \"Time\": \"11/10/2018 23:58:03\",\n            \"UserName\": \"PasswordManagerNG\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Store password\",\n            \"ActivityCode\": 294,\n            \"ClientID\": \"CPM\",\n            \"MoreInfo\": \"\",\n            \"Path\": \"Root\",\n            \"Reason\": \"\",\n            \"Time\": \"11/10/2018 23:58:02\",\n            \"UserName\": \"PasswordManagerNG\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Retrieve password\",\n            \"ActivityCode\": 295,\n            \"ClientID\": \"CPM\",\n            \"MoreInfo\": \"\",\n            \"Path\": \"Root\",\n            \"Reason\": \"CPM\",\n            \"Time\": \"11/10/2018 23:58:02\",\n            \"UserName\": \"PasswordManagerNG\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Retrieve password\",\n            \"ActivityCode\": 295,\n            \"ClientID\": \"CPM\",\n            \"MoreInfo\": \"\",\n            \"Path\": \"Root\",\n            \"Reason\": \"CPM\",\n            \"Time\": \"11/10/2018 23:58:02\",\n            \"UserName\": \"PasswordManagerNG\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Delete File Category\",\n            \"ActivityCode\": 107,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"LastTask\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Old Value=[VerifyTask]\",\n            \"Time\": \"11/10/2018 23:57:41\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Delete File Category\",\n            \"ActivityCode\": 107,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"CPMStatus\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Old Value=[success]\",\n            \"Time\": \"11/10/2018 23:57:41\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Delete File Category\",\n            \"ActivityCode\": 107,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"RetriesCount\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Old Value=[-1]\",\n            \"Time\": \"11/10/2018 23:57:41\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Add File Category\",\n            \"ActivityCode\": 105,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"ResetImmediately\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Value=[ChangeTask]\",\n            \"Time\": \"11/10/2018 23:57:41\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Retrieve password\",\n            \"ActivityCode\": 295,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"\",\n            \"Path\": \"Root\",\n            \"Reason\": \"(Action: Show Password)\",\n            \"Time\": \"11/10/2018 23:57:30\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"CPM Verify Password\",\n            \"ActivityCode\": 22,\n            \"ClientID\": \"CPM\",\n            \"MoreInfo\": \"address=192.168.3.101;username=Svc_AnsibleREST;\",\n            \"Path\": \"Root\",\n            \"Reason\": \"ImmediateTask\",\n            \"Time\": \"11/04/2018 15:49:12\",\n            \"UserName\": \"PasswordManager\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Retrieve password\",\n            \"ActivityCode\": 295,\n            \"ClientID\": \"CPM\",\n            \"MoreInfo\": \"\",\n            \"Path\": \"Root\",\n            \"Reason\": \"CPM internal process\",\n            \"Time\": \"11/04/2018 15:49:12\",\n            \"UserName\": \"PasswordManager\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Retrieve password\",\n            \"ActivityCode\": 295,\n            \"ClientID\": \"CPM\",\n            \"MoreInfo\": \"\",\n            \"Path\": \"Root\",\n            \"Reason\": \"CPM\",\n            \"Time\": \"11/04/2018 15:49:10\",\n            \"UserName\": \"PasswordManager\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Delete File Category\",\n            \"ActivityCode\": 107,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"LastTask\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Old Value=[VerifyTask]\",\n            \"Time\": \"11/04/2018 15:45:58\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Delete File Category\",\n            \"ActivityCode\": 107,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"CPMStatus\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Old Value=[success]\",\n            \"Time\": \"11/04/2018 15:45:58\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Update File Category\",\n            \"ActivityCode\": 106,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"RetriesCount\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Value=[-1] Old Value=[-1]\",\n            \"Time\": \"11/04/2018 15:45:58\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Add File Category\",\n            \"ActivityCode\": 105,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"ResetImmediately\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Value=[VerifyTask]\",\n            \"Time\": \"11/04/2018 15:45:58\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Update File Category\",\n            \"ActivityCode\": 106,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"PolicyID\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Value=[JG-CyberArkVault] Old Value=[CyberArk]\",\n            \"Time\": \"11/04/2018 15:45:51\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Retrieve password\",\n            \"ActivityCode\": 295,\n            \"ClientID\": \"AppPrv\",\n            \"MoreInfo\": \"\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Application provider background refresh job\",\n            \"Time\": \"10/21/2018 13:39:22\",\n            \"UserName\": \"Prov_COMPONENTS\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Retrieve password\",\n            \"ActivityCode\": 295,\n            \"ClientID\": \"AppPrv\",\n            \"MoreInfo\": \"\",\n            \"Path\": \"Root\",\n            \"Reason\": \"AIM password request\",\n            \"Time\": \"10/21/2018 13:38:57\",\n            \"UserName\": \"Prov_COMPONENTS\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"CPM Verify Password\",\n            \"ActivityCode\": 22,\n            \"ClientID\": \"CPM\",\n            \"MoreInfo\": \"address=192.168.3.101;username=Svc_AnsibleREST;\",\n            \"Path\": \"Root\",\n            \"Reason\": \"ImmediateTask\",\n            \"Time\": \"10/21/2018 13:04:25\",\n            \"UserName\": \"PasswordManager\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Retrieve password\",\n            \"ActivityCode\": 295,\n            \"ClientID\": \"CPM\",\n            \"MoreInfo\": \"\",\n            \"Path\": \"Root\",\n            \"Reason\": \"CPM internal process\",\n            \"Time\": \"10/21/2018 13:04:25\",\n            \"UserName\": \"PasswordManager\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Retrieve password\",\n            \"ActivityCode\": 295,\n            \"ClientID\": \"CPM\",\n            \"MoreInfo\": \"\",\n            \"Path\": \"Root\",\n            \"Reason\": \"CPM\",\n            \"Time\": \"10/21/2018 13:04:24\",\n            \"UserName\": \"PasswordManager\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Add File Category\",\n            \"ActivityCode\": 105,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"RetriesCount\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Value=[-1]\",\n            \"Time\": \"10/21/2018 13:02:31\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Add File Category\",\n            \"ActivityCode\": 105,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"ResetImmediately\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Value=[VerifyTask]\",\n            \"Time\": \"10/21/2018 13:02:31\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Add File Category\",\n            \"ActivityCode\": 105,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"CreationMethod\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Value=[PVWA]\",\n            \"Time\": \"10/21/2018 13:02:23\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Add File Category\",\n            \"ActivityCode\": 105,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"Address\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Value=[192.168.3.101]\",\n            \"Time\": \"10/21/2018 13:02:23\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Add File Category\",\n            \"ActivityCode\": 105,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"DeviceType\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Value=[Application]\",\n            \"Time\": \"10/21/2018 13:02:22\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Add File Category\",\n            \"ActivityCode\": 105,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"UserName\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Value=[Svc_AnsibleREST]\",\n            \"Time\": \"10/21/2018 13:02:22\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Add File Category\",\n            \"ActivityCode\": 105,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"PolicyID\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Value=[CyberArk]\",\n            \"Time\": \"10/21/2018 13:02:22\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Store password\",\n            \"ActivityCode\": 294,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"\",\n            \"Path\": \"Root\",\n            \"Reason\": \"\",\n            \"Time\": \"10/21/2018 13:02:22\",\n            \"UserName\": \"mike\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Add Account",
							"request": {
								"method": "POST",
								"header": [
									{
										"type": "text",
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"type": "text",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"string\",\n\t\"address\": \"string\",\n\t\"userName\": \"string\",\n\t\"platformId\": \"string\",\n\t\"safeName\": \"string\",\n\t\"secretType\": \"password\",\n\t\"secret\": \"string\",\n\t\"platformAccountProperties\": {\n\t\t\"LogonDomain\": \"string\",\n\t\t\"Port\": \"integer\"\n\t},\n\t\"secretManagement\": {\n\t\t\"automaticManagementEnabled\": true,\n\t\t\"manualManagementReason\": \"string\"\n\t},\n\t\"remoteMachinesAccess\": {\n\t\t\"remoteMachines\": \"string\",\n\t\t\"accessRestrictedToRemoteMachines\": true\n\t}\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Accounts",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Accounts"
									]
								},
								"description": "This method adds a new privileged account or SSH key to the Vault.\n\nTo run this web service, a user requires the following permission in the Vault:\n\n* Add account\n\nAND either\n\n* Update password\n\nOR\n\n* Update password properties\n\n**Note:** You require an additional license to add SSH keys to the Vault. For more information, contact your CyberArk representative."
							},
							"response": [
								{
									"name": "Add Dual Account - 201 Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"key": "Authorization",
												"disabled": true
											},
											{
												"type": "text",
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"Database-MySQL-db2.joegarcia.dev-cluster02sqluser01\",\n\t\"address\": \"db2.joegarcia.dev\",\n\t\"userName\": \"cluster02sqluser01\",\n\t\"platformId\": \"MySQLServer-DualAccounts\",\n\t\"safeName\": \"D-MySQL-Users\",\n\t\"secretType\": \"password\",\n\t\"secret\": \"Cyberark1\",\n\t\"platformAccountProperties\": {\n\t\t\"VirtualUsername\": \"cluster02sqluser\",\n\t\t\"Index\": \"1\",\n\t\t\"DualAccountStatus\": \"Active\"\n\t},\n\t\"secretManagement\": {\n\t\t\"automaticManagementEnabled\": false,\n\t\t\"manualManagementReason\": \"testing\"\n\t}\n}"
										},
										"url": {
											"raw": ""
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Location",
											"value": "https://cyberark.joegarcia.dev/PasswordVault/api/Accounts/29_7"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=5CD7FDF700FD44E2; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=00000002BD847BB673806B6186BE3FB6EB49CFE4EAB00A619FE17D78321027A47916681700000000; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=radius; path=/PasswordVault/; secure"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "api-supported-versions",
											"value": "11.0"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=3159600;includeSubdomains;preload"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Date",
											"value": "Fri, 07 Feb 2020 19:04:06 GMT"
										},
										{
											"key": "Content-Length",
											"value": "481"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"29_7\",\n    \"name\": \"Database-MySQL-db2.joegarcia.dev-cluster02sqluser01\",\n    \"address\": \"db2.joegarcia.dev\",\n    \"userName\": \"cluster02sqluser01\",\n    \"platformId\": \"MySQLServer-DualAccounts\",\n    \"safeName\": \"D-MySQL-Users\",\n    \"secretType\": \"password\",\n    \"platformAccountProperties\": {\n        \"Index\": \"1\",\n        \"DualAccountStatus\": \"Active\",\n        \"VirtualUsername\": \"cluster02sqluser\"\n    },\n    \"secretManagement\": {\n        \"automaticManagementEnabled\": false,\n        \"manualManagementReason\": \"testing\",\n        \"lastModifiedTime\": 1581084295\n    },\n    \"createdTime\": 1581084295\n}"
								}
							]
						},
						{
							"name": "Add Pending Account",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"pendingAccount\": {\n\t\t\"UserName\":\"<user name>\",\n\t\t\"Address\":\"<address>\",\n\t\t\"AccountDiscoveryDate\":\"<YYYY-MM-DDThh:mm:ssZ>\",\n\t\t\"AccountEnabled\":\"<enabled/disabled>\", \n\t\t\"AccountOSGroups\":\"<group name>\",\n\t\t\"AccountType\":\"<domain/local>\",\n\t\t\"Domain\":\"<domain name>\",\n\t\t\"PasswordNeverExpires\":\"<true/false>\",\n\t\t\"OSVersion\":\"<OS version>\",\n\t\t\"OU\":\"<OU>\",\n\t\t\"AccountCategory\":\"<Privileged/Non-privileged>\",\n\t\t\"UserDisplayName\":\"<user display name>\",\n\t\t\"AccountDescription\":\"<description>\",\n\t\t\"GID\":\"<GID>\",\n\t\t\"UID\":\"<UID>\",\n\t\t\"OSType\":\"<Windows/Unix>\",\n\t\t\"DiscoveryPlatformType\":\"<platform name>\",\n\t\t\"MachineOSFamily\":\"<workstation/server>\",\n\t\t\"LastLogonDate\":\"<YYYY-MM-DDThh:mm:ssZ>\",\n\t\t\"LastPasswordSetDate\":\"<YYYY-MM-DDThh:mm:ssZ>\",\n\t\t\"AccountExpirationDate\":\"<YYYY-MM-DDThh:mm:ssZ>\",\n\t\t\"AccountCategoryCriteria\":\"<criteria>\"\n\t}\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/PendingAccounts",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"WebServices",
										"PIMServices.svc",
										"PendingAccounts"
									]
								},
								"description": "This method enables an account or SSH key that is discovered by an external scanner to be added as a pending account to the Accounts Feed. This facilitates the privileged account workflow, during which users can identify privileged accounts and determine which are onboarded to the Vault.\n\n**Note:** In order to add SSH keys to the Vault, you require an additional license. For more information, contact your CyberArk representative."
							},
							"response": []
						},
						{
							"name": "Link an Account",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Name\": \"ObjectName\",\n    \"ExtraPassID\": \"1/2/3\",\n    \"Folder\": \"Root\"\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Accounts/{{AccountID}}/LinkAccount",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Accounts",
										"{{AccountID}}",
										"LinkAccount"
									]
								},
								"description": "This method enables a user to associate a linked account to an existing source account. The linked account can be a Reconcile account, Logon account, or other type of linked account that is defined in the platform configuration.\n  \t\n_**Note:** The type of linked accounts that are allowed are determined by the Platform settings. Each platform can support different types of linked accounts._\n\nTo run this service, the user must have the following Safe member authorizations:\n\n* List accounts - For both the Safe of the linked account and the Safe of the source account\n* Update account properties - For the Safe of the source account"
							},
							"response": []
						},
						{
							"name": "Update Account",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization",
										"type": "text"
									},
									{
										"value": "application/json",
										"key": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n\t{\n\t\t\"op\": \"replace\",\n\t\t\"path\": \"/address\",\n\t\t\"value\": \"NewAddress\"\n\t},\n\t{\n\t\t\"op\": \"add\",\n\t\t\"path\": \"/port\",\n\t\t\"value\": \"3306\"\n\t},\n\t{\n\t\t\"op\": \"remove\",\n\t\t\"path\": \"/ticketnumber\",\n\t\t\"value\": \"\"\n\t}\n]"
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Accounts/{{AccountID}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Accounts",
										"{{AccountID}}"
									]
								},
								"description": "This method updates an existing account's details. It is not mandatory to send all the account’s details. Any changed values sent in the request will be updated. All other properties values will remain the same.\n\nOn each property, the following operations can be performed:\n\n* Replace - replace the existing value of a property\n* Remove (to remove the property from the account)\n* Add (to add that property to the account)\n\nIt is possible to set several properties using the same command using the following structure:\n\n```json\n[\n\t{\n\t    \"op\": \"replace\",\n\t    \"path\": \"/platformaccountproperties\",\n\t    \"value\": \"{\n\t        \\\"{PropertyID1}\\\":\\\"{Value}\\\",\n\t        \\\"{PropertyID2}\\\":\\\"{Value}\\\",\n\t        \\\"{PropertyID3}\\\":\\\"{Value}\\\"\n\t    }\"\n\t}\n]\n```\n\nWhen sending several operations on the same property, only the last operation will affect the property."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"value": "{{CyberArkLogonResult}}",
												"key": "Authorization",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n\t{\n\t\t\"op\": \"replace\",\n\t\t\"path\": \"/address\",\n\t\t\"value\": \"NewAddress\"\n\t}\n]"
										},
										"url": {
											"raw": ""
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=16FEA5F59A5A4E3A; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=00000002C10DFF4C7D9E95730A852C9200D8288EE70B01258A83CE498AB47E7A3515211200000000; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=cyberark; path=/PasswordVault/; secure"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "Date",
											"value": "Tue, 15 Jan 2019 17:39:16 GMT"
										},
										{
											"key": "Content-Length",
											"value": "271"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"29_3\",\n    \"name\": \"TEST-RESTAPI-uadmin\",\n    \"address\": \"NewAddress\",\n    \"userName\": \"u_admin\",\n    \"platformId\": \"WinDomain\",\n    \"safeName\": \"TEST-RESTAPI\",\n    \"secretType\": \"password\",\n    \"secretManagement\": {\n        \"automaticManagementEnabled\": true,\n        \"lastModifiedTime\": 1547468682\n    },\n    \"createdTime\": 1547468682\n}"
								}
							]
						},
						{
							"name": "Delete Account",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization",
										"type": "text"
									},
									{
										"type": "text",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Accounts/{{AccountID}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Accounts",
										"{{AccountID}}"
									]
								},
								"description": "This method deletes a specific account in the Vault.\n\nThe user who runs this web service requires **Delete Accounts** permissions in the Vault."
							},
							"response": []
						}
					],
					"event": [
						{
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							},
							"listen": "prerequest",
							"disabled": false
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							},
							"disabled": false
						}
					]
				},
				{
					"name": "Account Actions",
					"item": [
						{
							"name": "v2 API",
							"item": [
								{
									"name": "Ad-Hoc Connect through PSM",
									"request": {
										"method": "POST",
										"header": [
											{
												"type": "text",
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}"
											},
											{
												"value": "application/json",
												"key": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"UserName\":\"<User Name>\",\n\t\"Secret\":\"<password>\",\n\t\"Address\":\"<Address>\",\n\t\"PlatformId\":\"<Secure Connect Platform>\",\n\t\"extraFields\":{},\n\t\"PSMConnectPrerequisites\": {\n\t\t\"ConnectionComponent\":\"<Connection Component ID>\",\n\t\t\"ConnectionType\":\"<RDPFile or PSMGW>\"\n\t}\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/Accounts/AdHocConnect",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"Accounts",
												"AdHocConnect"
											]
										},
										"description": "This method allows you to connect through PSM without using an existing account, by returning settings that can be used with an RDP client application or for the HTML5 gateway.\n\nYou must enable Privileged Session Monitoring and ad-hoc connection via PVWA configuration. For more details, see [Ad Hoc Connections](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/Latest/en/Content/PASIMP/Configuring-Secure-Connect.htm)."
									},
									"response": []
								},
								{
									"name": "Change Password Immediately",
									"request": {
										"method": "POST",
										"header": [
											{
												"type": "text",
												"value": "{{CyberArkLogonResult}}",
												"key": "Authorization"
											},
											{
												"type": "text",
												"value": "application/json",
												"key": "Content-Type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"ChangeEntireGroup\" : true\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/API/Accounts/{{AccountID}}/Change",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"API",
												"Accounts",
												"{{AccountID}}",
												"Change"
											]
										},
										"description": "This method marks an account for an immediate credentials change by the CPM to a new random value.\n\nThe user who runs this web service requires the following permission in the Safe where the privileged account is stored:\n\n* Initiate CPM password management operations"
									},
									"response": []
								},
								{
									"name": "Change Password in the Vault Only",
									"request": {
										"method": "POST",
										"header": [
											{
												"type": "text",
												"value": "{{CyberArkLogonResult}}",
												"key": "Authorization"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"ChangeEntireGroup\": false,\n\t\"NewCredentials\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/Accounts/{{AccountID}}/Password/Update",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"Accounts",
												"{{AccountID}}",
												"Password",
												"Update"
											]
										},
										"description": "This method enables users to set account credentials and change them in the Vault. This will not affect credentials on the target device.\n\nThe user who runs this web service requires **Update password value** permission in the Safe where the privileged account is stored."
									},
									"response": []
								},
								{
									"name": "Change Password, Set Next Password",
									"request": {
										"method": "POST",
										"header": [
											{
												"value": "{{CyberArkLogonResult}}",
												"key": "Authorization",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"ChangeImmediately\" : true,\n\t\"NewCredentials\": \"<credentials>\"\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/passwordvault/api/Accounts/{{AccountID}}/SetNextPassword",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"passwordvault",
												"api",
												"Accounts",
												"{{AccountID}}",
												"SetNextPassword"
											]
										},
										"description": "This method enables users to set the account's credentials to use for the next CPM change.\n\nThe user who runs this web service requires the following permissions in the Safe where the privileged account is stored:\n\n* Initiate CPM password management operations\n* Specify next password value"
									},
									"response": []
								},
								{
									"name": "Check In an Exclusive Account",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}",
												"type": "text"
											},
											{
												"value": "application/json",
												"key": "Content-Type",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/API/Accounts/{{AccountID}}/CheckIn",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"API",
												"Accounts",
												"{{AccountID}}",
												"CheckIn"
											]
										},
										"description": "This method checks an exclusive account into the Vault.\n\n* If the account is managed automatically by the CPM, after it is checked in, the password is changed immediately.\n* If the account is managed manually, a notification is sent to a user who is authorized to change the password. The account is checked in automatically after it has been changed.\n\nThe user who runs this web service requires the following permission in the Safe where the privileged account is stored:\n\n* Initiate CPM password management operations"
									},
									"response": []
								},
								{
									"name": "Connect Using PSM",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"type": "text",
												"value": "RDP",
												"key": "Accept"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"reason\":\"<Reason>\",\n\t\"TicketingSystemName\":\"<Ticketing system>\",\n\t\"TicketId\":\"<Ticketid>\",\n\t\"ConnectionComponent\":\"<Connection component id>\",\n\t\"ConnectionParams\": {\n\t\t\"<Connection parameter name>\": {\n\t\t\t\"value\":\"<Connection parameter value>\",\n\t\t\t\"ShouldSave\":<true\\false>\n\t\t},\n\t\t\"<Connection parameter name>\": {\n\t\t\t\"value\":\"<Connection parameter value>\",\n\t\t\t\"ShouldSave\":<true\\false>\n\t\t}\n\t}\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/API/Accounts/{{AccountID}}/PSMConnect",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"API",
												"Accounts",
												"{{AccountID}}",
												"PSMConnect"
											]
										},
										"description": "This method enables you to connect to an account through PSM (PSMConnect) using a connection method defined in the PVWA.\n\nA response header defines which connection method is returned.\n\nFor more information, refer to [Privileged Session Management Interface](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/Latest/en/Content/PASIMP/Configuring-the-Privileged-Session-Management-Interface.htm).\n\n## Header Parameter\n\nParameter: Accept\n\nType: String\n\nDescription: The table below describes the expected response format depending on the value of the Accept header in the request, per connection method configuration (RDP File or PSM Gateway).\n\n| PVWA configuration | Optional values | Connection method |\n| --- | --- | --- |\n| RDP | application/json, application/octet-stream (default), `*/ *` | RDPFile (JSON), RDPFile (octet-stream raw) |\n| PSMGW | `* / *` | PSMGW (JSON) - Returns the HTML5 connection data. |\n\n**Note:** To use PSMGW, PSMGW must be configured before using this REST API in order to receive a PSMGW response."
									},
									"response": []
								},
								{
									"name": "Get Just in Time Access",
									"request": {
										"method": "POST",
										"header": [
											{
												"value": "{{CyberArkLogonResult}}",
												"key": "Authorization",
												"type": "text"
											},
											{
												"type": "text",
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/Accounts/{{AccountID}}/grantAdministrativeAccess",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"Accounts",
												"{{AccountID}}",
												"grantAdministrativeAccess"
											]
										},
										"description": "This method requests and receives access to a target Windows machine with administrative rights. The domain user who runs this web service will be added to the local Administrators group of the target machine.\n\n## Supported target machine environments\n\nJust in Time access is supported on the following end user machine environments:\n\n* Windows Server 2012/2012R2/2016\n* Windows 8, Windows 10\n\n## Configuration\n\nConfigure Just in Time access as described in [Configure Just in Time Access](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/11.3/en/Content/PASIMP/adhoc_access_admin.htm).\n\n## User permissions\n\nMake sure that all users who want to request access to the target Windows machine must have the following permission in the Safe:\n\n* List accounts"
									},
									"response": []
								},
								{
									"name": "Get Password Value",
									"request": {
										"method": "POST",
										"header": [
											{
												"type": "text",
												"value": "{{CyberArkLogonResult}}",
												"key": "Authorization"
											},
											{
												"value": "application/json",
												"key": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"reason\":\"<Reason>\",\n\t\"TicketingSystemName\": \"<Ticketing system>\",\n\t\"TicketId\": \"<Ticketid>\",\n\t\"Version\": <version number>,\n\t\"ActionType\": \"<action type - show\\copy\\connect>\n\t\"isUse\": <true\\false>,\n\t\"Machine\": \"<my remote machine address>\"\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/Accounts/{{AccountID}}/Password/Retrieve",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"Accounts",
												"{{AccountID}}",
												"Password",
												"Retrieve"
											]
										},
										"description": "This method enables users to retrieve the password or SSH key of an existing account that is identified by its Account ID. It enables users to specify a reason and ticket ID, if required.\n\n**Note:** The ability to retrieve credentials using this REST API is intended for human use only and is not recommended for applications or automated processes, where application-based authentication is required.\n\nFor application or automated processes use cases, refer to the [AAM Credential Providers Online Help](https://docs.cyberark.com/Product-Doc/OnlineHelp/AAM-CP/Latest/en/Default.htm)."
									},
									"response": []
								},
								{
									"name": "Reconcile Password",
									"request": {
										"method": "POST",
										"header": [
											{
												"type": "text",
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}"
											},
											{
												"value": "application/json",
												"type": "text",
												"key": "Content-Type"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/API/Accounts/{{AccountID}}/Reconcile",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"API",
												"Accounts",
												"{{AccountID}}",
												"Reconcile"
											]
										},
										"description": "This method marks an account for automatic reconciliation by the CPM.\n\nThe user who runs this web service requires the following permission in the Safe where the privileged account is stored:\n\n* Initiate CPM password management operations"
									},
									"response": []
								},
								{
									"name": "Verify Password",
									"request": {
										"method": "POST",
										"header": [
											{
												"value": "{{CyberArkLogonResult}}",
												"key": "Authorization",
												"type": "text"
											},
											{
												"value": "application/json",
												"type": "text",
												"key": "Content-Type"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/API/Accounts/{{AccountID}}/Verify",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"API",
												"Accounts",
												"{{AccountID}}",
												"Verify"
											]
										},
										"description": "This method marks an account for verification by the CPM, and can be used in versions from v9.10.\n\nThe user who runs this web service requires the following permission in the Safe where the privileged account is stored:\n\n* Initiate CPM password management operations"
									},
									"response": []
								},
								{
									"name": "Change Password",
									"request": {
										"method": "PUT",
										"header": [
											{
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"key": "Authorization"
											},
											{
												"value": "application/json",
												"key": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"ImmediateChangeByCPM\": <true/false>,\n\t\"ChangeCredsForGroup\": <true/false>\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Accounts/{{AccountID}}/ChangeCredentials",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"WebServices",
												"PIMServices.svc",
												"Accounts",
												"{{AccountID}}",
												"ChangeCredentials"
											]
										},
										"description": "This method marks the account for an immediate password change by the CPM to a new random password.\n\nThe user who runs this web service requires the following permission in the Safe where the privileged account is stored:\n\n* Initiate CPM password management operations"
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Account Groups",
					"item": [
						{
							"name": "Get Account Group by Safe",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/AccountGroups?Safe={{Safe}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"AccountGroups"
									],
									"query": [
										{
											"key": "Safe",
											"value": "{{Safe}}"
										}
									]
								},
								"description": "This method returns all the account groups in a specific Safe. The user performing this task must have the following permissions in the Safe:\r\n\r\n* Add accounts\r\n* Update account content\r\n* Update account properties\r\n* Create folders"
							},
							"response": []
						},
						{
							"name": "Get Account Group Members",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/AccountGroups/{{GroupName}}/Members",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"AccountGroups",
										"{{GroupName}}",
										"Members"
									]
								},
								"description": "This method returns all the members of an existing account group. These accounts can be either password accounts or SSH Key accounts.\n\n__NOTE: All members of account groups must be stored in the same Safe as the group itself.__\n\nThe user performing this task must have the following permissions in the Safe:\n\n* Add accounts\n* Update account content\n* Update account properties\n* Create folders"
							},
							"response": []
						},
						{
							"name": "Add Account Group",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"GroupName\":\"{{GroupName}}\",\r\n  \"GroupPlatform\":\"{{PlatformID}}\",\r\n  \"Safe\":\"{{Safe}}\"\r\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/API/AccountGroups/",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"API",
										"AccountGroups",
										""
									]
								},
								"description": "This method enables application managers to define a new account group automatically, and manage accounts as part of a group.\n\nTo create an account group, users require the following permissions in the Safe where the group is created:\n* Add accounts\n* Update account content\n* Update account properties\n* Create folders\n\n**Note:** _The following characters are not supported in URL values in the Body:_ **+ & % #**"
							},
							"response": []
						},
						{
							"name": "Add Account to Account Group",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"AccountID\":\"{{AccountID}}\"\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/API/AccountGroups/{{GroupName}}/Members",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"API",
										"AccountGroups",
										"{{GroupName}}",
										"Members"
									]
								},
								"description": "This method adds an account as a member to an existing account group.  The account can contain either a password or SSH key.  All members of an account group must be stored in the same Safe as the group itself.\n\nTo add an account as a member to an account group, users require the following permissions to the Safe where the group is created:\n* Add accounts\n* Update account content\n* Update account properties\n\n**Note:** _The following characters are not support in URL values in the Body:_ **+ & % #**"
							},
							"response": []
						},
						{
							"name": "Delete Member from Account Group",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/AccountGroups/{{GroupName}}/Members/{{AccountID}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"AccountGroups",
										"{{GroupName}}",
										"Members",
										"{{AccountID}}"
									]
								},
								"description": "This method removes an account member from an account group. This account can be either a password account or an SSH Key account.\r\n\r\nThe user performing this task must have the following permissions in the Safe:\r\n\r\n* Add accounts\r\n* Update account content\r\n* Update account properties\r\n* Create folders"
							},
							"response": []
						}
					]
				},
				{
					"name": "Bulk Upload of Accounts",
					"item": [
						{
							"name": "Get All Bulk Account Uploads for User",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/bulkactions/accounts",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"bulkactions",
										"accounts"
									],
									"query": [
										{
											"key": "filter",
											"value": "",
											"description": "status - returns all bulk account uploads that meet the required status",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "50",
											"description": "number of accounts to return, starting from first account",
											"disabled": true
										}
									]
								},
								"description": "This method gets the status of all bulk account uploads that the user performed.\n\n**Note:** Bulk account uploads are returned sorted by their creation time in descending order - from the most recent to the oldest. The bulk account uploads that are returned are ones that a specific user created and has authorization to view."
							},
							"response": []
						},
						{
							"name": "Get Bulk Account Upload Result",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/bulkactions/accounts/{{BulkID}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"bulkactions",
										"accounts",
										"{{BulkID}}"
									]
								},
								"description": "This method returns the result of the bulk account upload, which is identified by the ID of the bulk account upload. When the upload has finished, the API returns the result. The result contains a list of all the accounts that succeeded or failed to upload.\n  \t\n\n**Note:** Only the user that created the bulk account upload can receive the result of the upload using this API."
							},
							"response": []
						},
						{
							"name": "Create Bulk Upload of Accounts",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"source\": \"filename.csv\",\n    \"accountsList\": [\n        {\n            \"uploadIndex\": \"1\",\n            \"username\": \"JohnDoe\",\n            \"address\": \"192.0.2.0\",\n            \"platformId\": \"WinDomain\",\n            \"safeName\": \"WinDomainSafe\",\n            \"secret\": \"123456\",\n            \"platformAccountProperties\": {\n                \"port\": \"111\"\n            },\n            \"secretManagement\": {\n                \"automaticManagementEnabled\": true,\n                \"manualManagementReason\": \"\"\n            },\n            \"remoteMachinesAccess\": {\n                \"accessRestrictedToRemoteMachines\": true,\n                \"remoteMachines\": \"example.com\"\n            },\n            \"groupName\": \"DomainGroup\"\n        },\n        {\n            \"uploadIndex\": \"2\",\n            \"username\": \"JaneDoe\",\n            \"address\": \"198.51.100.0\",\n            \"platformId\": \"WinDesktopLocal\",\n            \"safeName\": \"WinUsersSafe\",\n            \"secret\": \"123456\",\n            \"platformAccountProperties\": {\n                \"port\": \"222\"\n            },\n            \"secretManagement\": {\n                \"automaticManagementEnabled\": true,\n                \"manualManagementReason\": \"\"\n            },\n            \"remoteMachinesAccess\": {\n                \"accessRestrictedToRemoteMachines\": true,\n                \"remoteMachines\": \"example.net\"\n            },\n            \"groupName\": \"WinGroup\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/bulkactions/accounts",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"bulkactions",
										"accounts"
									]
								},
								"description": "This method allows a developer to add multiple accounts to existing Safes. The response contains the ID of the bulk account upload that was performed.\n  \t\n**Note:** This option is only available if you have **Add accounts**, **Update account content**, and **Update account properties** authorization in at least one Safe."
							},
							"response": []
						}
					],
					"description": "This section includes three methods that enable you to perform a bulk upload of multiple accounts, and review the results.\n\nFirst, to add multiple accounts at one time to the system, use the Create bulk upload of accounts REST API.\n\nNext, to check the status of all the bulk account uploads that were performed by a user, use the Get all bulk account uploads for user REST API.\n\nLast, to review a summary of uploaded accounts and accounts that failed for a specific bulk upload, use the Get bulk account upload result REST API.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Discovered Accounts",
					"item": [
						{
							"name": "v2 API",
							"item": [
								{
									"name": "Get Discovered Account Details",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"description": "Session Authorization Token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/passwordvault/api/DiscoveredAccounts/{{AccountID}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"passwordvault",
												"api",
												"DiscoveredAccounts",
												"{{AccountID}}"
											]
										},
										"description": "This method returns information about a discovered account and its dependencies from the Pending Accounts list. The discovered account is identified by its ID.\n\nTo run this web service, the user must be a member of the Vault admins group.\n\n**Note:** Discovered accounts that were onboarded either manually or automatically, according to predefined rules, won't be returned using this method."
									},
									"response": []
								},
								{
									"name": "Get Discovered Accounts",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"description": "Session Authorization Token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/passwordvault/api/DiscoveredAccounts?filter=platformType eq Windows Server Local AND privileged eq true AND accountEnabled eq true&search=admin&searchType=contains&offset=0&limit=100",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"passwordvault",
												"api",
												"DiscoveredAccounts"
											],
											"query": [
												{
													"key": "filter",
													"value": "platformType eq Windows Server Local AND privileged eq true AND accountEnabled eq true",
													"description": "search accounts using platformType, privileged, and/or accountEnabled values"
												},
												{
													"key": "search",
													"value": "admin",
													"description": "search is supported for username and address"
												},
												{
													"key": "searchType",
													"value": "contains",
													"description": "keyword is contained (contains, DEFAULT) or beginning (startswith)"
												},
												{
													"key": "offset",
													"value": "0",
													"description": "the offset of the first returned account in the list of results"
												},
												{
													"key": "limit",
													"value": "100",
													"description": "the maximum number of accounts to return (maximum value allowed is 1000)"
												}
											]
										},
										"description": "This method returns a list of all the discovered accounts from the Pending Accounts list. To run this web service, the user must be a member of the Vault admins group.\n  \t\n**Note:** Discovered accounts that were onboarded either manually or automatically, according to predefined rules, won't be returned using this method.\n\nFor more information on available filters, please visit [Filter Parameters](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/11.6/en/Content/WebServices/Get-discovered-accounts.htm#filter-parameters) in the CyberArk API Documentation."
									},
									"response": []
								},
								{
									"name": "Add Discovered Accounts (v10.8+)",
									"request": {
										"method": "POST",
										"header": [
											{
												"type": "text",
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}"
											},
											{
												"type": "text",
												"value": "application/json",
												"key": "Content-Type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"userName\": \"{{Username}}\",\n        \"address\": \"{{Address}}\",\n        \"platformTypeAccountProperties\": {\n            \"SID\": \"S-1-5-21-304654729-3147011263-1431158397-3154\"\n        },\n        \"accountEnabled\": true,\n        \"osGroups\": \"Backup Operators,IIS_IUSRS,Network Configuration Operators\",\n        \"platformType\": \"{{PlatformName}}\",\n        \"domain\": \"example.com\",\n        \"lastLogonDateTime\": \"1530635686\",\n        \"lastPasswordSetDateTime\": \"1530635786\",\n        \"passwordNeverExpires\": false,\n        \"osVersion\": \"Windows Server 2012 R2 Standard\",\n        \"privileged\": false,\n        \"userDisplayName\": \"User Display Name\",\n        \"description\": \"User Description\",\n        \"passwordExpirationDateTime\": \"1530645686\",\n        \"osFamily\": \"Server\",\n        \"OrganizationalUnit\": \"CN=Users,DC=example,DC=com\",\n        \"additionalProperties\": {\n            \"Port\": 445,\n            \"UserDN\": \"CN=user1,CN=Users,DC=example,DC=com\"\n        },\n        \"Dependencies\": [\n            {\n                \"name\": \"ServiceDep\",\n                \"address\": \"{{Address}}\",\n                \"type\": \"Windows Service\"\n            }\n        ]\n    },\n    {\n        \"userName\": \"amazon_accesskey_user\",\n        \"address\": \"aws.com\",\n        \"discoveryDate\": \"2018-05-03T13:00:00Z\",\n        \"platformType\": \"AWS Access Keys\",\n        \"privileged\": true,\n        \"platformTypeAccountProperties\": {\n            \"awsAccessKeyID\": \"ASASASASSA\",\n            \"awsAccountID\": \"123123123123\"\n        }\n    },\n    {\n        \"userName\": \"amazon_dashboard_user\",\n        \"address\": \"aws.com\",\n        \"discoveryDate\": \"2018-05-03T13:00:00Z\",\n        \"platformType\": \"AWS\",\n        \"privileged\": true,\n        \"platformTypeAccountProperties\": {\n            \"awsAccountID\": \"123123123123\"\n        }\n    },\n    {\n        \"userName\": string,\n        \"address\": string,\n        \"discoveryDate\": \"1530635689\",\n        \"platformType\": \"Azure Password Management\",\n        \"accountEnabled\": true,\n        \"privileged\": true,\n        \"privilegedCriteria\": string,\n        \"platformTypeAccountProperties\": {\n            \"activeDirectoryID\": string\n        }\n    }\n]"
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/DiscoveredAccounts",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"DiscoveredAccounts"
											]
										},
										"description": "This method adds newly discovered accounts and their dependencies.\n\n| Action | Description |\n| --- | --- |\n| Discovered account | Discovered accounts are added to the Pending Accounts list. |\n| Discovered dependency | Discovered dependencies are added to the Pending Accounts list or are automatically added to the corresponding master account that has already been onboarded. |\n| Automatic onboarding | Discovered accounts are onboarded according to matching onboarding rules. If automatic onboarding fails for any reason, the account is added to the Pending Accounts list. |\n\nCurrently, Private SSH Keys are not supported.\n\nThe user who runs this web service requires the following users and permissions:\n\nTo add pending accounts:\n\n* **User:** Owner of PasswordManager_Pending Safe\n* **Permissions:**\n  * Add account\n  * List files\n  * Update account properties\n\nTo onboard the account:\n\n* **User:** Owner of the target Safe of the onboarding rule.\n* **Permissions:**\n  * Add account\n  * Update account properties\n  * Initiate CPM account management operations"
									},
									"response": []
								}
							]
						}
					],
					"description": "This section includes REST APIs for discovered accounts. ",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "v2 API",
					"item": [
						{
							"name": "Logon - LDAP Authentication",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"CyberArkLogonResult\", jsonData);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"type": "text",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"{{apiUsername}}\",\n\t\"password\": \"{{apiPassword}}\",\n\t//\"newPassword\": \"<optional>\",\n\t\"concurrentSession\": \"true\"\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/Auth/LDAP/Logon",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"Auth",
										"LDAP",
										"Logon"
									]
								},
								"description": "This method authenticates a user to the Vault and returns a token that can be used in subsequent web services calls. In addition, this method enables you to set a new password."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"type": "text",
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"{{apiUsername}}\",\n\t\"password\": \"{{apiPassword}}\",\n\t//\"newPassword\": \"<optional>\",\n\t\"concurrentSession\": \"true\"\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/API/Auth/LDAP/Logon",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"API",
												"Auth",
												"LDAP",
												"Logon"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store, no-cache, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache,no-cache"
										},
										{
											"key": "Content-Length",
											"value": "182"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; SameSite=None; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=00000002D1C322C6F4B8051E8FA512CBEDD42A9838E0BECFB0AAE27205EED4B4C468E20700000000; path=/PasswordVault/; SameSite=None; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=19559EC4D5B70B7A; path=/PasswordVault/; SameSite=None; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=ldap; path=/PasswordVault/; SameSite=None; secure; HttpOnly"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=3159600;includeSubdomains;"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Apr 2021 03:02:43 GMT"
										}
									],
									"cookie": [],
									"body": "\"YzVjY2RkYzgtOTA1NS00NGFiLTk0ZmItMGM4MTk3NDg2NmM3OzE5NTU5RUM0RDVCNzBCN0E7MDAwMDAwMDJEMUMzMjJDNkY0QjgwNTFFOEZBNTEyQ0JFREQ0MkE5ODM4RTBCRUNGQjBBQUUyNzIwNUVFRDRCNEM0NjhFMjA3MDAwMDAwMDA7\""
								}
							]
						},
						{
							"name": "Logon - RADIUS Authentication",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"CyberArkLogonResult\", jsonData);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"Username\": \"{{apiUsername}}\",\n\t\"Password\": \"{{apiPassword}}\",\n\t\"concurrentSessions\": \"true\"\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/Auth/radius/Logon",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"Auth",
										"radius",
										"Logon"
									]
								},
								"description": "This method authenticates a user to the Vault and returns a token that can be used in subsequent web services calls. In addition, this method enables you to set a new password."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Username\": \"{{apiUsername}}\",\n\t\"Password\": \"{{apiPassword}}\",\n\t\"concurrentSessions\": \"true\"\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/API/Auth/radius/Logon",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"API",
												"Auth",
												"radius",
												"Logon"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store, no-cache, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache,no-cache"
										},
										{
											"key": "Content-Length",
											"value": "182"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; SameSite=None; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=00000002EDAB6BDCF8E23328D9FF6C41F12BF0DC382CCA53BDAB700DEEE1D53969B7378800000000; path=/PasswordVault/; SameSite=None; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=65517585B78D2D77; path=/PasswordVault/; SameSite=None; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=radius; path=/PasswordVault/; SameSite=None; secure; HttpOnly"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=3159600;includeSubdomains;"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Apr 2021 03:18:43 GMT"
										}
									],
									"cookie": [],
									"body": "\"NjczOWI1YzQtMzgzNS00OWJhLTk2OTQtOTg5ZTE5NTYwZTZlOzY1NTE3NTg1Qjc4RDJENzc7MDAwMDAwMDJFREFCNkJEQ0Y4RTIzMzI4RDlGRjZDNDFGMTJCRjBEQzM4MkNDQTUzQkRBQjcwMERFRUUxRDUzOTY5QjczNzg4MDAwMDAwMDA7\""
								}
							]
						},
						{
							"name": "Logon - Windows Authentication",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"CyberArkLogonResult\", jsonData);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"value": "application/json",
										"type": "text",
										"key": "Content-Type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"{{apiUsername}}\",\n\t\"password\": \"{{apiPassword}}\",\n\t\"concurrentSessions\": \"false\"\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/auth/Windows/Logon",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"auth",
										"Windows",
										"Logon"
									]
								},
								"description": "This method authenticates a user to the Vault and returns a token that can be used in subsequent web services calls. In addition, this method enables you to set a new password."
							},
							"response": []
						},
						{
							"name": "Logoff",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/Auth/Logoff",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"Auth",
										"Logoff"
									]
								},
								"description": "This method logs off the user and removes the Vault session."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}",
												"disabled": true
											},
											{
												"value": "application/json",
												"key": "Content-Type",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": ""
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=3FC0264AE21891C9; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=000000028E20E4D1937817AB97347D6362F0C46DC68838CDEAD5CB4CB730327CAC57DB7300000000; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=ldap; path=/PasswordVault/; secure"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "Date",
											"value": "Sun, 11 Nov 2018 20:51:24 GMT"
										},
										{
											"key": "Content-Length",
											"value": "16"
										}
									],
									"cookie": [],
									"body": "{\n    \"LogoffUrl\": \"\"\n}"
								}
							]
						}
					],
					"description": "v10 and above"
				},
				{
					"name": "Shared Logon Authentication",
					"item": [
						{
							"name": "Logon",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"CyberArkLogonResult\", jsonData.CyberArkLogonResult);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/WebServices/auth/Shared/RestfulAuthenticationService.svc/Logon",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"WebServices",
										"auth",
										"Shared",
										"RestfulAuthenticationService.svc",
										"Logon"
									]
								},
								"description": "Shared authentication is based on a user credential file that is stored in the PVWA web server. During shared authentication, only the user defined in the credential file can log on to the PVWA, but multiple users can use the logon token.\n\nThis type of authentication **requires** the application using the REST services to manage the users as the Vault can't identify which specific user performs each action.\n\nMultiple concurrent connections can be created using the same token, without affecting each other.\n\nThe shared user is defined in a user credential file, whose location is specified in the WSCredentialFile parameter, in the appsettings section of the PVWAweb.config file:\n\n```\n<add key=\"WSCredentialFile\" value=\"C:\\CyberArk\\Password Vault Web Access\\CredFiles\\WSUser.ini\"/>\n```\n\n* Make sure that this user can access the PVWA interface.\n* Make sure the user only has the permissions in the Vault that they require.\n\nFor information about securing communication when using the SDK, refer to the following:\n\n* [Securing application-to-REST communication](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/Latest/en/Content/SDK/Securing%20Communication.htm)\n* [Configuring client authentication via certificates](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/Latest/en/Content/SDK/Configuring%20Client%20Authentication%20via%20Client%20Certificates.htm)\n\nThis method authenticates to the Vault with a shared webservices user and returns a token that will be used in subsequent web services calls.\n\nThis is supported for CyberArk authentication only, and not for third party authentication."
							},
							"response": []
						},
						{
							"name": "Logoff",
							"request": {
								"method": "POST",
								"header": [
									{
										"value": "application/json",
										"type": "text",
										"key": "Content-Type"
									},
									{
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"key": "Authorization"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/WebServices/auth/Shared/RestfulAuthenticationService.svc/Logoff",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"WebServices",
										"auth",
										"Shared",
										"RestfulAuthenticationService.svc",
										"Logoff"
									]
								},
								"description": "This method logs off the shared user and removes the Vault session."
							},
							"response": []
						}
					],
					"description": "Shared authentication is based on a user credential file that is stored in the PVWA web server. During shared authentication, only the user defined in the credential file can log on to the PVWA, but multiple users can use the logon token.\n\nThis type of authentication **requires** the application using the REST services to manage the users as the Vault can't identify which specific user performs each action.\n\nMultiple concurrent connections can be created using the same token, without affecting each other.\n\nThe shared user is defined in a user credential file, whose location is specified in the WSCredentialFile parameter, in the appsettings section of the PVWAweb.config file:\n  \t\n\n```\n<add key=\"WSCredentialFile\" value=\"C:\\CyberArk\\Password Vault Web Access\\CredFiles\\WSUser.ini\"/>\n```\n\n* Make sure that this user can access the PVWA interface.\n* Make sure the user only has the permissions in the Vault that they require."
				},
				{
					"name": "Authentication Methods Config",
					"item": [
						{
							"name": "OpenID Connect Identity Provider",
							"item": [
								{
									"name": "Get All OpenID Connect Identity Providers",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"description": "Session Authorization Token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/Configuration/OIDC/Providers",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"Configuration",
												"OIDC",
												"Providers"
											]
										},
										"description": "This method returns a list of all OIDC Identity Providers. Any user who is a member of the Vault admins group can run this web service."
									},
									"response": []
								},
								{
									"name": "Get Specific OpenID Connect Identity Provider",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"description": "Session Authorization Token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/Configuration/OIDC/Providers/{{authID}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"Configuration",
												"OIDC",
												"Providers",
												"{{authID}}"
											]
										},
										"description": "This method returns a specific OIDC Identity Provider. Any user who is a member of the Vault admins group can run this web service."
									},
									"response": []
								},
								{
									"name": "Add OpenID Connect Identity Provider",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"description": "Session Authorization Token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"opserver\",\n    \"authenticationFlow\": \"Code\",\n    \"discoveryEndpointUrl\": \"https://Domain.com/OPServer/.well-known/openid-configuration\",\n    \"clientId\": \"pvwa\",\n    \"clientSecret\": \"secret\",\n    \"clientSecretMethod\": \"basic\"\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/Configuration/OIDC/Providers",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"Configuration",
												"OIDC",
												"Providers"
											]
										},
										"description": "This method creates an OpenID Connect (OIDC) Identity Provider in the Vault. Any user who is a member of the Vault admins group can run this web service.\n\n**NOTE:** This API must be used with the Add authentication method API in order to have a complete authentication configuration.\n\nWhen you add an OIDC Identity Provider, you must also add the provider to the list of authentication methods using the same ID, and add the provider's base URL to the access restriction list by using the following APIs:\n\n* Add authentication method\n* Add allowed referrer"
									},
									"response": []
								},
								{
									"name": "Update OpenID Connect Identity Provider",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"description": "Session Authorization Token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"authenticationFlow\": \"Code\",\n    \"discoveryEndpointUrl\": \"https://10.10.22.121/OPServer/.well-known/openid-configuration\",\n    \"clientId\": \"pvwa\",\n    \"clientSecretMethod\": \"basic\",\n    \"userNameClaim\": \"given_name\"\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/Configuration/OIDC/Providers/{{authID}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"Configuration",
												"OIDC",
												"Providers",
												"{{authID}}"
											]
										},
										"description": "This method updates an existing OIDC Identity Provider. Any user who is a member of the Vault admins group can run this web service."
									},
									"response": []
								},
								{
									"name": "Delete OpenID Connect Identity Provider",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"description": "Session Authorization Token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/Configuration/OIDC/Providers/{{authID}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"Configuration",
												"OIDC",
												"Providers",
												"{{authID}}"
											]
										},
										"description": "This method deletes a specific OIDC Identity Provider. Any user who is a member of the Vault admins group can run this web service.\n\n**NOTE:** This API must be used with the Delete authentication method API in order to have a complete authentication configuration.\n\nFor example, when you delete an OIDC Identity provider, you must also delete the provider from the list of authentication methods using the same ID."
									},
									"response": []
								}
							],
							"description": "This section includes REST APIs for configuring and managing OpenID Connect (OIDC) Identity Providers.\n\nThe APIs are used to configure a provider in PVWA.\n\nThese APIs must be used with the Authentication methods APIs in order to have a complete authentication configuration.\n\nFor example, when you add or delete a provider, you must also add the provider to the list of authentication methods, or delete the provider from the list, using the same ID."
						},
						{
							"name": "Get Authentication Methods",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Configuration/AuthenticationMethods",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Configuration",
										"AuthenticationMethods"
									]
								},
								"description": "This method returns a list of all existing authentication methods. Any user who is a member of the Vault admins group can run this web service."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"description": "Session Authorization Token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/Configuration/AuthenticationMethods",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"Configuration",
												"AuthenticationMethods"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store, no-cache, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache,no-cache"
										},
										{
											"key": "Content-Length",
											"value": "1674"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=7E8A61F4E4D93A92; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=000000026D4CE685405C9F6384A1470D20CF85E65CD2B6F87C6293EC75EFE7FEB204632700000000; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=ldap; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; SameSite=None; secure; HttpOnly"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=3159600;includeSubdomains;"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Sep 2020 00:43:30 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"Methods\": [\n        {\n            \"id\": \"windows\",\n            \"displayName\": \"\",\n            \"enabled\": false,\n            \"mobileEnabled\": false,\n            \"logoffUrl\": \"\",\n            \"secondFactorAuth\": null,\n            \"signInLabel\": \"\",\n            \"usernameFieldLabel\": \"\",\n            \"passwordFieldLabel\": \"\"\n        },\n        {\n            \"id\": \"pki\",\n            \"displayName\": \"\",\n            \"enabled\": false,\n            \"mobileEnabled\": false,\n            \"logoffUrl\": \"\",\n            \"secondFactorAuth\": null,\n            \"signInLabel\": \"\",\n            \"usernameFieldLabel\": \"\",\n            \"passwordFieldLabel\": \"\"\n        },\n        {\n            \"id\": \"cyberark\",\n            \"displayName\": \"\",\n            \"enabled\": true,\n            \"mobileEnabled\": true,\n            \"logoffUrl\": \"\",\n            \"secondFactorAuth\": \"cyberark\",\n            \"signInLabel\": \"\",\n            \"usernameFieldLabel\": \"\",\n            \"passwordFieldLabel\": \"\"\n        },\n        {\n            \"id\": \"oraclesso\",\n            \"displayName\": \"\",\n            \"enabled\": false,\n            \"mobileEnabled\": false,\n            \"logoffUrl\": \"http://[ssoserver]:7777/sso/logout?p_done_url=http://[iisserver]/PasswordVault\",\n            \"secondFactorAuth\": null,\n            \"signInLabel\": \"\",\n            \"usernameFieldLabel\": \"\",\n            \"passwordFieldLabel\": \"\"\n        },\n        {\n            \"id\": \"rsa\",\n            \"displayName\": \"\",\n            \"enabled\": false,\n            \"mobileEnabled\": false,\n            \"logoffUrl\": \"/WebID/IISWebAgentIF.dll?logoff?referrer=/passwordvault\",\n            \"secondFactorAuth\": null,\n            \"signInLabel\": \"\",\n            \"usernameFieldLabel\": \"\",\n            \"passwordFieldLabel\": \"\"\n        },\n        {\n            \"id\": \"radius\",\n            \"displayName\": \"Duo (RADIUS)\",\n            \"enabled\": true,\n            \"mobileEnabled\": true,\n            \"logoffUrl\": \"\",\n            \"secondFactorAuth\": \"radius\",\n            \"signInLabel\": \"\",\n            \"usernameFieldLabel\": \"\",\n            \"passwordFieldLabel\": \"\"\n        },\n        {\n            \"id\": \"ldap\",\n            \"displayName\": \"\",\n            \"enabled\": true,\n            \"mobileEnabled\": true,\n            \"logoffUrl\": \"\",\n            \"secondFactorAuth\": null,\n            \"signInLabel\": \"\",\n            \"usernameFieldLabel\": \"\",\n            \"passwordFieldLabel\": \"\"\n        },\n        {\n            \"id\": \"saml\",\n            \"displayName\": \"IDaptive SAML\",\n            \"enabled\": true,\n            \"mobileEnabled\": false,\n            \"logoffUrl\": \"https://tentantid.my.idaptive.app/applogout/appkey/acredacted/customerid/redacted\",\n            \"secondFactorAuth\": null,\n            \"signInLabel\": \"\",\n            \"usernameFieldLabel\": \"\",\n            \"passwordFieldLabel\": \"\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Get Specific Authentication Method",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Configuration/AuthenticationMethods/{{authID}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Configuration",
										"AuthenticationMethods",
										"{{authID}}"
									]
								},
								"description": "This method returns a specific authentication method. Any user who is a member of the Vault Admins group can run this web service."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"description": "Session Authorization Token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/Configuration/AuthenticationMethods/{{authID}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"Configuration",
												"AuthenticationMethods",
												"{{authID}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store, no-cache, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache,no-cache"
										},
										{
											"key": "Content-Length",
											"value": "288"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=7E8A61F4E4D93A92; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=000000026D4CE685405C9F6384A1470D20CF85E65CD2B6F87C6293EC75EFE7FEB204632700000000; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=ldap; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; SameSite=None; secure; HttpOnly"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=3159600;includeSubdomains;"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Sep 2020 00:45:20 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"saml\",\n    \"displayName\": \"IDaptive SAML\",\n    \"enabled\": true,\n    \"mobileEnabled\": false,\n    \"logoffUrl\": \"https://tenantid.my.idaptive.app/applogout/appkey/acredacted/customerid/redacted\",\n    \"secondFactorAuth\": null,\n    \"signInLabel\": \"\",\n    \"usernameFieldLabel\": \"\",\n    \"passwordFieldLabel\": \"\"\n}"
								}
							]
						},
						{
							"name": "Add Authentication Method",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"saml\",\n    \"displayName\": \"IDaptive SAML\",\n    \"enabled\": true,\n    \"mobileEnabled\": false,\n    \"logoffUrl\": \"https://domain.com/idp/logoff\",\n    \"secondFactorAuth\": null,\n    \"signInLabel\": \"\",\n    \"usernameFieldLabel\": \"\",\n    \"passwordFieldLabel\": \"\"\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Configuration/AuthenticationMethods",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Configuration",
										"AuthenticationMethods"
									]
								},
								"description": "This method adds a new authentication method. Any user who is a member of the Vault admins group can run this web service."
							},
							"response": []
						},
						{
							"name": "Update Authentication Method",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"displayName\": \"\",\n    \"enabled\": true,\n    \"mobileEnabled\": false,\n    \"logoffUrl\": \"https://domain.com/idp/logoff\",\n    \"secondFactorAuth\": null,\n    \"signInLabel\": \"\",\n    \"usernameFieldLabel\": \"\",\n    \"passwordFieldLabel\": \"\"\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Configuration/AuthenticationMethods/{{authID}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Configuration",
										"AuthenticationMethods",
										"{{authID}}"
									]
								},
								"description": "This method updates the properties for a specific authentication method. Any user who is a member of the Vault admins group can run this web service."
							},
							"response": []
						},
						{
							"name": "Delete Authentication Method",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Configuration/AuthenticationMethods/{{authID}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Configuration",
										"AuthenticationMethods",
										"{{authID}}"
									]
								},
								"description": "This method deletes a specific authentication method. Any user who is a member of the Vault admins group can run this web service."
							},
							"response": []
						}
					],
					"description": "This section includes REST APIs for configuring and managing authentication methods."
				},
				{
					"name": "PTA Authentication",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{apiUsername}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{apiPassword}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{PTABaseURL}}/api/getauthtoken",
							"host": [
								"{{PTABaseURL}}"
							],
							"path": [
								"api",
								"getauthtoken"
							]
						},
						"description": "This method enables a user to get a token upon Web application authentication. You can use this method to monitor the PTA system health, as shown in [Get PTA replication status](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/Latest/en/Content/WebServices/PTA_System_Health.htm)."
					},
					"response": []
				}
			],
			"description": "This section includes REST APIs for logging on or off from the Vault, using different authentication methods.",
			"event": [
				{
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					},
					"disabled": false,
					"listen": "prerequest"
				},
				{
					"disabled": false,
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					},
					"listen": "test"
				}
			]
		},
		{
			"name": "Platforms",
			"item": [
				{
					"name": "Target Platforms",
					"item": [
						{
							"name": "Get Target Platforms",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/targets",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"targets"
									]
								},
								"description": "This method allows users to retrieve basic information of all existing target platforms.\n\nYou can use filters to retrieve a subset of the target platforms or search for a specific target platform. For details, see [URL parameters](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/11.6/en/Content/SDK/rest-api-get-target-platforms.htm#URL%C2%A0para)."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"description": "Session Authorization Token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/passwordvault/api/platforms/targets",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"passwordvault",
												"api",
												"platforms",
												"targets"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store, no-cache, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache,no-cache"
										},
										{
											"key": "Content-Length",
											"value": "33875"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; SameSite=None; secure; HttpOnly"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=3159600;includeSubdomains;"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Date",
											"value": "Fri, 25 Sep 2020 16:07:11 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"Platforms\": [\n        {\n            \"Active\": true,\n            \"SystemType\": \"*NIX\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PSM\"\n            },\n            \"ID\": 2,\n            \"PlatformID\": \"UnixSSH\",\n            \"Name\": \"Unix via SSH\"\n        },\n        {\n            \"Active\": true,\n            \"SystemType\": \"*NIX\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 23,\n            \"PlatformID\": \"UnixSSHKeys\",\n            \"Name\": \"Unix via SSH Keys\"\n        },\n        {\n            \"Active\": true,\n            \"SystemType\": \"Application\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": false\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": false\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 35,\n            \"PlatformID\": \"ConjurHost\",\n            \"Name\": \"Conjur Host\"\n        },\n        {\n            \"Active\": true,\n            \"SystemType\": \"Application\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": true,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": false\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 48,\n            \"PlatformID\": \"ConjurUser\",\n            \"Name\": \"Conjur User\"\n        },\n        {\n            \"Active\": true,\n            \"SystemType\": \"Application\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": true,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": false\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 32,\n            \"PlatformID\": \"CyberArkPTA\",\n            \"Name\": \"CyberArk PTA\"\n        },\n        {\n            \"Active\": true,\n            \"SystemType\": \"Application\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": false\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 9,\n            \"PlatformID\": \"CyberArk\",\n            \"Name\": \"CyberArk Vault\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Application\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": true,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 28,\n            \"PlatformID\": \"RSAManagement\",\n            \"Name\": \"RSA Authentication Manager\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Application\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 5,\n            \"PlatformID\": \"SAP\",\n            \"Name\": \"SAP\"\n        },\n        {\n            \"Active\": true,\n            \"SystemType\": \"Cloud Service\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": false\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 25,\n            \"PlatformID\": \"AWS\",\n            \"Name\": \"Amazon Web Services - AWS\"\n        },\n        {\n            \"Active\": true,\n            \"SystemType\": \"Cloud Service\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": false\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 26,\n            \"PlatformID\": \"AWSAccessKeys\",\n            \"Name\": \"Amazon Web Services - AWS - Access Keys\"\n        },\n        {\n            \"Active\": true,\n            \"SystemType\": \"Cloud Service\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": true,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 30,\n            \"PlatformID\": \"AzurePasswordManagement\",\n            \"Name\": \"Microsoft Azure Password Management\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Cloud Service\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": true,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 37,\n            \"PlatformID\": \"GCPServiceAccount\",\n            \"Name\": \"Google Cloud Platfrom - Service Account\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Cloud Service\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": true,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 29,\n            \"PlatformID\": \"AzureApplicationKeys\",\n            \"Name\": \"Microsoft Azure Application Keys Management\"\n        },\n        {\n            \"Active\": true,\n            \"SystemType\": \"Database\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 17,\n            \"PlatformID\": \"MySQL\",\n            \"Name\": \"MySQL Server\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Database\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 15,\n            \"PlatformID\": \"DB2UnixSSH\",\n            \"Name\": \"DB2 on Unix via SSH\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Database\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 16,\n            \"PlatformID\": \"InformixUnixSSH\",\n            \"Name\": \"Informix on Unix via SSH\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Database\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 3,\n            \"PlatformID\": \"MSSql\",\n            \"Name\": \"Microsoft SQL Server\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Database\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 8,\n            \"PlatformID\": \"Oracle\",\n            \"Name\": \"Oracle Database\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Database\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": true,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 31,\n            \"PlatformID\": \"SAPHANA\",\n            \"Name\": \"SAP HANA\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Database\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 4,\n            \"PlatformID\": \"Sybase\",\n            \"Name\": \"Sybase ASE\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Directory\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 21,\n            \"PlatformID\": \"Novell-eDirectory\",\n            \"Name\": \"Novell eDirectory server\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Directory\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 20,\n            \"PlatformID\": \"SunOneDirectorySSL\",\n            \"Name\": \"SunOne directory via SSL\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Network Device\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 19,\n            \"PlatformID\": \"CiscoSSH\",\n            \"Name\": \"Cisco router via SSH\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Operating System\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 12,\n            \"PlatformID\": \"as400\",\n            \"Name\": \"AS400\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Operating System\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": false\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": false\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 13,\n            \"PlatformID\": \"OS390SSH\",\n            \"Name\": \"OS390 via SSH\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Operating System\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 14,\n            \"PlatformID\": \"VMWareESX-API\",\n            \"Name\": \"VMWare ESX Account API\"\n        },\n        {\n            \"Active\": true,\n            \"SystemType\": \"PSM Secure Connect\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": false\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": false\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 22,\n            \"PlatformID\": \"PSMSecureConnect\",\n            \"Name\": \"PSM Secure Connect\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Security Appliance\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": false\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 18,\n            \"PlatformID\": \"Firewall1\",\n            \"Name\": \"Check Point FireWall-1\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Security Appliance\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 24,\n            \"PlatformID\": \"GAiASSH\",\n            \"Name\": \"Check Point GAiA via SSH\"\n        },\n        {\n            \"Active\": true,\n            \"SystemType\": \"Website\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": true,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 42,\n            \"PlatformID\": \"DockerRegistry\",\n            \"Name\": \"Docker Registry\"\n        },\n        {\n            \"Active\": true,\n            \"SystemType\": \"Website\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": true,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 38,\n            \"PlatformID\": \"GenericWebApp\",\n            \"Name\": \"Generic Web App\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Website\",\n            \"AllowedSafes\": \"BZ_I_*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": false\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": false\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 36,\n            \"PlatformID\": \"BusinessWebsite\",\n            \"Name\": \"Business Website\"\n        },\n        {\n            \"Active\": true,\n            \"SystemType\": \"Windows\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": true,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": true,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": true,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": true,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 10,\n            \"PlatformID\": \"WinDesktopLocal\",\n            \"Name\": \"Windows Desktop Local Accounts\"\n        },\n        {\n            \"Active\": true,\n            \"SystemType\": \"Windows\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": true,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": true,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": true,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": true,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PSM\"\n            },\n            \"ID\": 7,\n            \"PlatformID\": \"WinDomain\",\n            \"Name\": \"Windows Domain Account\"\n        },\n        {\n            \"Active\": true,\n            \"SystemType\": \"Windows\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": true,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": true,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": true,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": true,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 6,\n            \"PlatformID\": \"WinServerLocal\",\n            \"Name\": \"Windows Server Local Accounts\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Windows\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 11,\n            \"PlatformID\": \"WinLocalWMI\",\n            \"Name\": \"Windows Local Accounts WMI\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Windows\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": false\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": true,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": false\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 27,\n            \"PlatformID\": \"WinLooselyDevice\",\n            \"Name\": \"Windows Loosely Device\"\n        }\n    ],\n    \"Total\": 37\n}"
								}
							]
						},
						{
							"name": "Activate Target Platform",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/targets/{{PlatformName}}/activate",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"targets",
										"{{PlatformName}}",
										"activate"
									]
								},
								"description": "This method allows Vault Admins to activate a target platform."
							},
							"response": []
						},
						{
							"name": "Deactivate Target Platform",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/targets/{{PlatformName}}/deactivate",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"targets",
										"{{PlatformName}}",
										"deactivate"
									]
								},
								"description": "This method allows Vault Admins to deactivate a target platform."
							},
							"response": []
						},
						{
							"name": "Duplicate Target Platforms",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Name\": \"test Platform\",\n    \"Description\": \"\"\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/targets/{{PlatformName}}/duplicate",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"targets",
										"{{PlatformName}}",
										"duplicate"
									]
								},
								"description": "This method allows Vault Admins to duplicate target platforms."
							},
							"response": []
						},
						{
							"name": "Delete Target Platform",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/targets/{{PlatformName}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"targets",
										"{{PlatformName}}"
									]
								},
								"description": "This method allows Vault Admins to delete a target platform."
							},
							"response": []
						}
					],
					"description": "This section includes REST APIs for managing target platforms.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Dependent Platforms",
					"item": [
						{
							"name": "Get Dependent Platforms",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/dependents?search",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"dependents"
									],
									"query": [
										{
											"key": "search",
											"value": "",
											"description": "Platform Name"
										}
									]
								},
								"description": "This method allows Vault Admins to retrieve basic information about all existing dependent platforms."
							},
							"response": []
						},
						{
							"name": "Duplicate Dependent Platforms",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Name\": \"test Platform\",\n    \"Description\": \"\"\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/dependent/{{PlatformName}}/duplicate",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"dependent",
										"{{PlatformName}}",
										"duplicate"
									]
								},
								"description": "This method allows Vault Admins to duplicate dependent platforms."
							},
							"response": []
						},
						{
							"name": "Delete Dependent Platform",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/dependents/{{PlatformName}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"dependents",
										"{{PlatformName}}"
									]
								},
								"description": "This method allows Vault Admins to delete a dependent platform."
							},
							"response": []
						}
					],
					"description": "This section includes REST APIs for managing dependent platforms.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Group Platforms",
					"item": [
						{
							"name": "Get Group Platforms",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/groups?search=SSH",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"groups"
									],
									"query": [
										{
											"key": "search",
											"value": "SSH",
											"description": "Platform Name"
										}
									]
								},
								"description": "This method allows Vault Admins to retrieve basic information about all existing group platforms."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"description": "Session Authorization Token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/passwordvault/api/platforms/groups?search=SSH",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"passwordvault",
												"api",
												"platforms",
												"groups"
											],
											"query": [
												{
													"key": "search",
													"value": "SSH",
													"description": "Platform Name"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store, no-cache, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache,no-cache"
										},
										{
											"key": "Content-Length",
											"value": "124"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; SameSite=None; secure; HttpOnly"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=3159600;includeSubdomains;"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Date",
											"value": "Wed, 30 Sep 2020 13:09:44 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"Platforms\": [\n        {\n            \"Active\": false,\n            \"ID\": 34,\n            \"PlatformID\": \"SampleSSHKeyGroup\",\n            \"Name\": \"[Sample SSH Key Group Platform]\"\n        }\n    ],\n    \"Total\": 1\n}"
								}
							]
						},
						{
							"name": "Activate Group Platform",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/groups/{{PlatformName}}/activate",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"groups",
										"{{PlatformName}}",
										"activate"
									]
								},
								"description": "This method allows Vault Admins to activate a group platform."
							},
							"response": []
						},
						{
							"name": "Deactivate Group Platform",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/groups/{{PlatformName}}/deactivate",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"groups",
										"{{PlatformName}}",
										"deactivate"
									]
								},
								"description": "This method allows Vault Admins to deactivate a group platform."
							},
							"response": []
						},
						{
							"name": "Duplicate Group Platforms",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Name\": \"test Platform\",\n    \"Description\": \"\"\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/groups/{{PlatformName}}/duplicate",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"groups",
										"{{PlatformName}}",
										"duplicate"
									]
								},
								"description": "This method allows Vault Admins to duplicate group platforms."
							},
							"response": []
						},
						{
							"name": "Delete Group Platform",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/groups/{{PlatformName}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"groups",
										"{{PlatformName}}"
									]
								},
								"description": "This method allows Vault Admins to delete a group platform."
							},
							"response": []
						}
					],
					"description": "This section includes REST APIs for managing group platforms.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Rotational Group Platforms",
					"item": [
						{
							"name": "Get Rotational Group Platforms",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/rotationalGroups?search=MySQL",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"rotationalGroups"
									],
									"query": [
										{
											"key": "search",
											"value": "MySQL",
											"description": "Platform Name"
										}
									]
								},
								"description": "This method allows Vault Admins to retrieve basic information about all existing rotational group platforms."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"description": "Session Authorization Token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/passwordvault/api/platforms/rotationalGroups?search=MySQL",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"passwordvault",
												"api",
												"platforms",
												"rotationalGroups"
											],
											"query": [
												{
													"key": "search",
													"value": "MySQL",
													"description": "Platform Name"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store, no-cache, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache,no-cache"
										},
										{
											"key": "Content-Length",
											"value": "145"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; SameSite=None; secure; HttpOnly"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=3159600;includeSubdomains;"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Date",
											"value": "Wed, 30 Sep 2020 13:15:00 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"Platforms\": [\n        {\n            \"Active\": true,\n            \"GracePeriod\": 540,\n            \"ID\": 40,\n            \"PlatformID\": \"MySQLServer-DualAccounts\",\n            \"Name\": \"MySQL Server - Dual Accounts\"\n        }\n    ],\n    \"Total\": 1\n}"
								}
							]
						},
						{
							"name": "Activate Rotational Group Platform",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/rotationalGroups/{{PlatformName}}/activate",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"rotationalGroups",
										"{{PlatformName}}",
										"activate"
									]
								},
								"description": "This method allows Vault Admins to activate a rotational group platform."
							},
							"response": []
						},
						{
							"name": "Deactivate Rotational Group Platform",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/rotationalGroups/{{PlatformName}}/deactivate",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"rotationalGroups",
										"{{PlatformName}}",
										"deactivate"
									]
								},
								"description": "This method allows Vault Admins to deactivate a rotational group platform."
							},
							"response": []
						},
						{
							"name": "Duplicate Rotational Group Platforms",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Name\": \"test Platform\",\n    \"Description\": \"\"\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/rotationalGroups/{{PlatformName}}/duplicate",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"rotationalGroups",
										"{{PlatformName}}",
										"duplicate"
									]
								},
								"description": "This method allows Vault Admins to duplicate rotational group platforms."
							},
							"response": []
						},
						{
							"name": "Delete Rotational Group Platform",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/rotationalGroups/{{PlatformName}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"rotationalGroups",
										"{{PlatformName}}"
									]
								},
								"description": "This method allows Vault Admins to delete a rotational group platform."
							},
							"response": []
						}
					],
					"description": "This section includes REST APIs for managing rotational group platforms.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Get Platform Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"type": "text",
								"key": "Authorization",
								"value": "{{CyberArkLogonResult}}"
							},
							{
								"type": "text",
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/API/Platforms/{{PlatformName}}",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"API",
								"Platforms",
								"{{PlatformName}}"
							]
						},
						"description": "This method retrieves details of a specified platform from the Vault."
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"disabled": true
									},
									{
										"type": "text",
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "Set-Cookie",
									"value": "CA22222=809AD28AAFCE9858; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA11111=00000002C39399D78441B5DC5782206114015D5E0C0F450850D1C063CA889719B6A3C3E500000000; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA55555=ldap; path=/PasswordVault/; secure"
								},
								{
									"key": "Set-Cookie",
									"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=EmulateIE8"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-FRAME-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Warning"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains"
								},
								{
									"key": "Date",
									"value": "Sun, 11 Nov 2018 21:08:20 GMT"
								},
								{
									"key": "Content-Length",
									"value": "1419"
								}
							],
							"cookie": [],
							"body": "{\n    \"PlatformID\": \"WinDomain\",\n    \"Details\": {\n        \"PolicyID\": \"WinDomain\",\n        \"PolicyName\": \"Windows Domain Account\",\n        \"SearchForUsages\": \"Yes\",\n        \"PolicyType\": \"regular\",\n        \"ImmediateInterval\": \"5\",\n        \"Interval\": \"1440\",\n        \"MaxConcurrentConnections\": \"3\",\n        \"AllowedSafes\": \".*\",\n        \"MinValidityPeriod\": \"60\",\n        \"ResetOveridesMinValidity\": \"yes\",\n        \"ResetOveridesTimeFrame\": \"yes\",\n        \"Timeout\": \"30\",\n        \"UnlockIfFail\": \"no\",\n        \"UnrecoverableErrors\": \"2103,2105,2121\",\n        \"MaximumRetries\": \"5\",\n        \"MinDelayBetweenRetries\": \"90\",\n        \"DllName\": \"PMWindows.dll\",\n        \"XMLFile\": \"yes\",\n        \"AllowManualChange\": \"Yes\",\n        \"PerformPeriodicChange\": \"No\",\n        \"HeadStartInterval\": \"5\",\n        \"FromHour\": \"-1\",\n        \"ToHour\": \"-1\",\n        \"ChangeNotificationPeriod\": \"-1\",\n        \"DaysNotifyPriorExpiration\": \"7\",\n        \"VFAllowManualVerification\": \"Yes\",\n        \"VFPerformPeriodicVerification\": \"No\",\n        \"VFFromHour\": \"-1\",\n        \"VFToHour\": \"-1\",\n        \"RCAllowManualReconciliation\": \"Yes\",\n        \"RCAutomaticReconcileWhenUnsynched\": \"No\",\n        \"RCReconcileReasons\": \"2114,2115,2106,2101\",\n        \"RCFromHour\": \"-1\",\n        \"RCToHour\": \"-1\",\n        \"NFNotifyPriorExpiration\": \"No\",\n        \"NFPriorExpirationRecipients\": \"\",\n        \"NFNotifyOnPasswordDisable\": \"Yes\",\n        \"NFOnPasswordDisableRecipients\": \"\",\n        \"NFNotifyOnVerificationErrors\": \"Yes\",\n        \"NFOnVerificationErrorsRecipients\": \"\",\n        \"NFNotifyOnPasswordUsed\": \"No\",\n        \"NFOnPasswordUsedRecipients\": \"\",\n        \"PasswordLength\": \"8\",\n        \"MinUpperCase\": \"2\",\n        \"MinLowerCase\": \"2\",\n        \"MinDigit\": \"1\",\n        \"MinSpecial\": \"1\",\n        \"OneTimePassword\": \"False\",\n        \"ExpirationPeriod\": \"90\",\n        \"VFVerificationPeriod\": \"7\",\n        \"PasswordLevelRequestTimeframe\": \"False\"\n    },\n    \"Active\": true\n}"
						}
					]
				},
				{
					"name": "Get Platforms",
					"request": {
						"method": "GET",
						"header": [
							{
								"value": "{{CyberArkLogonResult}}",
								"key": "Authorization",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/API/Platforms?Active=true&PlatformType=Regular&PlatformName=string",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"API",
								"Platforms"
							],
							"query": [
								{
									"key": "Active",
									"value": "true",
									"description": "Filter according to whether the platform is active or not. Valid values: true or false"
								},
								{
									"key": "PlatformType",
									"value": "Regular",
									"description": "Filter according to the platform type. Valid values: Group or Regular"
								},
								{
									"key": "PlatformName",
									"value": "string",
									"description": "Searching according to the platform name."
								}
							]
						},
						"description": "This method returns all existing account platforms from the Vault.\n\nYou can use filters to retrieve a subset of the platforms or search for a specific platform. For details, see URL parameters.\n\n**Note:** The [Get Platform Details](#585553e8-dea9-4617-9313-297aac8d7273) API, used to retrieve details for a specific platform, returns a different set of parameters."
					},
					"response": []
				},
				{
					"name": "Export Platform",
					"request": {
						"method": "POST",
						"header": [
							{
								"value": "{{CyberArkLogonResult}}",
								"type": "text",
								"key": "Authorization"
							},
							{
								"value": "application/json",
								"key": "Content-Type",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/API/Platforms/{{PlatformName}}/Export",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"API",
								"Platforms",
								"{{PlatformName}}",
								"Export"
							]
						},
						"description": "If testing this in the Postman application, click the \"Download\" button after receiving the zip file stream to download the ZIP file locally."
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "raw",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store, no-cache, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache,no-cache"
								},
								{
									"key": "Content-Length",
									"value": "2498"
								},
								{
									"key": "Content-Type",
									"value": "application/octet-stream"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "Set-Cookie",
									"value": "CA22222=809AD28AAFCE9858; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA11111=00000002C39399D78441B5DC5782206114015D5E0C0F450850D1C063CA889719B6A3C3E500000000; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA55555=ldap; path=/PasswordVault/; secure"
								},
								{
									"key": "Set-Cookie",
									"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Content-Disposition",
									"value": "attachment; filename=WinDomain.zip"
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=EmulateIE8"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-FRAME-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Warning"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains"
								},
								{
									"key": "Date",
									"value": "Sun, 11 Nov 2018 21:10:06 GMT"
								}
							],
							"cookie": [],
							"body": "PK\u0003\u0004\u0014\u0000\u0000\u0000\b\u0000C�kMZ�\u0017Gf\u0002\u0000\u0000�\n\u0000\u0000\u0014\u0000$\u0000Policy-WinDomain.xml\n\u0000 \u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0018\u0000����\u0002z�\u0001����\u0002z�\u0001����\u0002z�\u0001�V�n�@\u0010�#�\u000e���\u0006q��I\u0015\u0012�\"5�e��ykO�U�\u001d��N�g��#�\n���8��\u0007�\u0010��d�|3�ͯ���\u001f��%K�\u0015(-Pv�\u000f�{�\u0001\u0019c\"���\u0016f~�ɽ��\u0001�D\fΘg�q'9(n\b�D�6��]\u0016`*b\u0001z�W:��`���\u0005Ld/I:�\u0018ݵp\u0006J�ˆp8��\u000fB\u000e0�B�N�r3G�}�\u001aΨ\u0002�\u0006cL׀\u0004���zZ��Wu߾qv\u001f#SJ�Tl�r҄��\u0010\n�#�ަ�T��+�\u0014ӿ\b�נ$����?\u0011�MrC���E�w��]yBИ������\u0019\u000e�� \u0003TƖ��/�O\u0014��\t��$�Z?�JZ]����zq����[6C��\u000bͪ�J�6�\u0018e,R8e��؞�瘱{�\u0017��YK7!i�\"PզX�5�Q�\u0004ɔ��\u0005�p\u0018��<@L/\u0000CX\bmTy\u0001��,H\u000b�T��J�e�m(�-e`S\u0011/��\b�Ap�H\u0003j'\u001c�9ֻ>��H��Z5.�GP��?�Q���- �h�i�F\\R�\f�9��QJ��\u0001��r�\u0004i5ɂq�t�ht\u0013\u000e\u0002�=�\u0013:�J$P-G�\u0015Յ2:�[S�j�K\u0012�B�����OB�(�Ǩ_R�=����5�Ej�\u0007x���K�sE��L�\u0003/\u0007<�9��������r�%h'GYz\r\u001f��;��z|��z�|Ks���������TC�{t�R0����b��J^]I+���\u001e!��hw��~���k��\u000bPK\u0003\u0004\u0014\u0000\u0000\u0000\b\u0000C�kM\u0019g�2�\u0005\u0000\u0000�\u0015\u0000\u0000\u0014\u0000$\u0000Policy-WinDomain.ini\n\u0000 \u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0018\u0000����\u0002z�\u0001����\u0002z�\u0001����\u0002z�\u0001�X�o�6\u0010~v��\u000f|l\u0003ǵ���\u001a�!�#�@�\u0018v�n(��Hg��D�$����wGQ��3ֺ\u0001\u0011\f��������;���̄a����4K�e*\u0011ќe\\�\u0014,h6\u0011��Di�rɧBN�W!c�hXO�\\HƣH�Ҷ\u000e\u000f���\u0016I<I�#�fZe��\u0000\\B\u0003��#\u0017\u001ab�$.ạ����/��avƭ�J�E!��7t����_`����\u0000��.<_�#�\u0002I�\u001a�\u0003�\u0006�t-$[�\r�(�$*��E\u001ck0f��&�أ������z��[2u�d5\u001f�vO�|\u0002G[L11��GJF\"\u0011�\n��r��E'��\u0001Z˶B�Ġ��\u0013[�����֎X�Kv\u000f�d\u0010�� E��lX\tt�\u0013s�I�\"�\r�\r����LD3Z)Q�K�{��r\u000b\u001e\u001e�L\u0004w5ί���Uz^��N��\f�(2��`\f\\G�P�[ç`�?��ػ|�ݑ#\u000f<��|bs0��*���3\b4L���UW�T�\\\u0013�\u000eWk��Vyvx�OS�\u0011\f�K�\u001f\n\u0007�W,�%K��-\u0018�.�:gg�M��,~ş��v�5H��d\u0001�\tN\u000f\u000f.��\u0010S���u�(�\u001b\r̄bC��QnS`Ԅ99\f�E\u0007d\u0011����.\u0014��4E37\u0018lÆe�15L\\\ty�\u0013\u0011\u000b;\u001f�\u0016*\u000e>��n��9��\"&�\u0004��\b\f��\u0007ԋ�T,\u0005s\u0002i���H!$��w��r\u001b�n\u0004�\\vL9\u001d������ޟ�\\$\u0001�ɭ$.�m~����J����>m��=�N:��a�O�1;5�\\K\u0016)t\u0006�A��1a�E;B\u0018�C~\u0004V\u000b\u001fa���\u000e�7\u001a\u000e�\u001e���o`\u001f\u0001d����&�ꆲ�SH\u00048u$���K\u0012G���'e+N�Ã߯���x\b��8o�b�T�q9\u0005��5�\u001cY���<)\f�\u0015���\u00024�U$������O�3�xl��[*D\u0019И�1����\u000f�J?�\\\u0007ǝ-�nZ�}|rJպB\"d�z����P\f��2��.\u0007\r*:\u000bM� �T�d�e�:��'�-�7H\tXP�\u0011��'6�e�])���XZ�B��fy��Z4�ta�/@\u001f(��*ri���q\u0007�G�\u0010����{�\npaSp�9\u0010\u00159��)&^\u0015�\n��`<�\u0012o���a�{�b����h��\u0014;�\u0016�(�\u0005n�\\Ǣ�[�b�r ���M$\r��\u001c�\u000f�c�P\t�^\u0005\u001f\u001b�ȷ�\u0005K��%h�CY\u0019��Qt\u0011-\u0015#\u0017P��\u0016Y�@ib\u0019:^�\u0017>��7��\u000f<�s]�P���%�\u001d\u001aXX�Iѻ�BҪ�\nUw��.\\a钉��;�_�ھ��\u000b_&��\\�\u000b������^�WFq\u001fu+q_6U-�;b�p\u0000�hH�N�\u000f�n�p��;H\u0010�:�\u0003\u0014��H��7�U��(���V��x�\u0005\\�����bP߾\u0000B�[E�>Z,�u\u0006�V�\u0002\u0007���\u000e�G݅�\b��\t���9�\u0001�CSP�\u0003�:K�֘�F�=����\u0019u��u5\u00188��z\u0006V�\"�l-6�:�� �ܠ\u0006��#-\u0006��<f��\u0004�EB��ڷ�\u0016���\u0004x�Kʃ����@�b���ɔ\u001aU��\b�Ox�X:�������9\u0011�\\\u0017����%����[�Y{Ӯ6G͈O��?ab1\b~h7Vg�2\u0012�r�Ǒ�0t��b�;\u0018k*�*\u001cխU{�?U��von]���״�2\f8-�/RhY�����ɲ2>�\u0011k���_@N�,��\u001d�o34��\u0006�\u0013��E=.=��Tؠ㾏i���JŕP�{\u0011� ���9Vys9���;̯��\u0019J��\u0001�����\u0007�oN���8t�\u0003PK\u0001\u0002-\u0000\u0014\u0000\u0000\u0000\b\u0000C�kMZ�\u0017Gf\u0002\u0000\u0000�\n\u0000\u0000\u0014\u0000$\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Policy-WinDomain.xml\n\u0000 \u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0018\u0000����\u0002z�\u0001����\u0002z�\u0001����\u0002z�\u0001PK\u0001\u0002-\u0000\u0014\u0000\u0000\u0000\b\u0000C�kM\u0019g�2�\u0005\u0000\u0000�\u0015\u0000\u0000\u0014\u0000$\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0002\u0000\u0000Policy-WinDomain.ini\n\u0000 \u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0018\u0000����\u0002z�\u0001����\u0002z�\u0001����\u0002z�\u0001PK\u0005\u0006\u0000\u0000\u0000\u0000\u0002\u0000\u0002\u0000�\u0000\u0000\u0000�\b\u0000\u0000\u0000\u0000"
						}
					]
				},
				{
					"name": "Import Platform",
					"request": {
						"method": "POST",
						"header": [
							{
								"value": "{{CyberArkLogonResult}}",
								"key": "Authorization",
								"type": "text"
							},
							{
								"value": "application/json",
								"type": "text",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"ImportFile\": {zip file in the format of BASE 64 array}\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/API/Platforms/Import",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"API",
								"Platforms",
								"Import"
							]
						},
						"description": "This method enables administrators to import new platforms and dependencies."
					},
					"response": []
				}
			]
		},
		{
			"name": "Safes",
			"item": [
				{
					"name": "v2 API",
					"item": [
						{
							"name": "Get All Safes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"value": "application/json",
										"key": "Content-Type",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Safes",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Safes"
									],
									"query": [
										{
											"key": "search",
											"value": "searchWord",
											"description": "Searches according to the Safe name. Search is performed according to the REST standard (search=\"search word\").",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset of the first Safe that is returned in the collection of results.",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "25",
											"description": "The maximum number of Safes that are returned. When used together with the offset parameter, this value determines the number of Safes to return, starting from the first Safe that is returned.",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "safeName asc",
											"description": "Sorts according to the safeName property in ascending order (default) or descending order to control the sort direction.",
											"disabled": true
										},
										{
											"key": "includeAccounts",
											"value": "false",
											"description": "Whether or not to return accounts for each Safe as part of the response. If not sent, the value is False.",
											"disabled": true
										},
										{
											"key": "extendedDetails",
											"value": "true",
											"description": "Whether or not to return all Safe details or only safeName as part of the response. If not sent, the value is True.",
											"disabled": true
										}
									]
								},
								"description": "This method returns a list of all Safes in the Vault that the user has permissions for. To run this web user, the user must be a member of the Safes in the Vault that are returned in the list."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"key": "Authorization",
												"disabled": true
											},
											{
												"type": "text",
												"value": "application/json",
												"key": "Content-Type",
												"disabled": true
											}
										],
										"url": {
											"raw": ""
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=809AD28AAFCE9858; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=00000002C39399D78441B5DC5782206114015D5E0C0F450850D1C063CA889719B6A3C3E500000000; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=ldap; path=/PasswordVault/; secure"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "Date",
											"value": "Sun, 11 Nov 2018 21:15:54 GMT"
										},
										{
											"key": "Content-Length",
											"value": "4385"
										}
									],
									"cookie": [],
									"body": "{\n    \"GetSafesResult\": [\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"AccountsFeedADAccounts\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"AccountsFeedDiscoveryLogs\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"D-CYBR-RESTAPI-ACCTS\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"D-LIN-ADMIN-USERS\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"D-LIN-ROOT-SSHKEYS\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"D-MYSQL-LOCAL-USERS\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"D-QUALYS-ACCTS\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"D-TENABLE-ACCTS\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"D-TEST-SAFE\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"Notification Engine\"\n        },\n        {\n            \"Description\": \"\",\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 5,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"P-WIN-LOCAL-ADMIN\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PasswordManager\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PasswordManager_Info\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PasswordManager_Pending\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PasswordManagerNG\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PasswordManagerNG_Info\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PasswordManagerShared\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PSMPADBridgeCustom\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": true,\n            \"SafeName\": \"PSMPADBUserProfile\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PSMUniversalConnectors\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": true,\n            \"SafeName\": \"PSMUnmanagedSessionAccounts\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PVWAConfig\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PVWAPublicData\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": true,\n            \"SafeName\": \"PVWAReports\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": true,\n            \"SafeName\": \"PVWATaskDefinitions\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PVWATicketingSystem\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PVWAUserPrefs\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"VaultInternal\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Get Safe by Platform ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"value": "application/json",
										"type": "text",
										"key": "Content-Type"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Platforms/{{PlatformName}}/Safes",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Platforms",
										"{{PlatformName}}",
										"Safes"
									]
								},
								"description": "This method returns all the safes according to the platform ID."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "{{CyberArkLogonResult}}"
											},
											{
												"value": "application/json",
												"type": "text",
												"key": "Content-Type"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/Platforms/{{PlatformName}}/Safes",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"Platforms",
												"{{PlatformName}}",
												"Safes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store, no-cache, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache,no-cache"
										},
										{
											"key": "Content-Length",
											"value": "327"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=866FD3AC28D737CF; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=00000002FC52F3BD1580B2D9C85EECD89F547E99F8BC6E4166F1D29B15241182E937C7C500000000; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=cyberark; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; SameSite=None; secure; HttpOnly"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=3159600;includeSubdomains;"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Apr 2021 20:35:54 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"value\": [\n        \"ConjurSync\",\n        \"D-Nix-Root\",\n        \"D-Win-DomainAdmins\",\n        \"D-Win-LocalAdmins\",\n        \"DemoSafe\",\n        \"Notification Engine\",\n        \"PasswordManager\",\n        \"PasswordManagerShared\",\n        \"PSM\",\n        \"PSMUniversalConnectors\",\n        \"PSMUnmanagedSessionAccounts\",\n        \"PVWAPublicData\",\n        \"PVWATicketingSystem\",\n        \"ResponseManager\",\n        \"TelemetryConfig\",\n        \"Test1234\",\n        \"VaultInternal\"\n    ],\n    \"count\": 17\n}"
								}
							]
						},
						{
							"name": "Get Safe Details",
							"request": {
								"method": "GET",
								"header": [
									{
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"key": "Authorization"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Safes/{{Safe}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Safes",
										"{{Safe}}"
									]
								},
								"description": "This method returns information about a specific Safe in the Vault."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"type": "text",
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}",
												"disabled": true
											},
											{
												"value": "application/json",
												"key": "Content-Type",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": ""
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=809AD28AAFCE9858; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=00000002C39399D78441B5DC5782206114015D5E0C0F450850D1C063CA889719B6A3C3E500000000; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=ldap; path=/PasswordVault/; secure"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "Date",
											"value": "Sun, 11 Nov 2018 21:16:41 GMT"
										},
										{
											"key": "Content-Length",
											"value": "180"
										}
									],
									"cookie": [],
									"body": "{\n    \"GetSafeResult\": {\n        \"Description\": \"\",\n        \"ManagingCPM\": \"PasswordManagerNG\",\n        \"NumberOfDaysRetention\": null,\n        \"NumberOfVersionsRetention\": 5,\n        \"OLACEnabled\": false,\n        \"SafeName\": \"P-WIN-LOCAL-ADMIN\"\n    }\n}"
								}
							]
						},
						{
							"name": "Get Safe Account Groups",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/Safes/{{Safe}}/AccountGroups",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"Safes",
										"{{Safe}}",
										"AccountGroups"
									]
								},
								"description": "This method returns all the existing account groups in a specific Safe. The user performing this task must have the following permissions in the Safe:\n\n* Add accounts\n* Update account content\n* Update account properties\n* Create folders"
							},
							"response": []
						},
						{
							"name": "Add Safe",
							"request": {
								"method": "POST",
								"header": [
									{
										"type": "text",
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"SafeName\": \"testSafe1\",\n    \"Description\": \"Desc1\",\n    \"OLACEnabled\": false,\n    \"ManagingCPM\": \"PasswordManager\",\n    \"NumberOfVersionsRetention\": null,\n    \"NumberOfDaysRetention\": 0,\n    \"AutoPurgeEnabled\": false,\n    \"Location\": \"\\\\\"\n}"
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Safes",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Safes"
									]
								},
								"description": "This method adds a new Safe to the Vault.\n\nThe user who runs this web service requires **Add Safes** permissions in the Vault."
							},
							"response": []
						},
						{
							"name": "Delete Safe",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"type": "text",
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Safes/{{Safe}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Safes",
										"{{Safe}}"
									]
								},
								"description": "This method deletes a Safe from the Vault.\n\nThe user who runs this web service requires **Manage Safe** permissions on the required Safe."
							},
							"response": [
								{
									"name": "204 No Content (Successful deletion)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"type": "text",
												"value": "{{CyberArkLogonResult}}",
												"key": "Authorization"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/Safes/{{Safe}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"Safes",
												"{{Safe}}"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=3F0AEF8F7659012B; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=00000002E6BCAAF8FBDBDAD7BB821DD6BBFAF8AB255F6E8F2D2E09DE6CEDC1D4213F15F200000000; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=ldap; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; SameSite=None; secure; HttpOnly"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=3159600;includeSubdomains;"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Date",
											"value": "Thu, 17 Dec 2020 00:37:43 GMT"
										}
									],
									"cookie": [],
									"body": null
								}
							]
						}
					]
				},
				{
					"name": "Safe Members",
					"item": [
						{
							"name": "v2 API",
							"item": [
								{
									"name": "Get Safe Members",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"description": "Session Authorization Token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/Safes/{{Safe}}/Members",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"Safes",
												"{{Safe}}",
												"Members"
											],
											"query": [
												{
													"key": "filter",
													"value": "memberType eq user AND membershipExpired eq false AND includePreDefinedUsers eq false",
													"description": "Filters are according to the REST standard. Search for Safe members using the following filters. Multiple filters can be applied using the AND operator. memberType, membershipExpired, includePreDefinedUsers",
													"disabled": true
												},
												{
													"key": "search",
													"value": "searchWord",
													"description": "Searches according to the Safe name. Search is performed according to the REST standard (search=\"search word\").",
													"disabled": true
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset of the first member that is returned in the collection of results.",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "25",
													"description": "The maximum number of members that are returned. When used together with the offset parameter, this value determines the number of Safes to return, starting from the first Safe that is returned.",
													"disabled": true
												},
												{
													"key": "sort",
													"value": "asc",
													"description": "Sorts according to the memberName property in ascending order (default) or descending order to control the sort direction.",
													"disabled": true
												}
											]
										},
										"description": "This method returns a list of the members of a Safe. To run this web service, the user must have **ViewSafeMembers** permissions in the Safe."
									},
									"response": []
								},
								{
									"name": "Add Safe Member",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"description": "Session Authorization Token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"memberName\": \"JonDoe\",\n    \"searchIn\": \"Vault\",\n    \"membershipExpirationDate\": 123456,\n    \"permissions\": {\n        \"useAccounts\": false,\n        \"retrieveAccounts\": false,\n        \"listAccounts\": false,\n        \"addAccounts\": false,\n        \"updateAccountContent\": false,\n        \"updateAccountProperties\": false,\n        \"initiateCPMAccountManagementOperations\": false,\n        \"specifyNextAccountContent\": false,\n        \"renameAccounts\": false,\n        \"deleteAccounts\": false,\n        \"unlockAccounts\": false,\n        \"manageSafe\": false,\n        \"manageSafeMembers\": false,\n        \"backupSafe\": false,\n        \"viewAuditLog\": false,\n        \"viewSafeMembers\": false,\n        \"accessWithoutConfirmation\": false,\n        \"createFolders\": false,\n        \"deleteFolders\": false,\n        \"moveAccountsAndFolders\": false,\n        \"requestsAuthorizationLevel1\": false,\n        \"requestsAuthorizationLevel2\": false\n    }\n}"
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/Safes/{{Safe}}}/Members",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"Safes",
												"{{Safe}}}",
												"Members"
											]
										},
										"description": "This method adds an existing user or group as a Safe member.\n\nThe user who runs this web service requires the following permissions in the Vault:\n\n* Manage Safe Members"
									},
									"response": []
								}
							],
							"description": "v10 and above"
						}
					],
					"description": "This section includes REST APIs for managing safe members."
				}
			],
			"description": "This section includes REST APIs for managing safes and safe members."
		},
		{
			"name": "SAML Authentication",
			"item": [
				{
					"name": "Logon",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"CyberArkLogonResult\", jsonData);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"type": "text",
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/API/auth/SAML/Logon?concurrentSession=true&apiUse=true&SAMLResponse={{SAMLToken}}",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"API",
								"auth",
								"SAML",
								"Logon"
							],
							"query": [
								{
									"key": "concurrentSession",
									"value": "true",
									"description": "Boolean value"
								},
								{
									"key": "apiUse",
									"value": "true",
									"description": "Never should be false"
								},
								{
									"key": "SAMLResponse",
									"value": "{{SAMLToken}}",
									"description": "The SAML Token returned from your IdP"
								}
							]
						},
						"description": "This method authenticates a user to the Vault using SAML authentication and returns a token that can be used in subsequent web services calls.\n\n[Example PowerShell Code is available here](https://gist.github.com/infamousjoeg/b44faa299ec3de65bdd1d3b8474b0649)"
					},
					"response": []
				},
				{
					"name": "Logoff",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"value": "{{SAMLToken}}",
								"type": "text",
								"key": "Authorization"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/api/auth/SAML/Logoff",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"api",
								"auth",
								"SAML",
								"Logoff"
							]
						},
						"description": "This method logs off the user and removes the Vault session. This web service is used to log off when the user authenticated with SAML authentication."
					},
					"response": []
				}
			]
		},
		{
			"name": "Logon - CyberArk Authentication",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"CyberArkLogonResult\", jsonData);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"{{apiUsername}}\",\n\t\"password\": \"{{apiPassword}}\",\n\t//\"newPassword\": \"<optional>\",\n\t\"concurrentSession\": \"true\"\n}"
				},
				"url": {
					"raw": "{{BaseURL}}/PasswordVault/API/Auth/CyberArk/Logon",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"PasswordVault",
						"API",
						"Auth",
						"CyberArk",
						"Logon"
					]
				},
				"description": "This method authenticates a user to the Vault and returns a token that can be used in subsequent web services calls. In addition, this method enables you to set a new password."
			},
			"response": [
				{
					"name": "200 OK",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"value": "application/json",
								"key": "Content-Type",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"{{apiUsername}}\",\n\t\"password\": \"{{apiPassword}}\"\n}"
						},
						"url": {
							"raw": ""
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Expires",
							"value": "-1"
						},
						{
							"key": "Server",
							"value": "Microsoft-IIS/10.0"
						},
						{
							"key": "Set-Cookie",
							"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
						},
						{
							"key": "Set-Cookie",
							"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
						},
						{
							"key": "Set-Cookie",
							"value": "CA11111=000000028C15398FB1A562CD1D4E91A6FA81FC6A06554E484D00D985DD8ED45237FD32F500000000; path=/PasswordVault/; secure; HttpOnly"
						},
						{
							"key": "Set-Cookie",
							"value": "CA22222=C78EA53FF658A303; path=/PasswordVault/; secure; HttpOnly"
						},
						{
							"key": "Set-Cookie",
							"value": "CA55555=cyberark; path=/PasswordVault/; secure; HttpOnly"
						},
						{
							"key": "X-UA-Compatible",
							"value": "IE=EmulateIE8"
						},
						{
							"key": "X-XSS-Protection",
							"value": "1; mode=block"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-FRAME-Options",
							"value": "SAMEORIGIN"
						},
						{
							"key": "Access-Control-Expose-Headers",
							"value": "Warning"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=31536000; includeSubDomains"
						},
						{
							"key": "Date",
							"value": "Sun, 11 Nov 2018 20:50:14 GMT"
						},
						{
							"key": "Content-Length",
							"value": "182"
						}
					],
					"cookie": [],
					"body": "\"OTc5NjZlZDUtZDY0YS00N2RmLThiNjYtM2FhMWE5YzMwMWEwO0M3OEVBNTNGRjY1OEEzMDM7MDAwMDAwMDI4QzE1Mzk4RkIxQTU2MkNEMUQ0RTkxQTZGQTgxRkM2QTA2NTU0RTQ4NEQwMEQ5ODVERDhFRDQ1MjM3RkQzMkY1MDAwMDAwMDA7\""
				}
			]
		}
	]
}